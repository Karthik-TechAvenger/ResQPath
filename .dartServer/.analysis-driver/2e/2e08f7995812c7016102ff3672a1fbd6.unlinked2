Ä˝setupParentDatacomputeMinIntrinsicWidthcomputeMaxIntrinsicWidthcomputeMinIntrinsicHeightcomputeMaxIntrinsicHeightcomputeDistanceToActualBaselinecomputeDryBaselinecomputeDryLayoutperformLayoutcomputeSizeForNoChildhitTestChildrenapplyPaintTransformpaintdeferToChildopaquetranslucentbehaviorhitTesthitTestSelfdebugFillPropertiesadditionalConstraints_additionalConstraintsdebugPaintSizemaxWidth	_maxWidth	maxHeight
_maxHeight_limitConstraints_computeSizeaspectRatio_aspectRatio_applyAspectRatio	stepWidth
_stepWidth
stepHeight_stepHeight
_applyStep_childConstraintsalwaysNeedsCompositingisRepaintBoundary_alphaopacity_opacityalwaysIncludeSemantics_alwaysIncludeSemanticspaintsChildupdateCompositedLayervisitChildrenForSemantics_currentlyIsRepaintBoundaryattachdetach_updateOpacitylayershaderCallback_shaderCallback	blendMode
_blendModeenabled_enabledfilter_filter_reclipaddListenerremoveListenergetClipgetApproximateClipRectshouldRecliptoStringshapetextDirectionclipper_clipper_markNeedsClip_defaultClip_clipclipBehavior_clipBehavior_updateClipdescribeApproximatePaintClip_debugPaint
_debugTextdisposeborderRadius_borderRadius_textDirection_cachedRect_cachedPath_getClipPath	elevation
_elevationshadowColor_shadowColorcolor_colordescribeSemanticsConfiguration_shape
background
foreground_painter
decoration_decorationposition	_positionconfiguration_configurationorigin_origin	alignment
_alignmenttransformHitTests
_transform	transformfilterQuality_filterQualitysetIdentityrotateXrotateYrotateZ	translatescale_effectiveTransform_resolve_resolvedAlignment_markNeedResolution_fitAffectsLayoutfit_fit_hasVisualOverflow_clearPaintData_updatePaintData_paintChildWithTransformtranslation_translationonPointerDownonPointerMoveonPointerUponPointerHoveronPointerCancelonPointerPanZoomStartonPointerPanZoomUpdateonPointerPanZoomEndonPointerSignalhandleEvent_opaquehitTestBehavioronEnteronHoveronExitcursor_cursorvalidForMouseTracker_validForMouseTrackertoImagetoImageSyncdebugSymmetricPaintCount_debugSymmetricPaintCountdebugAsymmetricPaintCount_debugAsymmetricPaintCountdebugResetMetrics!debugRegisterRepaintBoundaryPaintignoring	_ignoringignoringSemantics_ignoringSemanticsoffstage	_offstagesizedByParentperformResizedebugDescribeChildren	absorbing
_absorbingmetaDatavalidActions_validActionsonTap_onTaponLongPress_onLongPressonHorizontalDragUpdate_onHorizontalDragUpdateonVerticalDragUpdate_onVerticalDragUpdatescrollFactor_isValidAction_performSemanticScrollLeft_performSemanticScrollRight_performSemanticScrollUp_performSemanticScrollDown
properties_properties	container
_containerexplicitChildNodes_explicitChildNodesexcludeSemantics_excludeSemanticsblockUserActions_blockUserActions_updateAttributedFields_effectiveAttributedLabel_effectiveAttributedValue"_effectiveAttributedIncreasedValue"_effectiveAttributedDecreasedValue_effectiveAttributedHint_attributedLabel_attributedValue_attributedIncreasedValue_attributedDecreasedValue_attributedHint_performTap_performLongPress_performDismiss_performScrollLeft_performScrollRight_performScrollUp_performScrollDown_performIncrease_performDecrease_performCopy_performCut_performPaste$_performMoveCursorForwardByCharacter%_performMoveCursorBackwardByCharacter_performMoveCursorForwardByWord _performMoveCursorBackwardByWord_performSetSelection_performSetText!_performDidGainAccessibilityFocus!_performDidLoseAccessibilityFocus_performFocusblocking	_blocking	excluding
_excludingindex_indexlink_link_previousLayoutSizeshowWhenUnlinked_showWhenUnlinkedoffset_offsetleaderAnchor_leaderAnchorfollowerAnchor_followerAnchorgetCurrentTransformvalue_valuesized_sized_layerHandle7RenderProxyBoxRenderProxyBoxMixinHitTestBehavior!RenderProxyBoxWithHitTestBehaviorRenderConstrainedBoxRenderLimitedBoxRenderAspectRatioRenderIntrinsicWidthRenderIntrinsicHeightRenderIgnoreBaselineRenderOpacityRenderAnimatedOpacityMixinRenderAnimatedOpacityShaderCallbackRenderShaderMaskRenderBackdropFilterCustomClipperShapeBorderClipper_RenderCustomClipRenderClipRectRenderClipRRectRenderClipOvalRenderClipPath_RenderPhysicalModelBaseRenderPhysicalModelRenderPhysicalShapeDecorationPositionRenderDecoratedBoxRenderTransformRenderFittedBoxRenderFractionalTranslationPointerDownEventListenerPointerMoveEventListenerPointerUpEventListenerPointerCancelEventListener PointerPanZoomStartEventListener!PointerPanZoomUpdateEventListenerPointerPanZoomEndEventListenerPointerSignalEventListenerRenderPointerListenerRenderMouseRegionRenderRepaintBoundaryRenderIgnorePointerRenderOffstageRenderAbsorbPointerRenderMetaDataRenderSemanticsGestureHandlerRenderSemanticsAnnotationsRenderBlockSemanticsRenderMergeSemanticsRenderExcludeSemanticsRenderIndexedSemanticsRenderLeaderLayerRenderFollowerLayerRenderAnnotatedRegionÅ˙ColorGradientImageImageFilterPointerCancelEventPointerDownEventPointerEventPointerMoveEventPointerUpEventRenderProxySliver	RenderBoxRenderObjectWithChildMixinchildoptionalTypeArgsToverridevoidRenderObject
parentData
ParentDatadoublegetMinIntrinsicWidthgetMaxIntrinsicWidthgetMinIntrinsicHeightgetMaxIntrinsicHeightTextBaselinegetDistanceToActualBaselinecomputeDistanceToActualBaseline	protectedBoxConstraintsgetDryBaselineSizegetDryLayoutcomputeSizeForNoChildsizelayoutconstraintsparentUsesSizesmallestboolBoxHitTestResultOffsethitTestpositionMatrix4PaintingContext
paintChilddeferToChildcontainshitTestChildrentranslucentaddBoxHitTestEntryopaqueDiagnosticPropertiesBuilderdebugFillPropertiesEnumPropertydefaultValuedebugAssertIsValidmarkNeedsLayouthasBoundedWidthhasTightWidthminWidthcomputeMinIntrinsicWidthisFinitehasInfiniteWidthconstrainWidthcomputeMaxIntrinsicWidthhasBoundedHeighthasTightHeight	minHeightcomputeMinIntrinsicHeighthasInfiniteHeightconstrainHeightcomputeMaxIntrinsicHeightenforce	constrainzerodebugPaintSizePaintisEmptycolorcanvasdrawRectDiagnosticsPropertymaxWidth	maxHeightinfinityChildLayouterlayoutChildChildLayoutHelperdryLayoutChildDoublePropertyFlutterErrorruntimeTypeisTightcomputeDryBaselinetightAlignRowCrossAxisAlignmentstretchceiltightenwidthheightColumnNullgetAlphaFromOpacityintmarkNeedsCompositingBitsUpdatemarkNeedsCompositedLayerUpdatemarkNeedsSemanticsUpdateparentOffsetLayerOpacityLayeroldLayeralphapaintRenderObjectVisitorFlagPropertyvalueifTrueRenderSliverAnimatedOpacityRenderSliver_currentlyIsRepaintBoundary_alpha	Animation_opacityattachedopacityremoveListener_updateOpacityaddListener_alwaysIncludeSemanticsPipelineOwnerattachdetachalwaysIncludeSemanticsShaderRect
ShaderMasklinear	BlendModemodulateShaderMaskLayerlayermarkNeedsPaintneedsCompositingshadermaskRect	blendMode	pushLayerdebugCreatorsrcOverBackdropFilterLayerblurfilterClipRectClipPath	ClipRRectClipOvalShapeBorder
ListenablereclipVoidCallbackStringobjectRuntimeTypePathTextDirectiongetOuterPathtextDirectionshapeClip	antiAliasshouldRecliphasSizeperformLayoutgetClipnonehardEdgeantiAliasWithSaveLayergetApproximateClipRectTextPainterTileModerepeatedstrokeWidthstylePaintingStylestroketextTextSpan	TextStylefontSizertldisposeclipperclipBehavior_clipper_updateClip_clippushClipRectClipRectLayershift_debugPaint
_debugTextRRectBorderRadiusBorderRadiusGeometry_markNeedsClipresolvetoRRectpushClipRRect	outerRectClipRRectLayer	drawRRect	tlRadiusXaddOvalcenterdxdydistanceSquaredpushClipPathClipPathLayerdrawPathaddRectdebugDisableShadowsalwaysNeedsCompositingSemanticsConfigurationdescribeSemanticsConfiguration	elevationColorPropertyBoxShape	rectanglecircle
fromRectXYaddRRectshadowColorCanvas
drawShadow	drawPaint
DecorationImageConfiguration
backgroundempty
BoxPainterBoxDecorationImageProvidercreateBoxPaintercopyWithgetSaveCount	fromPartsDiagnosticsNodeErrorSummaryErrorDescriptionDiagnosticsTreeStyleerrorProperty	isComplexsetIsComplexHint
foregroundtoDiagnosticsNodenameAlignmentGeometryFilterQuality	transform	alignmentfilterQualityoriginAlignmentDirectionalcenterStart	Alignmentxltr	centerEndlocalToGlobalglobalToLocalcopysetIdentityrotateXrotateYrotateZ	translateyzscaleidentity	alongSizemultiplyaddWithPaintTransformMatrixUtilsgetAsTranslationdeterminantpushTransformTransformLayertranslationValuesmatrixstorageImageFilterLayerfilterLayerimageFilterTransformPropertyBoxFitcontain	scaleDowncoverfill	fitHeightfitWidthloosensizeConstraints,constrainSizeAndAttemptToPreserveAspectRatiounconstrainedSizeFittedSizesapplyBoxFitdestinationsourceinscribelefttopeverysetZerodebugNeedsLayoutaddWithPaintOffsetoffsetListenerPointerPanZoomStartEventPointerPanZoomUpdateEventPointerPanZoomEndEventPointerSignalEventbehaviorPointerHoverEventListenerbiggestHitTestEntrydebugHandleEventcallPointerHoverEventFlagsSummaryFunctionifEmptyMouseRegionMouseTrackerAnnotationMouseCursordeferPointerEnterEventListenerPointerExitEventListenerifFalsedebugDumpRenderTree
pixelRatiodebugNeedsPainttoImageFuturetoImageSyncincludedParentincludedChildMessagePropertyPercentPropertyunittooltipmessage
DeprecatedSemanticsNodevisitChildrenForSemanticsisBlockingUserActionsdescription%markNeedsLayoutForSizedByParentChangecomputeDryLayoutperformResizeListoffstagesparsedynamicGestureTapCallbackGestureLongPressCallbackGestureDragUpdateCallbackSemanticsActiontap
scrollLeftscrollRightSet	setEqualsonTap	longPressonLongPressonScrollRightonScrollLeftscrollUp
onScrollUp
scrollDownonScrollDownDragUpdateDetailsdeltaprimaryDeltaglobalPositionIterablePropertySemanticsPropertiesattributedLabelisSemanticBoundaryExcludeSemantics	SemanticsAttributedStringlabelattributedValueattributedIncreasedValueincreasedValueattributedDecreasedValuedecreasedValueattributedHinthintexplicitChildNodesscopesRoutetoggledcheckedenabled	isEnabled	isCheckedmixedisCheckStateMixed	isToggledselected
isSelectedbuttonisButtonexpanded
isExpandedlinkisLinklinkUrlsliderisSliderkeyboardKeyisKeyboardKeyheaderisHeaderheadingLevel	textFieldisTextFieldreadOnly
isReadOnly	focusableisFocusablefocused	isFocusedinMutuallyExclusiveGroupisInMutuallyExclusiveGroupobscured
isObscured	multilineisMultilinehiddenisHiddenimageisImage
identifierhintOverrides
isNotEmpty
namesRoute
liveRegionmaxValueLengthcurrentValueLengthsortKeytagForChildrenaddTagForChildren	onDismiss
onIncrease
onDecreaseonCopyonCutonPasteonMoveCursorForwardByCharacteronMoveCursorBackwardByCharacteronMoveCursorForwardByWordonMoveCursorBackwardByWordonSetSelection	onSetTextonDidGainAccessibilityFocusonDidLoseAccessibilityFocusonFocuscustomSemanticsActionsTextSelection+isBlockingSemanticsOfPreviouslyPaintedNodesisMergingSemanticsOfDescendants
ScrollViewscrollIndexCustomScrollViewindexInParentCompositedTransformTargetLeaderLayer	LayerLink
leaderSizeCompositedTransformFollowerFollowerLayertopLeft
bottomLeftgetLastTransformleadershowWhenUnlinkedlinkedOffsetunlinkedOffsetchildPaintBoundsfromLTRBnegativeInfinityAnnotatedRegionLayerLayerfindObjectLayerHandle	RenderBoxRenderObjectWithChildMixinRenderProxyBoxMixinRenderProxyBoxRenderAnimatedOpacityMixin
ListenableCustomClipper_RenderCustomClip_RenderPhysicalModelBase!RenderProxyBoxWithHitTestBehaviorMouseTrackerAnnotationÒÄ⁄Âh≤çy‰eàœ
%fÇ∂ÉPointerCancelEventPointerDownEventPointerEventPointerMoveEventPointerUpEvent Çèpackage:flutter/gestures.dart 
Å;ÅcColorGradientImageImageFilter Å%   Å5uiÅ8dart:ui  Åg   package:flutter/animation.dart  Åê   package:flutter/foundation.dart  Å∫   package:flutter/gestures.dart  Å‚   package:flutter/semantics.dart  Ç   package:flutter/services.dart  Ç4   box.dart  ÇG   
layer.dart  Ç\   layout_helper.dart  Çy   object.dart¿W’ ¿Ö<ì» <ÄÜÄ§Ä•Ä‘ÄÿÄ¸ÅÅ#Å$ÅeÅfÅèÅπÅ·Ç
Ç2Ç3ÇFÇ[ÇxÇéÇèÇªÇ—ÇÂÇıÉ	ÉÉÉ\É`É©É˜ÑFÑäÑéÑ›Ö.Ö}ÖëÖïÖ£ÖßÖ˜ÜÜ|ÜûÜ§ÜÏá9áKáráäáéáêáëáπáΩá˙àEàêàîà‰ââ&âÉâèâºää+äVä}äÉäáäàäîä«ä˛ããããBãyã}ã~ãäãΩãÙã¯ã˘åå8åoåsåtåÄå√å˚ç7ç;ç<çHçUç±çÍçÓçÔç˚ééHéõéüé†é¨é≈è
è9èEèIèJèìè◊êê3ê7ê8êDêîê‘êÿêŸêÂë+ë,ë8ëoëòë±ëøë≈ëÏëëÚëÛíí.í|í∏í»í…ììcìÄìäìãìÿîî"î$î%îdî~î»î˚ïïEïkïùï≥ï»ï…ññ]ñcñïñõñ‚ñ˛ñˇóóSóoóíóÍò,òaòiòoòÖòâòäòñò·ò‚òÓô3ô^ôªôøô¡ô¬ôÛô˜öFöèöﬂöÏöõ@õâõ¶õ⁄úúúPúiúú≤úÌù$ù9ù:ùzù¿ùÈûûEûpû~ûÑû®ûøû√ûƒû–üü]üãüëü“üÓ†"†]†c†u†y†z†Ü†π°°A°G°à°§°ÿ¢¢¢+¢/¢0¢<¢o¢À¢˙£ £B£_£î£—£◊£Í£Ó£Ô£˚§.§ä§π§ø•••S•ê•ñ•©•≠•Æ•∫¶¶o¶s¶t¶Ä¶ô¶“¶ÎßCß]ßjßπßøß√ßƒß–ß›®®i®∂®∫®ª®«©©2©B©[©ç©•©“™	™™$™.™2™3™?™Ñ™Ø´´´´´X´õ´ü´Ï¨7¨Ç¨—¨Í¨Ó≠9≠≠è≠øÆÆEÆKÆíÆ¶ÆªÆ—Æ¯Ø Ø@ØaØ~ØùØ≤Ø≥∞∞,∞@∞_∞y∞ó∞•∞´∞¬∞Ÿ∞›∞ﬁ±5±[±p±ê±™±…±◊±›±ı≤≤≤≤R≤m≤ì≤˛≥&≥ñ≥ù≥°≥¢¥¥¥o¥û¥§¥‰¥Ë¥È¥ıµµBµ[µ{µ∞µ∑µªµºµ»µ·µ˙∂∂L∂S∂W∂X∂d∂©∂‘∑-∑à∑å∑é∑è∑ ∑Œ∏∏i∏∑∏ªππSπãπèπ‹∫*∫y∫¿∫ƒªªaª≤º ºNºúºÍΩ8ΩÖΩÀææ<æyææ¬æÿæÓøø1øVøyøéøèøπøø¿ @¿ @V¿ @Ä¿ @ó¿ @π¿ @“¿ @Ó¿ A¿ A¿ A#¿ A=¿ AT¿ AX¿ AY¿ Ae¿ Aò¿ A≥¿ A◊¿ A›¿ B¿ B¿ B¿ B%¿ BX¿ Bs¿ Bó¿ Bù¿ B‘¿ Bÿ¿ BŸ¿ BÂ¿ C¿ C2¿ CU¿ C[¿ Cí¿ Cñ¿ Có¿ C£¿ C÷¿ C¿ D¿ D¿ DP¿ DT¿ DU¿ Då¿ D∫¿ D ¿ E¿ E1¿ Eg¿ Eæ¿ F¿ Fa¿ F¿ Fä¿ Fí¿ F•¿ FØ¿ F∞¿ Fœ¿ FÚ¿ F¯¿ F˘¿ G"¿ G5¿ G6¿ GÉ¿ Gœ¿ GÊ¿ H ¿ H%¿ H2¿ HX¿ H}¿ HÉ¿ HÑ¿ H“¿ I¿ Ih¿ I¿ IÄ¿ I®¿ IÃ¿ IÒ¿ I˜¿ I¯¿ J"¿ JH¿ Jm¿ Js¿ Jt¿ Jú¿ J¿¿ JÂ¿ JÎ¿ JÏ¿ K¿ K<¿ Ka¿ Kg¿ Kh¿ Kü¿ K£¿ K§¿ K∞¿ KΩ¿ K˝¿ L(¿ L,¿ L-¿ L9¿ Lã¿ LÎ¿ LÔ¿ L¿ L¸¿ M¿ M;¿ Mj¿ Mn¿ Mo¿ M{¿ M¿¿ MÎ¿ N+¿ N/¿ N1¿ N2¿ Nn¿ Nr¿ Nø¿ O¿ OC¿ OG¿ Oì¿ O„¿ P/¿ Py¿ P∆¿ PÓ¿ PÚ¿ QB¿ Qé¿ QÃ¿ Q–¿ R¿ Rk¿ R∫¿ R—¿ R’¿ R„¿ RÁ¿ S6¿ S}¿ SÀ¿ Sﬁ¿ T*¿ Tm¿ T∫¿ TÓ¿ U"¿ Ur¿ Ux¿ U»¿ UÈ¿ V¿ V¿ V1¿ VG¿ V|¿ V≥¿ V“¿ VÛ¿ W¿ W	¿ WT¿ WZ¿ WÇ¿ W©¿ Wø¿ W‡¿ X
¿ X)¿ X7¿ X=¿ XU¿ Xl¿ Xp¿ Xq¿ XΩ¿ X√¿ XÎ¿ Y¿ Y+¿ YM¿ Yw¿ Yó¿ Y•¿ Y´¿ Yƒ¿ Y€¿ Yﬂ¿ Y‡¿ Z¿ Z5¿ ZM¿ Za¿ Zg¿ Zê¿ Zî¿ Zï¿ Z°¿ Z‘¿ Z˝¿ [¿ [¿ [¿ [A¿ [Z¿ [l¿ [r¿ [∞¿ [⁄¿ [ﬁ¿ [ﬂ¿ [Î¿ \¿ \7¿ \I¿ \O¿ \j¿ \ü¿ \•¿ \¡¿ ] ¿ ],¿ ]0¿ ]1¿ ]=¿ ]p¿ ]â¿ ]õ¿ ]°¿ ]º¿ ]Ò¿ ]˜¿ ^¿ ^R¿ ^~¿ ^Ç¿ ^É¿ ^’¿ ^ı¿ _p¿ _Ê¿ _Ì¿ _Ò¿ _Ú¿ `S¿ `|¿ `È¿ `Ì¿ `Ó¿ `˙¿ a¿ aG¿ a`¿ aï¿ aµ¿ aº¿ a¿¿ a¡¿ aÕ¿ b¿ bH¿ bõ¿ bü¿ b†¿ b¨¿ b≈¿ bﬁ¿ c¿ c0¿ c7¿ c;¿ c<¿ cH¿ cç¿ c∏¿ cÙ¿ d2¿ d6¿ d8¿ d9¿ dn¿ dr¿ d¿¿ e¿ eE¿ eI¿ eï¿ eÂ¿ f3¿ f~¿ fÃ¿ fı¿ f˘¿ gF¿ gî¿ g„¿ g˙¿ g˛¿ h¿ h¿ h_¿ hß¿ hˆ¿ i	¿ iX¿ iú¿ iÎ¿ j ¿ jU¿ j¶¿ j¿¿ j÷¿ jÎ¿ jÏ¿ j¯¿ k+¿ kD¿ kV¿ k\¿ kx¿ k∂¿ kº¿ kŸ¿ l	¿ l¿ l¿ l¿ lM¿ lf¿ lx¿ l~¿ lö¿ lÿ¿ lﬁ¿ l˚¿ m+¿ m/¿ m0¿ m<¿ mo¿ mò¿ mú¿ mù¿ mÔ¿ n¿ n)¿ nÅ¿ nÖ¿ nÜ¿ nÁ¿ o¿ o}¿ oÅ¿ oÇ¿ oé¿ oõ¿ o€¿ oÙ¿ p)¿ pI¿ pP¿ pT¿ pU¿ pa¿ p≥¿ p‹¿ q/¿ q3¿ q4¿ q@¿ qY¿ qr¿ q§¿ qƒ¿ qÀ¿ qœ¿ q—¿ q“¿ r¿ rG¿ r™¿ r√¿ rŸ¿ rÓ¿ rÔ¿ r˚¿ s;¿ sL¿ sP¿ sQ¿ s]¿ s∂¿ s«¿ sÀ¿ sÕ¿ sŒ¿ s˘¿ s˝¿ tM¿ tÇ¿ tÜ¿ t—¿ u¿ uc¿ u≥¿ u‡¿ v¿ v¿ v`¿ vr¿ vå¿ vµ¿ vÀ¿ v¸¿ w¿ wP¿ wá¿ wú¿ wù¿ w©¿ wÎ¿ wÏ¿ w¯¿ x0¿ x1¿ x?¿ x@¿ xu¿ x{¿ xÀ¿ x‰¿ xÍ¿ y.¿ yu¿ yÜ¿ y®¿ yª¿ yŸ¿ z¿ z ¿ z.¿ z4¿ zp¿ zô¿ zØ¿ z‰¿ {¿ {D¿ {J¿ {p¿ {≤¿ {‘¿ {⁄¿ {ﬁ¿ {ﬂ¿ |%¿ |+¿ |i¿ |o¿ |à¿ |∆¿ |Ê¿ }¿ }=¿ }K¿ }Q¿ }v¿ }ñ¿ }ö¿ }õ¿ }ß¿ }Õ¿ }Ô¿ ~¿ ~
¿ ~¿ ~¿ ~j¿ ~•¿ ~ø¿ ~—¿ ~’¿ ~÷¿ ~‚¿ ¿ A¿ O¿ U¿ w¿ {¿ |¿ à¿ »¿ Ä¿ Ä#¿ Ä)¿ Ä-¿ Ä.¿ Ä:¿ Ä¿ Ä™¿ Ä‚¿ Å_¿ Åc¿ Åe¿ Åf¿ Å∑¿ Åª¿ Ç
¿ Ç_¿ Ç°¿ Ç˝¿ É¿ É¿ É¿ Éh¿ Éç¿ Éé¿ Éö¿ ÉÌ¿ Ñ/¿ ÑP¿ Ñi¿ Ñm¿ Ñn¿ Ñ¨¿ Ñ≤¿ Ö¿ Ö¿ Ö!¿ Öj¿ Öí¿ Öò¿ ÖË¿ Ü/¿ Ü]¿ Ü|¿ Ü•¿ Ü¬¿ Ü–¿ Ü÷¿ Ü˛¿ á,¿ á2¿ áH¿ á\¿ áá¿ áç¿ á£¿ áß¿ á®¿ áÓ¿ áÙ¿ à2¿ à8¿ àQ¿ àW¿ àß¿ àÓ¿ â-¿ âN¿ ây¿ â•¿ â≥¿ âπ¿ âﬁ¿ â˛¿ ä¿ ä¿ ä¿ ä4¿ äM¿ äv¿ äΩ¿ ä¡¿ ä¬¿ äŒ¿ ä‡¿ ã¿ ã ¿ ã$¿ ã%¿ ã?¿ ãa¿ ãõ¿ ãπ¿ ã˝¿ å.¿ å~¿ å®¿ å∞¿ åÿ¿ ç¿ ç&¿ ç.¿ ç4¿ ç8¿ ç9¿ çE¿ çn¿ çê¿ çÆ¿ ç≤¿ ç≥¿ çø¿ çˆ¿ é¿ é¿ é!¿ éC¿ éG¿ éH¿ éT¿ éî¿ éÿ¿ éÔ¿ éı¿ é˘¿ é˙¿ è¿ èK¿ èv¿ è∆¿ êC¿ êG¿ êI¿ êJ¿ êë¿ êï¿ êÊ¿ ë¿ ër¿ ëß¿ ë¡¿ ëÈ¿ í¿ í(¿ í>¿ íZ¿ íî¿ íò¿ íö¿ íõ¿ í‰¿ íË¿ ì$¿ ì[¿ ì\¿ ìï¿ ìô¿ ìË¿ î¿ îM¿ î•¿ î∫¿ î–¿ î¸¿ ï*¿ ïS¿ ïr¿ ïá¿ ïà¿ ïî¿ ï’¿ ï÷¿ ñ¿ ñ¿ ñi¿ ñ≤¿ ñ∏¿ ñ¯¿ ó¿ ó`¿ óò¿ ó–¿ óÚ¿ ò¿ òC¿ òQ¿ òW¿ òt¿ òä¿ òé¿ òè¿ ò”¿ òŸ¿ ô(¿ ôs¿ ôú¿ ô¥¿ ô◊¿ ôˆ¿ ö¿ ö
¿ ö"¿ ö8¿ ö<¿ ö=¿ öI¿ ö}¿ ö~¿ öä¿ ö¡¿ ö⁄¿ ö˙¿ õ¿ õ*¿ õa¿ õÑ¿ õ¶¿ õ‹¿ õÓ¿ ú¿ ú/¿ ú;¿ úH¿ ú\¿ úb¿ úf¿ úh¿ úi¿ ú∑¿ úª¿ ù¿ ù¿ ùS¿ ùt¿ ùy¿ ùπ¿ ù“¿ ùË¿ û¿ û9¿ ûR¿ ûW¿ ûo¿ ûâ¿ ûß¿ ûª¿ ûº¿ û»¿ ü¿ ü¿ üc¿ üÉ¿ üî¿ ü∞¿ üÃ¿ ü⁄¿ ü‡¿ üˆ¿ †¿ †¿ †¿ †a¿ †r¿ †x¿ †≈¿ †ÿ¿ ° ¿ °¿ °?¿ °[¿ °i¿ °o¿ °Ñ¿ °ö¿ °û¿ °ü¿ °¯¿ ¢¿ ¢¿ ¢E¿ ¢n¿ ¢Ü¿ ¢©¿ ¢»¿ ¢÷¿ ¢‹¿ ¢Ù¿ £
¿ £¿ £¿ £¿ £O¿ £P¿ £\¿ £ì¿ £®¿ £Ã¿ £⁄¿ £‡¿ £·¿ £˙¿ §¿ §A¿ §`¿ §Ö¿ §ª¿ §Õ¿ §˘¿ •¿ •¿ •'¿ •;¿ •A¿ •E¿ •G¿ •H¿ •u¿ •y¿ •¬¿ •”¿ •◊¿ ¶(¿ ¶,¿ ¶u¿ ¶¡¿ ¶“¿ ¶÷¿ ß!¿ ßo¿ ß¿¿ ®¿ ®¿ ®"¿ ®&¿ ®o¿ ®∫¿ ©¿ ©L¿ ©õ¿ ©–¿ ©¿ ©ˆ¿ ™G¿ ™â¿ ™ä¿ ™ß¿ ™®¿ ™Î¿ ™Ò¿ ´@¿ ´ê¿ ´ß¿ ´≥¿ ¨ ¿ ¨¿ ¨Q¿ ¨Ç¿ ¨à¿ ¨◊¿ ≠'¿ ≠>¿ ≠J¿ ≠ù¿ ≠û¿ ≠È¿ Æ¿ Æ%¿ Æ&¿ Æk¿ ÆÆ¿ Æ‚¿ ÆË¿ Ø,¿ Øs¿ Ø∂¿ Ø˝¿ ∞=¿ ∞>¿ ∞ã¿ ∞‹¿ ±-¿ ±~¿ ±Ñ¿ ±Ã¿ ≤¿ ≤(¿ ≤.¿ ≤|¿ ≤à¿ ≤é¿ ≤‘¿ ≥ ¿ ≥T¿ ≥ê¿ ≥ë¿ ≥ù¿ ≥ﬁ¿ ≥‡¿ ≥·¿ ¥(¿ ¥_¿ ¥Ü¿ ¥å¿ ¥‘¿ µ#¿ µp¿ µ≥¿ µ–¿ µÈ¿ ∂¿ ∂¿ ∂¿ ∂G¿ ∂b¿ ∂c¿ ∂´¿ ∂±¿ ∂¸¿ ∑#¿ ∑I¿ ∑J¿ ∑¿ ∑ã¿ ∑ß¿ ∑¯¿ ∑¸¿ ∑˝¿ ∏	¿ ∏?¿ ∏w¿ ∏ä¿ ∏ê¿ ∏·¿ π¿ πF¿ πJ¿ πL¿ πM¿ πä¿ π†¿ π∂¿ π’¿ π˝¿ ∫¿ ∫=¿ ∫R¿ ∫S¿ ∫ë¿ ∫æ¿ ∫‹¿ ª
¿ ª,¿ ª:¿ ª@¿ ªs¿ ªé¿ ªƒ¿ ª¯¿ º4¿ ºc¿ º{¿ ºÅ¿ ºï¿ º«¿ ºˆ¿ º¸¿ Ω ¿ Ω¿ Ω¿ Ω2¿ ΩK¿ Ωv¿ Ωz¿ Ω{¿ Ωá¿ Ωô¿ Ω«¿ Ω€¿ Ωﬂ¿ Ω‡¿ Ω˙¿ æ¿ æ"¿ æB¿ æF¿ æG¿ æ]¿ æi¿ æj¿ æî¿ æµ¿ æ◊¿ æÙ¿ ø¿ ø¿ ø¿ ø,¿ ø-¿ ø9¿ øR¿ øÉ¿ øû¿ øπ¿ øÕ¿ ø”¿ ø◊¿ øÿ¿ øÔ¿ ¿&¿ ¿*¿ ¿+¿ ¿7¿ ¿r¿ ¿é¿ ¿§¿ ¿π¿ ¿”¿ ¿Ó¿ ¡¿ ¡c¿ ¡i¿ ¡m¿ ¡n¿ ¡Ñ¿ ¡ü¿ ¡´¿ ¡Î¿ ¡˚¿ ¬¿ ¬@¿ ¬W¿ ¬{¿ ¬Ú¿ √¿ √;¿ √E¿ √a¿ √â¿ √´¿ √…¿ √ﬁ¿ √˙¿ ƒ ¿ ƒ>¿ ƒM¿ ƒZ¿ ƒ¨¿ ƒ∂¿ ƒ ¿ ƒ›¿ ƒÁ¿ ƒÎ¿ ƒÏ¿ ƒ¯¿ ≈¿ ≈&¿ ≈=¿ ≈R¿ ≈V¿ ≈X¿ ≈Y¿ ≈Ä¿ ≈Ñ¿ ≈“¿ ∆#¿ ∆9¿ ∆p¿ ∆í¿ ∆ò¿ ∆Ë¿ ∆˘¿ ∆ˇ¿ «D¿ «W¿ «h¿ «{¿ «ì¿ «ô¿ «ö¿ «¶¿ «’¿ «÷¿ «‚¿ »*¿ »F¿ »[¿ »x¿ »†¿ »∂¿ »æ¿ »ƒ¿ »˙¿ »˛¿ »ˇ¿ …¿ …B¿ …[¿ …Ç¿ …ô¿ …ø¿ …€¿ …Ì¿ …ˇ¿  ¿  <¿  i¿  t¿  É¿  Ø¿  ≈¿  Õ¿  ⁄¿  Ó¿  Ù¿  ¯¿  ˘¿ À¿ ÀE¿ ÀU¿ Àp¿ Àü¿ À»¿ Ã¿ Ãå¿ Ãñ¿ Ãû¿ Ã±¿ Ãª¿ Ãø¿ Ã¡¿ Ã¬¿ ÃÒ¿ Ãı¿ ÕE¿ Õì¿ Õ©¿ Õ‚¿ Œ¿ Œ¿ Œb¿ Œ~¿ ŒÑ¿ Œƒ¿ Œ ¿ œ¿ œ#¿ œ4¿ œo¿ œÇ¿ œö¿ œº¿ œ·¿ –¿ –	¿ –9¿ –?¿ –ä¿ –•¿ –´¿ –·¿ —¿ —A¿ —r¿ —î¿ —¢¿ —®¿ —√¿ —Ÿ¿ —›¿ —ﬁ¿ “¿ “S¿ “t¿ “†¿ “√¿ “—¿ “◊¿ “Û¿ ”	¿ ”¿ ”¿ ”¿ ”x¿ ”y¿ ”Ö¿ ”Õ¿ ”È¿ ”˛¿ ‘¿ ‘C¿ ‘Y¿ ‘a¿ ‘g¿ ‘ù¿ ‘°¿ ‘¢¿ ‘Æ¿ ‘Â¿ ‘˛¿ ’%¿ ’<¿ ’c¿ ’¿ ’ë¿ ’≠¿ ’ø¿ ’÷¿ ’¸¿ ÷*¿ ÷5¿ ÷D¿ ÷p¿ ÷Ü¿ ÷é¿ ÷õ¿ ÷Ø¿ ÷µ¿ ÷π¿ ÷∫¿ ÷∆¿ ◊¿ ◊¿ ◊1¿ ◊`¿ ◊â¿ ◊—¿ ÿL¿ ÿV¿ ÿ^¿ ÿq¿ ÿ{¿ ÿ¿ ÿÅ¿ ÿÇ¿ ÿ•¿ ÿ©¿ ÿ˜¿ Ÿ@¿ Ÿä¿ Ÿ¡¿ Ÿ‰¿ ŸÍ¿ ⁄:¿ ⁄W¿ ⁄]¿ ⁄¢¿ ⁄µ¿ ⁄∆¿ ⁄Ÿ¿ ⁄Ò¿ ⁄˜¿ ⁄¯¿ €¿ €&¿ €'¿ €H¿ €g¿ €Å¿ €¥¿ €∫¿ €“¿ €÷¿ €◊¿ €„¿ ‹¿ ‹¿ ‹¿ ‹g¿ ‹z¿ ‹ï¿ ‹æ¿ ›
¿ ›,¿ ›\¿ ›ç¿ ›î¿ ›…¿ ﬁ¿ ﬁ¿ ﬁ¿ ﬁU¿ ﬁY¿ ﬁZ¿ ﬁf¿ ﬁù¿ ﬁ∂¿ ﬁ›¿ ﬁÙ¿ ﬂ¿ ﬂ6¿ ﬂH¿ ﬂZ¿ ﬂz¿ ﬂë¿ ﬂ∑¿ ﬂ‰¿ ﬂÔ¿ ﬂ˛¿ ‡*¿ ‡@¿ ‡H¿ ‡U¿ ‡i¿ ‡o¿ ‡s¿ ‡t¿ ‡Ä¿ ‡¿¿ ‡–¿ ‡Î¿ ·¿ ·C¿ ·ò¿ ‚+¿ ‚5¿ ‚=¿ ‚P¿ ‚Z¿ ‚^¿ ‚`¿ ‚a¿ ‚É¿ ‚á¿ ‚Ã¿ „¿ „¿ „O¿ „m¿ „q¿ „´¿ „Î¿ ‰.¿ ‰e¿ ‰Ä¿ ‰Ü¿ ‰◊¿ Â$¿ Ât¿ Âá¿ Âç¿ Â“¿ ÂÂ¿ Âˆ¿ Ê	¿ Ê!¿ Ê'¿ Ê(¿ Ê4¿ Êt¿ Êu¿ ÊÅ¿ Ê…¿ ÊÂ¿ Ê˙¿ Á¿ Á?¿ ÁU¿ Á]¿ Ác¿ Áô¿ Áù¿ Áû¿ Á™¿ Á·¿ Á˙¿ Ë!¿ Ë8¿ Ë^¿ Ëz¿ Ëå¿ Ë™¿ Ëº¿ Ë”¿ Ë˘¿ È&¿ È1¿ È@¿ Èl¿ ÈÇ¿ Èä¿ Èó¿ È´¿ È±¿ Èµ¿ È∂¿ È¬¿ Í¿ Í¿ Í-¿ Í\¿ ÍÖ¿ ÍÃ¿ Î¿ Î¿ Î¿ Î&¿ Î0¿ Î4¿ Î6¿ Î7¿ Î{¿ Î¿ Î–¿ Ï¿ ÏP¿ ÏÜ¿ Ï£¿ ÏΩ¿ Ï‹¿ Ïˆ¿ Ì¿ Ì:¿ ÌM¿ Ìn¿ Ìç¿ Ì§¿ Ì«¿ Ì»¿ Ó¿ Ó¿ Ó>¿ ÓD¿ Óí¿ Ó¿¿ ÓÊ¿ Ó˚¿ Ô¿ Ô5¿ ÔS¿ Ôa¿ Ôg¿ Ô£¿ Ôª¿ ÔÛ¿ ¿ !¿ 7¿ ;¿ <¿ T¿ }¿ ì¿ ¥¿ ‘¿ ‚¿ Ë¿ Ò¿ Ò¿ Ò¿ Ò¿ Ò9¿ ÒV¿ Òf¿ ÒÅ¿ Òõ¿ Ò©¿ ÒØ¿ Ò√¿ ÒŸ¿ Ò›¿ Òﬁ¿ ÒÍ¿ Ú1¿ Úc¿ ÚÖ¿ Úâ¿ Úä¿ Úñ¿ Ú‹¿ Û¿ ÛE¿ Ûy¿ Û≥¿ Û∑¿ Ûπ¿ Û∫¿ Ûˇ¿ Ù¿ Ù¿ ÙV¿ Ùö¿ Ùƒ¿ Ù ¿ ÙÈ¿ ÙÔ¿ ı%¿ ı=¿ ıN¿ ıw¿ ıè¿ ıØ¿ ı ¿ ı‰¿ ˆ¿ ˆ6¿ ˆM¿ ˆr¿ ˆs¿ ˆë¿ ˆó¿ ˆÊ¿ ˆ˛¿ ˜¿ ˜1¿ ˜O¿ ˜i¿ ˜w¿ ˜}¿ ˜ë¿ ˜ß¿ ˜´¿ ˜¨¿ ˜‹¿ ˜‚¿ ¯-¿ ¯H¿ ¯N¿ ¯ô¿ ¯ü¿ ¯Ÿ¿ ˘¿ ˘+¿ ˘U¿ ˘v¿ ˘Ñ¿ ˘ä¿ ˘•¿ ˘ª¿ ˘ø¿ ˘¿¿ ˘Ã¿ ˘Á¿ ˘¸¿ ˙&¿ ˙C¿ ˙í¿ ˙‰¿ ˙Î¿ ˙Ô¿ ˙¿ ˙¸¿ ˚D¿ ˚`¿ ˚u¿ ˚í¿ ˚∫¿ ˚–¿ ˚ÿ¿ ˚ﬁ¿ ¸¿ ¸¿ ¸¿ ¸%¿ ¸\¿ ¸u¿ ¸â¿ ¸ó¿ ¸ù¿ ¸û¿ ¸±¿ ¸Â¿ ˝'¿ ˝E¿ ˝U¿ ˝v¿ ˝ï¿ ˝π¿ ˝“¿ ˝Ê¿ ˛
¿ ˛7¿ ˛f¿ ˛s¿ ˛}¿ ˛õ¿ ˛£¿ ˛∂¿ ˛¿¿ ˛¡¿ ˛Î¿ ˇ¿ ˇ0¿ ˇK¿ ˇ`¿ ˇs¿ ˇê¿ ˇô¿ ˇü¿ ˇÎ¿ ¿ ¿ 2¿ Q¿ Z¿ `¿ É¿ õ¿ ©¿ √¿ —¿¿¿[¿™¿˘¿=¿z¿Ñ¿™¿≥¿›¿ˇ¿¿¿¿A¿T¿^¿b¿c¿o¿µ¿·¿%¿{¿¿Å¿Ç¿«¿À¿¿¿!¿%¿q¿Å¿ƒ¿Î¿Ò¿*¿0¿f¿~¿è¿ø¿◊¿Ú¿¿=¿^¿_¿k¿´¿¨¿∏¿ ¿¿1¿N¿v¿å¿î¿ö¿–¿‘¿’¿·¿	¿	1¿	E¿	S¿	Y¿	Z¿	m¿	ü¿	Ω¿	Õ¿	Ó¿
¿
0¿
H¿
\¿
Ä¿
≠¿
‹¿
È¿
Û¿¿¿,¿6¿7¿a¿ç¿¶¿∫¿œ¿‚¿ˇ¿¿¿Z¿t¿ã¿ü¿æ¿«¿Õ¿Ô¿¿¿/¿=¿n¿ã¿«¿¿e¿©¿Ê¿¿¿¿H¿j¿q¿r¿Ç¿¨¿ø¿…¿Õ¿Œ¿⁄¿ ¿L¿ü¿£¿•¿¶¿À¿Â¿¿'¿(¿a¿o¿q¿r¿µ¿Á¿¿¿Z¿ô¿ü¿Ó¿¿0¿T¿ï¿÷¿Ï¿¿*¿Q¿f¿g¿¿Ä¿†¿¶¿»¿Ù¿¿3¿S¿a¿g¿Ä¿ï¿Æ¿ƒ¿»¿…¿¿D¿d¿è¿≠¿ª¿¡¿ÿ¿Ó¿Ú¿Û¿>¿Ç¿ú¿¢¿Â¿+¿e¿ä¿∫¿›¿Î¿Ò¿¿#¿'¿(¿4¿F¿_¿t¿à¿Õ¿¿b¿Æ¿È¿ˇ¿¿¿¿#¿<¿Q¿U¿V¿b¿à¿‰¿Ë¿È¿ı¿,¿k¿¬¿˜¿¿$¿\¿q¿}¿¡¿”¿¿L¿¥¿“¿.¿é¿Î¿˙¿ t¿ È¿ ˜¿!¿!¿!"¿!D¿!h¿!p¿!v¿!ò¿!Õ¿"¿"3¿"W¿"_¿"e¿"i¿"j¿"v¿"ª¿"Ê¿#-¿#ä¿#é¿#ê¿#ë¿#…¿#¯¿$1¿$E¿$e¿$y¿$õ¿$Ω¿$‡¿%¿%¿%.¿%N¿%n¿%ñ¿%æ¿%ÿ¿%‹¿%›¿&-¿&e¿&k¿&∫¿&˝¿'¿'1¿'O¿'k¿'y¿'¿'î¿'™¿' ¿'Œ¿'œ¿(¿(¿(e¿(Ø¿(µ¿)¿)E¿)ï¿)‰¿*#¿*t¿*¶¿*«¿*Û¿+¿+ ¿+&¿+>¿+T¿+t¿+x¿+y¿+µ¿+ª¿,
¿,B¿,x¿,ô¿,≈¿,Ë¿,ˆ¿,¸¿-¿-.¿-N¿-R¿-S¿-_¿-≠¿-Æ¿-˚¿.D¿.g¿.m¿.Ω¿/¿/(¿/)¿/@¿/è¿/Æ¿/¥¿0 ¿0O¿0t¿0æ¿0›¿0Î¿0Ò¿1¿1-¿1M¿1Q¿1R¿1§¿1™¿1Í¿2 ¿2A¿2m¿2ê¿2û¿2§¿2‡¿2¸¿34¿3\¿3b¿3x¿3|¿3}¿3Æ¿3≈¿3‰¿3˙¿4¿4¿4¿4b¿4É¿4•¿4ª¿4€¿4ﬂ¿4‡¿5#¿5D¿5f¿5|¿5ú¿5†¿5°¿5‰¿6¿6'¿6=¿6]¿6a¿6b¿6§¿6Â¿7	¿7¿7?¿7C¿7D¿7s¿7¶¿7∆¿7‹¿7¸¿8 ¿8¿8&¿8r¿8™¿8√¿8…¿8¯¿9¿9E¿9K¿9d¿9â¿9¿¿9¯¿9˛¿: ¿:E¿:Ä¿:Ü¿:°¿:’¿:€¿:Ó¿:Ú¿:Û¿:ˇ¿;G¿;~¿;ª¿;˘¿<¿<K¿<O¿<P¿<\¿<¨¿<Î¿=¿=U¿=o¿=´¿=Ì¿=ˆ¿=˝¿>¿>¿>¿>E¿>^¿>î¿>∑¿?¿?'¿?|¿?¿¿?ˆ¿@!¿@;¿@O¿@[¿@Ñ¿@¢¿@∂¿@Õ¿@Ê¿A7¿AD¿AU¿Aã¿A£¿A≠¿Aº¿B¿B`¿Bù¿B√¿BÏ¿B˜¿C4¿C`¿Cq¿C™¿C¥¿CÏ¿D ¿D.¿DE¿DS¿D[¿Da¿De¿Df¿Dr¿D≥¿D·¿DÂ¿DÊ¿DÚ¿E7¿Eb¿E©¿EÏ¿F@¿F•¿F¸¿G ¿G¿G¿GH¿Gw¿G´¿Gø¿G‡¿H¿H6¿HL¿Ho¿HÇ¿H°¿H»¿HÌ¿I¿I¿IV¿Iw¿Ix¿Ió¿I∂¿IÃ¿I–¿I—¿I¯¿J¿J(¿J=¿JX¿Jq¿Jâ¿J¶¿J¬¿J⁄¿J¿Jˆ¿J˙¿J˚¿KC¿K]¿Kl¿KÜ¿Kü¿K≠¿K≥¿K‘¿KÊ¿L(¿LA¿LN¿Lg¿L¿LÖ¿Lâ¿Lä¿L√¿L…¿M¿Mj¿Mö¿M†¿Mﬂ¿N¿N8¿NX¿NÉ¿N¢¿N∞¿N∂¿NŒ¿NÂ¿O ¿O¿O¿OA¿OG¿Oñ¿OŒ¿P¿P%¿PQ¿Pt¿PÇ¿Pà¿P§¿Pª¿P÷¿P⁄¿P€¿Q¿Q¿Q)¿Q6¿Qv¿Qè¿QŸ¿Q⁄¿QÔ¿R¿RU¿R«¿S¿S¿S:¿ST¿Ss¿Së¿S´¿T¿T	¿T¿T9¿T?¿TC¿TD¿TP¿Ti¿TÇ¿T≈¿T⁄¿T˘¿U@¿U¥¿UÔ¿V¿V'¿VA¿V`¿V~¿Vò¿V¿V¯¿W¿W¿WA¿WG¿WK¿WL¿Wh¿W¿WÄ¿W∂¿Wº¿W€¿X¿X'¿XH¿Xj¿Xá¿Xü¿X¡¿X«¿XÀ¿XÃ¿XÁ¿Y¿Y¿Y!¿Y"¿Y>¿Y\¿Yj¿Yp¿Yq¿Yä¿Y¨¿Y”¿Y‡¿Z¿Z@¿ZÑ¿ZŒ¿[¿[{¿[·¿\H¿\z¿\◊¿\¸¿]4¿]¿]Ö¿]â¿]ä¿]ﬂ¿^*¿^I¿^m¿^á¿^ó¿^¨¿^¡¿_¿_¿_$¿_V¿_\¿_m¿_q¿_r¿_~¿_µ¿_ı¿`¿`	¿`!¿`<¿`x¿`ú¿`∂¿`∆¿`‚¿a¿aO¿as¿a|¿aâ¿a¬¿a»¿aÃ¿aÕ¿aŸ¿b)¿bc¿bw¿b}¿bï¿bæ¿b€¿bı¿c1¿cs¿c|¿cÉ¿cá¿cà¿cî¿c∫¿c‹¿d¿d¿d¿d¿d_¿d~¿dô¿d¶¿d¿¿dÁ¿dÌ¿dÒ¿dÚ¿d˛¿eC¿en¿e§¿e¯¿f]¿fa¿fc¿fd¿f®¿f¨¿f¸¿gE¿g|¿gÄ¿gΩ¿h
¿h¿hX¿hú¿hº¿h›¿i ¿i¿i9¿iN¿iO¿iò¿iû¿iÌ¿j&¿jP¿jg¿jâ¿j™¿j∏¿jæ¿jÿ¿jÓ¿k¿k¿k¿k¿kg¿k™¿kÁ¿l%¿l?¿lw¿l{¿l|¿l…¿m¿m5¿m;¿mã¿m‹¿mˆ¿m˜¿n¿nS¿nr¿nò¿n∏¿o¿o¿o2¿on¿o∞¿oπ¿o¿¿oƒ¿o≈¿o—¿p¿p'¿p@¿pc¿pî¿p∆¿p–¿p÷¿p⁄¿p€¿pÁ¿q(¿qA¿qd¿qà¿qè¿qì¿qî¿q†¿qÂ¿r¿r]¿r¥¿r∏¿r∫¿rª¿rı¿r˘¿s-¿sw¿sx¿s≤¿s∂¿sÍ¿t4¿t5¿tm¿tq¿t•¿tÎ¿tÏ¿u(¿u,¿u`¿uÆ¿uØ¿uÒ¿uı¿v)¿vÉ¿vÑ¿v«¿vÀ¿vˇ¿w[¿w\¿wú¿w†¿w‘¿x*¿x+¿xg¿xk¿xü¿xÌ¿xÓ¿y(¿y,¿yt¿y¿¿yƒ¿z¿zZ¿zÖ¿zâ¿z…¿zÕ¿{¿{d¿{≠¿{≥¿{˝¿|¿|/¿|G¿|]¿|v¿|ê¿|∞¿|—¿|Ô¿}	¿}¿}.¿}4¿}5¿}¿}–¿}‡¿~¿~¿~\¿~á¿~à¿~÷¿~ı¿¿¿k¿ò¿ô¿È¿Ä¿ÄH¿ÄI¿Äé¿Ä…¿Ä ¿ÄÛ¿Å0¿Å1¿ÅX¿Åè¿Åê¿ÅÃ¿Å˚¿Å¸¿Ç¿ÇC¿Çc¿Çg¿Çh¿Çt¿Ç±¿Ç›¿Ç˘¿É:¿É{¿É∫¿É¸¿Ñ?¿Ñà¿Ñ“¿Ö¿Ö\¿Öm¿Öt¿Öx¿Öy¿ÖÖ¿Ö ¿Öı¿Ü!¿Ü4¿ÜO¿Ün¿Üç¿Ü®¿Ü…¿ÜÏ¿á¿áL¿áw¿áö¿á£¿áº¿áƒ¿á»¿á ¿áÀ¿à¿à¿ài¿à∂¿à‘¿àÿ¿â'¿âw¿âò¿âú¿âﬂ¿â„¿ä5¿ä9¿äG¿äK¿äç¿ä©¿ã¿ãX¿ã^¿ã™¿ãı¿å¿å¿å/¿å@¿ål¿åí¿å™¿åª¿å˙¿ç¿çH¿ça¿ç§¿ç•¿ç±¿ç˘¿é:¿é>¿é?¿éK¿éà¿é¥¿é⁄¿éˆ¿é¸¿è ¿è¿èR¿è£¿èæ¿èƒ¿ê¿êU¿êù¿êÿ¿êﬁ¿ë/¿ëz¿ëü¿ë•¿ë¬¿ë‡¿ë¿í¿í'¿í>¿íã¿í£¿í©¿í≠¿íÆ¿í÷¿í‹¿ì¿ìI¿ìy¿ìø¿ìﬂ¿ì˙¿îG¿î_¿îe¿îi¿îj¿îv¿îú¿îù¿îË¿îˇ¿ï¿ïI¿ïo¿ïp¿ï|¿ï†¿ï°¿ï≠¿ï“¿ïÈ¿ñ¿ñ'¿ñ>¿ñÇ¿ñø¿ñ◊¿ñ›¿ñ·¿ñ‚¿ñÓ¿ó(¿óF¿óG¿óS¿óx¿óë¿ó≥¿ó∑¿ó∏¿óƒ¿ó÷¿ò!¿ò|¿ò§¿ò«¿ò€¿òﬂ¿ò‡¿òÏ¿ô'¿ôG¿ôK¿ôL¿ôX¿ôù¿ô»¿ôÙ¿ö¿ö"¿ö<¿öV¿ön¿öw¿öê¿öò¿õ¿õV¿õÊ¿õÍ¿õÏ¿õÌ¿ú ¿ú$¿úp¿úº¿ù	¿ùU¿ù£¿ùÙ¿û¿û¿ûb¿û∞¿ü¿üP¿üõ¿üÎ¿†9¿†|¿†Ä¿†∆¿°¿°_¿°Æ¿°ı¿¢B¿¢w¿¢®¿¢Ê¿¢Á¿¢Û¿£¿£¿£d¿£t¿£z¿£ ¿§¿§¿§]¿§ã¿§ë¿§ﬂ¿•¿•g¿•∂¿•ÿ¿•ﬁ¿•Ù¿•˙¿¶A¿¶c¿¶i¿¶w¿¶§¿¶»¿¶Œ¿¶‡¿ß¿ß!¿ß'¿ßZ¿ßÖ¿ßã¿ß∂¿®/¿®j¿®«¿©¿©'¿©1¿©7¿©I¿©v¿©ò¿©¥¿©œ¿©¿™¿™l¿™}¿™å¿™ô¿™£¿™´¿™µ¿™«¿™Õ¿™›¿™„¿´(¿´x¿´≤¿´–¿¨¿¨W¿¨[¿¨\¿¨¶¿¨ƒ¿¨ ¿≠¿≠V¿≠\¿≠±¿≠ﬂ¿≠Â¿Æ3¿Æl¿Æª¿Ø
¿Ø,¿Ø2¿ØÑ¿Ø”¿ØŸ¿ØÔ¿Øı¿∞<¿∞h¿∞n¿∞|¿∞≤¿∞ﬂ¿∞Â¿∞˜¿±B¿±J¿±P¿±ï¿±¿¿±∆¿±Â¿≤^¿≤ó¿≤‹¿≤Ê¿≤Ï¿≤˛¿≥+¿≥M¿≥i¿≥Ñ¿≥•¿≥œ¿¥#¿¥4¿¥C¿¥P¿¥Z¿¥b¿¥l¿¥~¿¥Ñ¿¥î¿¥ö¿¥„¿µ7¿µm¿µã¿µ∆¿∂¿∂¿∂¿∂k¿∂∫¿∑¿∑S¿∑Y¿∑¶¿∑≤¿∑∏¿∏¿∏S¿∏h¿∏©¿∏Œ¿∏œ¿π¿πl¿π∏¿∫¿∫M¿∫É¿∫â¿∫÷¿∫‚¿∫Ë¿ª9¿ªÑ¿ªú¿ªﬂ¿º¿º¿ºR¿ºh¿ºn¿ºπ¿º÷¿ºÊ¿Ω¿Ω1¿ΩD¿ΩN¿ΩR¿ΩS¿Ω_¿Ω∆¿Ω÷¿æ¿æ+¿æ:¿æc¿æk¿æ~¿æà¿æå¿æç¿æô¿æﬁ¿ø	¿ø(¿ø8¿øU¿ø©¿ø«¿¿0¿¿?¿¿à¿¿Ω¿¡#¿¡à¿¡”¿¬m¿¬‘¿√T¿√Æ¿√π¿√∫¿ƒU¿ƒñ¿ƒû¿ƒ±¿ƒª¿ƒ‘¿≈A¿≈G¿≈K¿≈M¿≈N¿≈à¿≈å¿≈€¿∆*¿∆{¿∆§¿∆®¿∆π¿∆Ω¿«
¿«¿«¿«R¿«V¿«ì¿«ó¿«•¿«©¿«˜¿»%¿»X¿»ò¿»∞¿»∆¿»‡¿»Ò¿…A¿…|¿…Ç¿…ü¿…º¿…Î¿  ¿ ¿ A¿ G¿ ò¿ Â¿ Î¿À"¿ÀD¿ÀV¿Às¿Àë¿Àü¿À•¿Àº¿À·¿Ã¿Ã	¿Ã¿Ã¿Ãn¿Ãt¿Ã≥¿Ãπ¿Õ¿Õ¿Õe¿Õû¿Õ¢¿Õ◊¿ÕÛ¿Œ¿ŒA¿ŒO¿ŒU¿Œu¿Œï¿Œô¿Œö¿Œ¶¿ŒÓ¿œ1¿œ5¿œ6¿œB¿œÇ¿œ©¿œ∑¿œΩ¿œÎ¿œÔ¿œ¿œ¸¿–C¿–u¿–∆¿–„¿—1¿—5¿—6¿—B¿—á¿—≤¿—¯¿“¿“-¿“J¿“f¿“¡¿“ ¿“—¿“’¿“◊¿“ÿ¿”(¿”w¿”è¿”Ω¿”Ê¿”˘¿‘¿‘)¿‘F¿‘[¿‘\¿‘ô¿‘ü¿‘Í¿’;¿’h¿’n¿’´¿’Õ¿’ﬂ¿’¸¿÷¿÷(¿÷.¿÷E¿÷r¿÷v¿÷w¿÷É¿÷∂¿÷ ¿÷‹¿÷‚¿◊¿◊¿◊¿◊&¿◊Y¿◊m¿◊¿◊Ö¿◊∏¿◊º¿◊Ω¿◊…¿◊¸¿ÿ¿ÿ"¿ÿ(¿ÿ[¿ÿ_¿ÿ`¿ÿl¿ÿü¿ÿ≥¿ÿ≈¿ÿÀ¿ÿ˛¿Ÿ¿Ÿ¿Ÿ¿ŸR¿Ÿf¿Ÿy¿Ÿ¿Ÿª¿Ÿø¿Ÿ¿¿ŸÃ¿ŸÚ¿ŸÛ¿Ÿˇ¿⁄Q¿⁄ü¿⁄£¿⁄§¿⁄∞¿⁄Ω¿⁄˝¿€¿€4¿€:¿€j¿€n¿€o¿€{¿€î¿€™¿€≈¿€…¿€ ¿€÷¿€Ô¿‹¿‹%¿‹2¿‹O¿‹U¿‹Y¿‹Z¿‹f¿‹Æ¿‹Ò¿‹ı¿‹ˆ¿›¿›(¿›J¿›`¿›d¿›e¿›q¿›®¿›º¿› ¿›–¿›Ú¿›ˆ¿›˜¿ﬁ¿ﬁC¿ﬁW¿ﬁe¿ﬁk¿ﬁô¿ﬁù¿ﬁû¿ﬁ™¿ﬁÔ¿ﬂ¿ﬂ_¿ﬂc¿ﬂd¿ﬂp¿ﬂ¢¿ﬂª¿ﬂ›¿ﬂ„¿‡¿‡!¿‡8¿‡è¿‡ò¿‡ü¿‡£¿‡•¿‡¶¿‡‰¿‡Ë¿·3¿·¿·–¿‚¿‚E¿‚I¿‚Z¿‚^¿‚´¿‚∫¿‚æ¿‚Û¿‚˜¿„4¿„8¿„F¿„J¿„î¿„ﬁ¿‰¿‰Y¿‰q¿‰á¿‰¢¿‰≥¿Â¿Â>¿ÂD¿Âa¿ÂÄ¿ÂØ¿Âƒ¿Â≈¿Ê¿Ê¿Ê\¿Ê´¿Êª¿Ê¡¿Ê¯¿Á¿Á/¿ÁM¿Ál¿Áz¿ÁÄ¿Áò¿ÁΩ¿Áﬂ¿ÁÂ¿ÁÈ¿ÁÍ¿Ë:¿ËP¿ËV¿Ëï¿Ëõ¿ËÍ¿Ë˘¿ÈG¿ÈÄ¿ÈÑ¿Èπ¿È’¿È¸¿Í#¿Í1¿Í7¿ÍW¿Íw¿Í{¿Í|¿Íà¿Í–¿ÍÂ¿Î¿Î<¿Î@¿ÎA¿ÎM¿Îç¿Î¥¿Î¬¿Î»¿Îˆ¿Î˙¿Î˚¿Ï¿ÏN¿ÏÄ¿Ï—¿ÏÓ¿Ì<¿Ì@¿ÌA¿ÌM¿Ìí¿ÌΩ¿Ó¿Ó¿Ó9¿ÓV¿Óq¿Ó ¿Ó”¿Ó⁄¿Óﬁ¿Ó‡¿Ó·¿Ô¿Ô¿Ôe¿Ô∂¿¿&¿g¿°¿ß¿Ò¿Ò¿Ò¿Ò+¿Ò<¿ÒB¿ÒC¿Òv¿Òä¿Òã¿Òó¿Ò‹¿Ú¿ÚO¿ÚS¿ÚU¿ÚV¿Úù¿Úπ¿Û	¿ÛT¿Ûv¿Ûá¿Û¶¿Û—¿Ù¿Ù=¿ÙZ¿Ùn¿ÙÖ¿Ù®¿Ù·¿ı¿ı¿ıf¿ıê¿ıñ¿ı‰¿ˆ1¿ˆR¿ˆX¿ˆú¿ˆÏ¿˜;¿˜Ö¿˜–¿˜Ó¿¯)¿¯P¿¯Ç¿¯æ¿¯Ã¿¯“¿¯Ì¿˘¿˘¿˘¿˘H¿˘s¿˘ë¿˘∫¿˘’¿˘„¿˘È¿˙¿˙)¿˙R¿˙t¿˙z¿˙~¿˙¿˙“¿˚¿˚9¿˚n¿˚è¿˚ù¿˚£¿˚’¿˚Ô¿¸¿¸:¿¸@¿¸D¿¸E¿¸Ö¿¸Ÿ¿˝¿˝P¿˝|¿˝ä¿˝ê¿˝Õ¿˝Ú¿˛¿˛=¿˛C¿˛G¿˛H¿˛w¿˛«¿˛˚¿ˇ:¿ˇd¿ˇr¿ˇx¿ˇ≥¿ˇ÷¿ˇˇ¿ !¿ '¿ +¿ ,¿ o¿ ∂¿ ˆ¿5¿K¿b¿c¿o¿∂¿Ë¿È¿)¿E¿K¿ó¿ø¿≈¿Ô¿(¿d¿l¿§¿ﬁ¿Ê¿Ï¿¿J¿Ä¿à¿¿¿˙¿¿¿¿¿=¿Ä¿Ñ¿Ö¿´¿’¿¿D¿ä¿À¿’¿€¿ﬂ¿‡¿¿1¿n¿ü¿Â¿&¿0¿6¿:¿;¿_¿á¿∆¿ı¿	;¿	|¿	Ü¿	å¿	ê¿	ë¿	∑¿	ﬂ¿
¿
L¿
í¿
”¿
›¿
„¿
Á¿
Ë¿
Ù¿9¿d¿ê¿∞¿›¿¿W¿^¿z¿ò¿û¿‚¿Ê¿Ë¿È¿&¿`¿£¿©¿¿3¿I¿v¿í¿∑¿⁄¿˝¿¿?¿q¿ü¿Õ¿ı¿¿.¿X¿\¿]¿´¿‡¿¿1¿Q¿_¿e¿~¿®¿»¿Ã¿Õ¿¿W¿â¿è¿„¿2¿N¿r¿Ö¿£¿¡¿œ¿’¿Ì¿¿¿¿_¿¢¿®¿¯¿H¿]¿®¿Ï¿¿¿K¿õ¿œ¿¿!¿H¿p¿~¿Ñ¿•¿≈¿…¿ ¿¿1¿7¿É¿—¿¿K¿e¿ä¿∞¿æ¿ƒ¿„¿¿¿¿L¿R¿ò¿”¿ˆ¿(¿B¿g¿ç¿õ¿°¿¿¿‡¿‰¿Â¿!¿Z¿ì¿ﬁ¿)¿`¿d¿e¿∞¿‘¿¿¿ ¿k¿è¿÷¿⁄¿€¿¿6¿c¿â¿ú¿‘¿ÿ¿Ÿ¿ ¿ 4¿ f¿ å¿ ü¿ ◊¿ €¿ ‹¿!&¿!I¿!é¿!í¿!ì¿!π¿!ﬂ¿"¿"=¿"b¿"c¿"≥¿"¿¿"∆¿#¿#8¿#e¿#û¿#·¿$¿$8¿$d¿$Ü¿$î¿$ö¿$∂¿$÷¿$⁄¿$€¿$Á¿%'¿%C¿%Q¿%W¿%Ö¿%â¿%ä¿%ñ¿%›¿&¿&:¿&n¿&£¿&Ø¿'¿'`¿'g¿'s¿'æ¿(¿(¿(¿(6¿(d¿(j¿(ë¿(ø¿(≈¿(Í¿)¿)$¿)K¿)y¿)¿)ß¿)ÿ¿)ﬁ¿*¿*1¿*7¿*_¿*è¿*ï¿*π¿*‚¿*Ë¿+¿+;¿+A¿+g¿+î¿+ö¿+≈¿+¸¿,¿,(¿,U¿,[¿,á¿,æ¿,ƒ¿,Ì¿- ¿-&¿-N¿-¿-Ö¿-Æ¿-·¿-Á¿.¿.=¿.C¿.{¿.Ã¿.“¿.˙¿/+¿/1¿/Z¿/ç¿/ì¿/π¿/Ê¿/Ï¿0¿0<¿0B¿0l¿0ü¿0•¿0…¿0˚¿1¿1%¿1W¿1]¿1ä¿1Œ¿1‘¿2¿2E¿2K¿2n¿2û¿2§¿2À¿2¯¿2˛¿3T¿3å¿3í¿3Ω¿3Ú¿3¯¿4"¿4U¿4[¿4Ö¿4∏¿4æ¿4Ï¿5&¿5,¿5^¿5†¿5¶¿5«¿5Û¿5˘¿6 ¿6L¿6R¿6Ä¿6Ω¿6√¿7¿7_¿7°¿7∆¿7Ë¿7Ó¿8¿8G¿8M¿8v¿8†¿8¶¿8“¿9¿9¿95¿9g¿9m¿9ó¿9√¿9…¿9ı¿:%¿:+¿:U¿:Å¿:á¿:±¿:›¿:„¿;	¿;-¿;3¿;X¿;z¿;Ä¿;ß¿;Õ¿;”¿<¿<e¿<k¿<™¿= ¿=¿=?¿=â¿=è¿=…¿>¿>¿>I¿>}¿>É¿>¨¿>÷¿>‹¿?¿?e¿?k¿?¶¿?Ù¿?˙¿@!¿@G¿@M¿@É¿@Œ¿@‘¿@ÿ¿@Ÿ¿@¿A¿A¿A¿A1¿AV¿AZ¿A[¿Av¿Aô¿Aù¿Aû¿Aº¿A‚¿AÊ¿AÁ¿B¿B-¿B1¿B2¿BN¿Br¿Bv¿Bw¿Bï¿Bª¿Bø¿B¿¿B‹¿C ¿C¿C¿C!¿CE¿CI¿CJ¿Cb¿CÇ¿CÜ¿Cá¿Cû¿CΩ¿C¡¿C¬¿C€¿C¸¿D ¿D¿DE¿Då¿Dê¿Dë¿D÷¿E¿E"¿E#¿Eb¿E§¿E®¿E©¿EÈ¿F,¿F0¿F1¿Fh¿Fô¿Fù¿Fû¿Fƒ¿FÎ¿FÔ¿F¿G¿GR¿GV¿GW¿GÑ¿Gπ¿GΩ¿Gæ¿G◊¿G¯¿G¸¿G˛¿Gˇ¿HN¿Hj¿Hn¿HΩ¿HÒ¿I%¿It¿IÅ¿Iö¿I∞¿I ¿IÁ¿I¸¿I˝¿JJ¿Jö¿Jº¿JŒ¿JÎ¿K	¿K¿K¿K4¿KT¿KX¿KY¿Ke¿K¨¿Kﬁ¿L!¿L%¿L&¿L2¿Lw¿L¢¿LÁ¿LÎ¿LÌ¿LÓ¿M1¿Mt¿Mà¿Må¿M”¿N¿NL¿NÄ¿NŒ¿O¿O¿O¿O_¿Oë¿Oú¿Oæ¿OÓ¿OÚ¿OÙ¿Oı¿P'¿P+¿Pz¿Pñ¿Pö¿P·¿Q¿QR¿Qõ¿Q∂¿QÃ¿QÁ¿R¿R¿R¿Ra¿RÖ¿Rò¿R∂¿R’¿R„¿RÈ¿S¿S!¿S%¿S&¿S2¿Sr¿Sá¿Sï¿Sõ¿S…¿SÕ¿SŒ¿S⁄¿T¿TJ¿Të¿Tï¿Tó¿Tò¿T’¿TŸ¿U#¿Ul¿Uû¿U»¿UÃ¿U⁄¿Uﬁ¿V!¿VW¿Vß¿V¬¿Vÿ¿V¿W¿W¿W¿WP¿Wk¿Wy¿Wí¿W¨¿W∫¿W¿¿W‘¿WÙ¿W¯¿W˘¿X¿XL¿X~¿X†¿X§¿X•¿X±¿Xˆ¿Y!¿Y_¿Yc¿Ye¿Yf¿Yö¿Yû¿Y¨¿Y∞¿YÓ¿Z/¿Z`¿Zô¿ZØ¿ZÃ¿Z‚¿Z˜¿[¿[¿[[¿[y¿[¿[–¿[Í¿\	¿\¿\:¿\T¿\b¿\h¿\Ö¿\ò¿\ø¿\Ì¿\Û¿]	¿]¿]¿]¿]E¿]F¿]î¿]‚¿^$¿^A¿^B¿^N¿^g¿^Ç¿^¢¿^æ¿^¬¿^√¿^œ¿_¿_¿_V¿_c¿_†¿_≤¿_»¿_„¿_È¿`"¿`2¿`\¿`o¿`y¿`}¿`~¿`ä¿`œ¿`˙¿a<¿a@¿aB¿aC¿aë¿aƒ¿a»¿b¿b¿bc¿b¥¿b»¿bÃ¿b⁄¿bﬁ¿c¿ca¿cî¿cœ¿cÁ¿d¿d&¿dG¿dw¿d©¿dø¿d‘¿e¿e¿e?¿eh¿e}¿e~¿eƒ¿e˙¿f¿f,¿fJ¿fd¿fr¿fx¿fã¿f°¿f•¿f¶¿fÍ¿g(¿g.¿g¿g¡¿g«¿h¿hg¿hõ¿hÕ¿hÁ¿i¿i2¿i@¿iF¿ie¿i{¿i¿iÄ¿iÕ¿i˜¿j¿j)¿jF¿jb¿jp¿jv¿jã¿j°¿j•¿j¶¿jı¿k¿k¿kY¿kû¿kÌ¿l/¿l~¿lø¿m¿m*¿m?¿mE¿ml¿mõ¿m∂¿m‹¿m˛¿n¿n¿n-¿nC¿nG¿nH¿nî¿nŒ¿n‘¿o¿o¿oC¿ov¿oì¿oª¿oﬂ¿oÌ¿oÛ¿p¿p&¿p*¿p+¿p7¿pI¿p[¿po¿ps¿pt¿pÄ¿p´¿p¨¿p‚¿pÓ¿q+¿q,¿q|¿qÇ¿q“¿r¿rR¿rl¿ré¿r ¿rŒ¿rœ¿r€¿s#¿sd¿sò¿s¨¿s≤¿sÌ¿t*¿th¿tÇ¿t∫¿tæ¿tø¿tÀ¿u¿uD¿ul¿uÜ¿u¬¿v¿v¿v¿v¿v¿v%¿v\¿vä¿vñ¿vÒ¿wF¿wë¿wº¿w√¿wˇ¿x¿xn¿xá¿x§¿x∏¿x‰¿y¿y1¿y:¿yG¿yS¿yj¿yò¿y«¿yÍ¿y¿z¿z¿z(¿z;¿zh¿z∆¿zÁ¿{¿{!¿{:¿{C¿{J¿{Z¿{Ñ¿{ó¿{°¿{•¿{¶¿{≤¿{Û¿|"¿|&¿|'¿|3¿|x¿|£¿|Â¿}:¿}}¿}◊¿}€¿}›¿}ﬁ¿~-¿~1¿~?¿~C¿~á¿~Ã¿¿¿[¿m¿s¿¿¿Ú¿¯¿Ä'¿ÄA¿ÄW¿Äp¿ÄÜ¿Äù¿Ä¥¿ÄÚ¿Å¿Å¿ÅA¿ÅZ¿Åf¿ÅÅ¿Åü¿Å≠¿Å≥¿Å ¿Å‡¿Å‰¿ÅÂ¿Ç9¿ÇU¿Çd¿Ç~¿Çô¿Çß¿Ç≠¿Ç¡¿Ç◊¿Ç€¿Ç‹¿É¿É¿É$¿ÉP¿ÉQ¿É]¿Éî¿ÉÓ¿Ñ1¿Ñ>¿Ñ_¿ÑÑ¿Ñã¿Ñ´¿Ñﬁ¿Ñ‚¿Ñ„¿ÑÔ¿Ö¿Ö!¿Ö6¿Ö:¿Ö<   t/// @docImport 'package:flutter/widgets.dart';
///
/// @docImport 'proxy_sliver.dart';
/// @docImport 'sliver.dart';
Å$Å9Å;ÅcÅf  Åè  Åπ  Å·  Ç
  Ç3  ÇF  Ç[  Çx  ÇèÇ∂É *ÉÑsÜÇÎ/// A base class for render boxes that resemble their children.
///
/// A proxy box has a single child and mimics all the properties of that
/// child by calling through to the child for each function in the render box
/// protocol. For example, a proxy box determines its size by asking its child
/// to layout with the same constraints and then matching the size.
///
/// A proxy box isn't useful on its own because you might as well just replace
/// the proxy box with its child. However, RenderProxyBox is a useful base class
/// for render objects that wish to mimic most, but not all, of the properties
/// of their child.
///
/// See also:
///
///  * [RenderProxySliver], a base class for render slivers that resemble their
///    children. Ü~Å áMá[Äƒ/// Creates a proxy render box.
///
/// Proxy render boxes are rarely created directly because they proxy
/// the render box protocol to [child]. Instead, consider using one of the
/// subclasses.á]ái       î%ÖõîçX/// A RenderProxyBox subclass that allows you to customize the
/// hit-testing behavior. î Ä˝ ïGïhv/// Initializes member variables for subclasses.
///
/// By default, the [behavior] is [HitTestBehavior.deferToChild].ïo,ïu  ï°ï≠  ïïéïèï∫ïøï≈ï¿ïÀÅ1ñÙÅ/// How to behave during hit testing when deciding how the hit test propagates
/// to children and whether to consider targets behind this one.
///
/// Defaults to [HitTestBehavior.deferToChild].
///
/// See [HitTestBehavior] for the allowed values and their meanings.  óÅáó  óó,  ó5óF  óóòåTòù  ò©ò±  òåòçò‰Ä⁄òı  ô	&ô&  ò‰òÂ ô¬ë[õ¨Å„/// Imposes additional constraints on its child.
///
/// A render constrained box proxies most functions in the render box protocol
/// to its child, except that when laying out its child, it tightens the
/// constraints provided by its parent by enforcing the [additionalConstraints]
/// as well.
///
/// For example, if you wanted [child] to have a minimum height of 50.0 logical
/// pixels, you could use `const BoxConstraints(minHeight: 50.0)` as the
/// [additionalConstraints]. õ‹Å\ úRúfo/// Creates a render box that constrains its child.
///
/// The [additionalConstraints] argument must be valid.úmúy  úÉ-úú  úπúøúÍú¿ú’ú÷úËúÈùúÙùù+ù0ù6ù1ù¬%ù—  ù<ÄÉùè=/// Additional constraints to apply to [child] during layout.   ùÎÄ◊ùÔ  ûû   	û∆Å≤ûŸ  ûÚû˙  û∆û«†|Å≤†è  †®†∞  †|†}¢2Åª¢E  ¢_¢g  ¢2¢3£ÒÅª§  §§&  £Ò£Ú•∞Ä¬•ƒ  •◊$•Ò  •˝¶  •∞•±¶vÅL¶á   ¶v¶wß∆ÄÛß‰  ßı$®  ß∆ß«ß“ß”®ΩÅt®Œ  ®›®Ó  ®ˆ®˛  ®Ω®æ™5ÄÊ™F  ™Z&™w  ™5™6 ´ån≠ïÇo/// Constrains the child's [BoxConstraints.maxWidth] and
/// [BoxConstraints.maxHeight] if they're otherwise unconstrained.
///
/// This has the effect of giving the child a natural dimension in unbounded
/// environments. For example, by providing a [maxHeight] to a widget that
/// normally tries to be as big as possible, the widget will normally size
/// itself to fit its parent, but when placed in a vertical list, it will take
/// on the given height.
///
/// This is useful when composing widgets that normally try to match their
/// parents' size, so that they behave reasonably in lists (which are
/// unbounded). ≠¡Å Æ®Æ∏Ä‹/// Creates a render box that imposes a maximum width or maximum height on its
/// child if the child is otherwise unconstrained.
///
/// The [maxWidth] and [maxHeight] arguments not be null and must be
/// non-negative.ÆøÆÀ  Æ’!Æ›  Æ¸"Ø  ÆÁÆÌÆÓØØØØ'Ø-Ø=Ø7Ø.Ø:ØGØMØ^ØXØNØ[ØrØhØtØêØÖØíØ§Ø©ØØØ™∞.∞5  ±]±d  Øµv∞R/// The value to use for maxWidth if the incoming maxWidth constraint is infinite.   ∞BÄö∞F  ∞O∞W   ∞‡z±BT/// The value to use for maxHeight if the incoming maxHeight constraint is infinite.   ±rÄù±v  ±Ä±à   ≤Åç≤"  ≤4≤D   ≥§ÅC≥©  ≥∑#≥–  ≥‹"≥Ù   ¥ÎÄœµ	  µ$µ4  ¥Î¥Ï¥˜¥¯µæÄòµœ   µæµø∂ZÅ1∂k  ∂&∂ú  ∂Z∂[ ∑èñ°æÜ{/// Attempts to size the child to a specific aspect ratio.
///
/// The render object first tries the largest width permitted by the layout
/// constraints. The height of the render object is determined by applying the
/// given aspect ratio to the width, expressed as a ratio of width to height.
///
/// For example, a 16:9 width:height aspect ratio would have a value of
/// 16.0/9.0. If the maximum width is infinite, the initial width is determined
/// by applying the aspect ratio to the maximum height.
///
/// Now consider a second example, this time with an aspect ratio of 2.0 and
/// layout constraints that require the width to be between 0.0 and 100.0 and
/// the height to be between 0.0 and 100.0. We'll select a width of 100.0 (the
/// biggest allowed) and a height of 50.0 (to match the aspect ratio).
///
/// In that same situation, if the aspect ratio is 0.5, we'll also select a
/// width of 100.0 (still the biggest allowed) and we'll attempt to use a height
/// of 200.0. Unfortunately, that violates the constraints because the child can
/// be at most 100.0 pixels tall. The render object will then take that value
/// and apply the aspect ratio again to obtain a width of 50.0. That width is
/// permitted by the constraints and the child receives a width of 50.0 and a
/// height of 100.0. If the width were not permitted, the render object would
/// continue iterating through the constraints. If the render object does not
/// find a feasible size after consulting each constraint, the render object
/// will eventually select a size for the child that meets the layout
/// constraints but fails to meet the aspect ratio constraints. æ>ÅO æƒæ’/// Creates as render object with a specific aspect ratio.
///
/// The [aspectRatio] argument must be a finite, positive value.æ‹æË  æÚø  øøø.ø)øø+ø8ø>øSø?øJøKøjø]øløÄøÖøãøÜ¿ @Ç¿ @â  øëÄÓ¿ @cÄæ/// The aspect ratio to attempt to use.
///
/// The aspect ratio is expressed as a ratio of width to height. For example,
/// a 16:9 width:height aspect ratio would have a value of 16.0/9.0.   ¿ @ôÄæ¿ @ù  ¿ @©¿ @±   	¿ A[Äº¿ An  ¿ Aá¿ Aè  ¿ A[¿ A\¿ BÄº¿ B.  ¿ BG¿ BO  ¿ B¿ B¿ B€Ä∫¿ BÓ  ¿ C¿ C  ¿ B€¿ B‹¿ CôÄ∫¿ C¨  ¿ C∆¿ CŒ  ¿ Cô¿ Cö¿ DWáK¿ D\  ¿ Dn¿ D~   ¿ K¶ÄÖ¿ Kƒ  ¿ K’$¿ KÔ  ¿ K¶¿ Kß¿ K≤¿ K≥¿ L/Äø¿ LC  ¿ LV¿ Lf  ¿ Lr¿ LÄ  ¿ L/¿ L0¿ LÚ{¿ M   ¿ LÚ¿ LÛ¿ MqÄΩ¿ MÇ  ¿ Mñ&¿ M≥  ¿ Mq¿ Mr ¿ N2ñ¿ TÙÜº/// Sizes its child to the child's maximum intrinsic width.
///
/// This class is useful, for example, when unlimited width is available and
/// you would like a child that would otherwise attempt to expand infinitely to
/// instead size itself to a more reasonable width.
///
/// The constraints that this object passes to its child will adhere to the
/// parent's constraints, so if the constraints are not large enough to satisfy
/// the child's maximum intrinsic width, then the child will get less width
/// than it otherwise would. Likewise, if the minimum width constraint is
/// larger than the child's maximum intrinsic width, the child will be given
/// more width than it otherwise would.
///
/// If [stepWidth] is non-null, the child's width will be snapped to a multiple
/// of the [stepWidth]. Similarly, if [stepHeight] is non-null, the child's
/// height will be snapped to a multiple of the [stepHeight].
///
/// This class is relatively expensive, because it adds a speculative layout
/// pass before the final layout phase. Avoid using it where possible. In the
/// worst case, this render object can result in a layout that is O(N¬≤) in the
/// depth of the tree.
///
/// See also:
///
///  * [Align], a widget that aligns its child within itself. This can be used
///    to loosen the constraints passed to the [RenderIntrinsicWidth],
///    allowing the [RenderIntrinsicWidth]'s child to be smaller than that of
///    its parent.
///  * [Row], which when used with [CrossAxisAlignment.stretch] can be used
///    to loosen just the width constraints that are passed to the
///    [RenderIntrinsicWidth], allowing the [RenderIntrinsicWidth]'s child's
///    width to be smaller than that of its parent. ¿ U$Å„ ¿ UÎ¿ UˇÄæ/// Creates a render object that sizes itself to its child's intrinsic width.
///
/// If [stepWidth] is non-null it must be > 0.0. Similarly If [stepHeight] is
/// non-null it must be > 0.0.¿ V¿ V  ¿ V¿ V&  ¿ V5¿ VA  ¿ VN¿ VT¿ Vy¿ Vg¿ V_¿ VU¿ Vb¿ Vt¿ Vj¿ Vv¿ VÉ¿ Vâ¿ V∞¿ Vù¿ Vï¿ Vä¿ Vò¿ V´¿ V†¿ V≠¿ V≈¿ V∫¿ V«¿ VÂ¿ VŸ¿ VÁ¿ V˙¿ Vˇ¿ W¿ W ¿ W´¿ W≥  ¿ Y¿ Y  ¿ WÄù¿ Wêr/// If non-null, force the child's width to be a multiple of this value.
///
/// This value must be null or > 0.0.   ¿ W¡ÄÆ¿ W≈  ¿ Wœ¿ Wÿ   ¿ XsÄ†¿ X˘s/// If non-null, force the child's height to be a multiple of this value.
///
/// This value must be null or > 0.0.   ¿ Y-Ä±¿ Y1  ¿ Y<¿ YE   ¿ Y‚Ä±¿ Y  ¿ Y˚¿ Z  ¿ Z	¿ Z   ¿ Zói¿ Z™  ¿ Z√¿ ZÀ  ¿ Zó¿ Zò¿ [ÄŸ¿ [  ¿ [0¿ [8  ¿ [¿ [¿ [·ÅN¿ [Ù  ¿ \¿ \  ¿ [·¿ [‚¿ ]3ÅN¿ ]F  ¿ ]`¿ ]h  ¿ ]3¿ ]4¿ ^ÖÅk¿ ^î  ¿ ^¶¿ ^±  ¿ ^∑¿ ^«   ¿ _ÙÄ¯¿ _˘  ¿ `"¿ `  ¿ `+#¿ `D   ¿ `Äœ¿ a  ¿ a$¿ a9  ¿ `¿ `Ò¿ `¸¿ `˝¿ a√Ä€¿ a◊  ¿ aÍ¿ a˙  ¿ b¿ b  ¿ a√¿ aƒ¿ b¢Äò¿ b≥   ¿ b¢¿ b£¿ c>Ä˜¿ cO  ¿ cc&¿ cÄ  ¿ c>¿ c? ¿ d9çó¿ j&ÖÁ/// Sizes its child to the child's intrinsic height.
///
/// This class is useful, for example, when unlimited height is available and
/// you would like a child that would otherwise attempt to expand infinitely to
/// instead size itself to a more reasonable height.
///
/// The constraints that this object passes to its child will adhere to the
/// parent's constraints, so if the constraints are not large enough to satisfy
/// the child's maximum intrinsic height, then the child will get less height
/// than it otherwise would. Likewise, if the minimum height constraint is
/// larger than the child's maximum intrinsic height, the child will be given
/// more height than it otherwise would.
///
/// This class is relatively expensive, because it adds a speculative layout
/// pass before the final layout phase. Avoid using it where possible. In the
/// worst case, this render object can result in a layout that is O(N¬≤) in the
/// depth of the tree.
///
/// See also:
///
///  * [Align], a widget that aligns its child within itself. This can be used
///    to loosen the constraints passed to the [RenderIntrinsicHeight],
///    allowing the [RenderIntrinsicHeight]'s child to be smaller than that of
///    its parent.
///  * [Column], which when used with [CrossAxisAlignment.stretch] can be used
///    to loosen just the height constraints that are passed to the
///    [RenderIntrinsicHeight], allowing the [RenderIntrinsicHeight]'s child's
///    height to be smaller than that of its parent. ¿ jWÄì ¿ j®¿ jΩN/// Creates a render object that sizes itself to its child's intrinsic height.¿ jƒ¿ j–  ¿ j›¿ j‚¿ jË¿ j„  ¿ jÓÅ¿ k  ¿ k¿ k"  ¿ jÓ¿ jÔ¿ lÅ¿ l#  ¿ l<¿ lD  ¿ l¿ l¿ m2i¿ mE  ¿ m_¿ mg  ¿ m2¿ m3¿ müÄÂ¿ mÆ  ¿ m¿¿ mÀ  ¿ m—¿ m·   ¿ nàÄ¯¿ nç  ¿ nõ"¿ n≥  ¿ nø#¿ nÿ   ¿ oÑÄœ¿ o¢  ¿ o≥$¿ oÕ  ¿ oÑ¿ oÖ¿ oê¿ oë¿ pWÄ€¿ pk  ¿ p~¿ pé  ¿ pö¿ p®  ¿ pW¿ pX¿ q6Äò¿ qG   ¿ q6¿ q7 ¿ q“Å˙¿ r@/// Excludes the child from baseline computations in the parent. ¿ rIÄ§ ¿ r¨¿ r¿`/// Create a render object that causes the parent to ignore the child for baseline computations.¿ r«¿ r”  ¿ r‡¿ rÂ¿ rÎ¿ rÊ  ¿ rÒ^¿ s  ¿ s"¿ s0  ¿ rÒ¿ rÚ¿ sSw¿ sd  ¿ sw$¿ së  ¿ sù¿ s´  ¿ sS¿ sT ¿ sŒçñ¿ uπÅ‰/// Makes its child partially transparent.
///
/// This class paints its child into an intermediate buffer and then blends the
/// child back into the scene partially transparent.
///
/// For values of opacity other than 0.0 and 1.0, this class is relatively
/// expensive because it requires painting the child into an intermediate
/// buffer. For the value 0.0, the child is not painted at all. For the
/// value 1.0, the child is painted immediately without an intermediate buffer. ¿ u‚Åπ ¿ vb¿ voy/// Creates a partially transparent render object.
///
/// The [opacity] argument must be between 0.0 and 1.0, inclusive.¿ vv¿ v~  ¿ vê#¿ vñ  ¿ vπ¿ v≈   ¿ vá¿ vÆ¿ v“¿ vÿ¿ v˘¿ vË¿ v·¿ vŸ¿ v‰¿ vÛ¿ vÎ¿ vˆ¿ w¿ w¿ w¿ w6¿ w¿ w8¿ w^¿ wW¿ w`¿ wb¿ wc¿ wh¿ wi¿ w|¿ wÑ¿ w}¿ wé¿ wì¿ wô¿ wî¿ x3
¿ x7  ¿ y™¿ y±  ¿ |»¿ |Õ  ¿ wüK¿ w¥   ¿ wü¿ w†¿ wÓA¿ x   ¿ wÓ¿ wÔ¿ xBÅe¿ yìÅ5/// The fraction to scale the child's alpha value.
///
/// An opacity of 1.0 is fully opaque. An opacity of 0.0 is fully transparent
/// (i.e., invisible).
///
/// Values 1.0 and 0.0 are painted with a fast path. Other values
/// require painting the child into an intermediate buffer, which is
/// expensive.   ¿ yΩÇ ¿ y¡  ¿ y…¿ y—   ¿ {·Ä‰¿ |ìÄû/// Whether child semantics are included regardless of the opacity.
///
/// If false, semantics are excluded when [opacity] is 0.0.
///
/// Defaults to false.   ¿ |ËÄ±¿ |Ï  ¿ }
¿ }	   ¿ }ùl¿ }Æ  ¿ }∫¿ }≈  ¿ }ù¿ }û¿ ~Ä«¿ ~%  ¿ ~<)¿ ~^  ¿ ~¿ ~¿ ~ÿÄ¢¿ ~È  ¿ ~Ô¿    ¿ ¿   ¿ ~ÿ¿ ~Ÿ¿ ~ÄÆ¿ è  ¿ ©¿ æ  ¿ ~¿ ¿ Ä0Å2¿ ÄA  ¿ ÄU&¿ Är  ¿ Ä0¿ Ä1 ¿ êJÇO¿ ëÄ«/// Makes its child partially transparent, driven from an [Animation].
///
/// This is a variant of [RenderOpacity] that uses an [Animation<double>] rather
/// than a [double] to control the opacity. ¿ ëtÅ# ¿ ë©¿ ëæ2/// Creates a partially transparent render object.¿ ë≈"¿ ë·  ¿ ëÌ#¿ ëÛ  ¿ í¿ í"  ¿ í¿ í/¿ í4¿ í:¿ í5    ¿ ì\â¿ î#Ä¿/// Applies a mask generated by a [Shader] to its child.
///
/// For example, [RenderShaderMask] can be used to gradually fade out the edge
/// of a child by using a [ui.Gradient.linear] mask. ¿ îOÅ7 ¿ îß¿ î∑U/// Creates a render object that applies a mask generated by a [Shader] to its child.¿ îæ¿ î   ¿ î‘&¿ îÌ  ¿ ï (¿ ï  ¿ ï¿ ï¿ ï ¿ ïA¿ ï1¿ ïC¿ ïe¿ ïZ¿ ïg¿ ïy¿ ï~¿ ïÑ¿ ï¿ ó“¿ ó·  ¿ ôû¿ ô®  ¿ ïäJ¿ ï´   ¿ ïä¿ ïã¿ ïÿÅ˜¿ ó≠Å-/// Called to creates the [Shader] that generates the mask.
///
/// The shader callback is called with the current size of the child so that
/// it can customize the shader to the size and location of the child.
///
/// The rectangle will always be at the origin when called by
/// [RenderShaderMask].   ¿ óÙÄô¿ ó¯  ¿ ò¿ ò   ¿ òëÅ
¿ ôÉÄ€/// The [BlendMode] to use when applying the shader to the child.
///
/// The default, [BlendMode.modulate], is useful for applying an alpha blend
/// to the child. Other blend modes can be used to create other effects.   ¿ ô∂ÄÖ¿ ô∫  ¿ ôƒ¿ ôœ   ¿ ö?=¿ öT   ¿ ö?¿ ö@¿ öÄÅÂ¿ öë  ¿ öó¿ ö®  ¿ ö∞¿ ö∏  ¿ öÄ¿ öÅ ¿ úià›¿ ù%Äµ/// Applies a filter to the existing painted content and then paints [child].
///
/// This effect is relatively expensive, especially if the filter is non-local,
/// such as a blur. ¿ ùUÅe ¿ ùª¿ ùœ\/// Creates a backdrop filter.
/// The [blendMode] argument defaults to [BlendMode.srcOver].¿ ù÷¿ ù‚  ¿ ùÏ¿ û  ¿ û'¿ û  ¿ û=¿ ûC  ¿ û&¿ û/¿ û0¿ ûL¿ ûe¿ û]¿ ûg¿ û~¿ ûu¿ ûÄ¿ ûö¿ ûè¿ ûú¿ û≠¿ û≤¿ û∏¿ û≥¿ üÖ¿ üä  ¿ °¿ °  ¿ ¢p¿ ¢z  ¿ ûæR¿ û„   ¿ ûæ¿ ûø¿ ün¿ ünN/// Whether or not the backdrop filter operation will be applied to the child.   ¿ üñy¿ üö  ¿ ü¢
¿ ü®   ¿ †ÄÏ¿ †ÌÄº/// The image filter to apply to the existing painted content before painting
/// the child.
///
/// For example, consider using [ui.ImageFilter.blur] to create a backdrop
/// blur effect.   ¿ °ÄÅ¿ °   ¿ °'¿ °7   ¿ °°ÄÃ¿ ¢UÄù/// The blend mode to use to apply the filtered background content onto the background
/// surface.
///
/// {@macro flutter.widgets.BackdropFilter.blendMode}   ¿ ¢àÄÖ¿ ¢å  ¿ ¢ñ¿ ¢°   ¿ £=¿ £&   ¿ £¿ £¿ £RÅÚ¿ £c  ¿ £i¿ £z  ¿ £Ç¿ £ä  ¿ £R¿ £S ¿ •Héó¿ ©™ÑR/// An interface for providing custom clips.
///
/// This class is used by a number of clip widgets (e.g., [ClipRect] and
/// [ClipPath]).
///
/// The [getClip] method is called whenever the custom clip needs to be updated.
///
/// The [shouldReclip] method is called when a new instance of the class
/// is provided, to check if the new instance actually represents different
/// information.
///
/// The most efficient way to update the clip provided by this class is to
/// supply a `reclip` argument to the constructor of the [CustomClipper]. The
/// custom object will listen to this animation and update the clip whenever the
/// animation ticks, avoiding both the build and layout phases of the pipeline.
///
/// See also:
///
///  * [ClipRect], which can be customized with a [CustomClipper<Rect>].
///  * [ClipRRect], which can be customized with a [CustomClipper<RRect>].
///  * [ClipOval], which can be customized with a [CustomClipper<Rect>].
///  * [ClipPath], which can be customized with a [CustomClipper<Path>].
///  * [ShapeBorderClipper], for specifying a clip path using a [ShapeBorder].¿ ©∏¿ ©∏¿ ©“Ä∂ ¿ ™O¿ ™\p/// Creates a custom clipper.
///
/// The clipper will update its clip whenever [reclip] notifies its listeners.¿ ™_¿ ™l  ¿ ™¿ ™w¿ ™Å¿ ™å¿ ™û   ¿ ™™ÅU¿ ´∫ÄÙ/// Register a closure to be notified when it is time to reclip.
///
/// The [CustomClipper] implementation merely forwards to the same method on
/// the [Listenable] provided to the constructor in the `reclip` argument, if
/// it was not null. ¿ ´∆¿ ´‘  ¿ ´©¿ ´™¿ ¨Åô¿ ≠QÅ0/// Remove a previously registered closure from the list of closures that the
/// object notifies when it is time to reclip.
///
/// The [CustomClipper] implementation merely forwards to the same method on
/// the [Listenable] provided to the constructor in the `reclip` argument, if
/// it was not null. ¿ ≠`¿ ≠n  ¿ ≠@¿ ≠A¿ ≠†ÄÑ¿ Æj/// Returns a description of the clip given that the render object being
/// clipped is of the given size. ¿ Æ	¿ Æ   ¿ Æ(Ç¿ ∞Å∆/// Returns an approximation of the clip returned by [getClip], as
/// an axis-aligned Rect. This is used by the semantics layer to
/// determine whether widgets should be excluded.
///
/// By default, this returns a rectangle that is the same size as
/// the RenderObject. If getClip returns a shape that is roughly the
/// same size as the RenderObject (e.g. it's a rounded rectangle
/// with very small arcs in the corners), then this may be adequate. ¿ ∞	¿ ∞!   ¿ ∞@ÉO¿ ≥[Ç˜/// Called whenever a new instance of the custom clipper delegate class is
/// provided to the clip object, or any time that a new clip object is created
/// with a new instance of the custom clipper delegate class (which amounts to
/// the same thing, because the latter is implemented in terms of the former).
///
/// If the new instance represents different information than the old
/// instance, then the method should return true, otherwise it should return
/// false.
///
/// If the method returns false, then the [getClip] call might be optimized
/// away.
///
/// It's possible that the [getClip] method will get called even if
/// [shouldReclip] returns false or if the [shouldReclip] method is never
/// called at all (e.g. if the box changes size). ¿ ≥h%¿ ≥Ñ   ¿ ≥ìJ¿ ≥¶   ¿ ≥ì¿ ≥î ¿ ≥·Öj¿ ¥.F/// A [CustomClipper] that clips to the outer path of a [ShapeBorder]. ¿ ¥aÅ• ¿ µª¿ µÕÅG/// Creates a [ShapeBorder] clipper.
///
/// The [textDirection] argument must be provided non-null if [shape]
/// has a text direction dependency (for example if it is expressed in terms
/// of "start" and "end" instead of "left" and "right"). It may be null if
/// the border will not need the text direction to paint itself.¿ µ‘¿ µ„  ¿ µÌ¿ µÛ   ¿ ∂
V¿ ∂[</// The shape border whose outer path this clipper clips to. ¿ ∂eÄ‚¿ ∑:Ä∑/// The text direction to use for getting the outer path for [shape].
///
/// [ShapeBorder]s can depend on the text direction (e.g having a "dent"
/// towards the start of the shape).  ¿ ∑LÄØ¿ ∑í2/// Returns the outer path of [shape] as the clip. ¿ ∑ö	¿ ∑†  ¿ ∑Å¿ ∑Ç¿ ∑ˇÅJ¿ ∏  ¿ ∏¿ ∏2  ¿ ∑ˇ¿ ∏  ¿ πMå
¿ π\ ¿ πn¿ πn¿ πåÄ≈ ¿ πå¿ πù ¿ π§¿ π∞  ¿ π∫¿ πÕ  ¿ πŸ"¿ πﬂ  ¿ πÌ¿ πÒ¿ πÚ¿ ∫¿ ∫¿ ∫¿ ∫-¿ ∫¿ ∫/¿ ∫D¿ ∫I¿ ∫O¿ ∫J¿ ∫¿¿ ∫“  ¿ æ_¿ æb  ¿ ø¿ ø  ¿ ¡p¿ ¡w  ¿ ¡Ü¿ ¡ì  ¿ ∫Uh¿ ∫©;/// If non-null, determines which clip to use on the child.   ¿ ∫ﬁÇ!¿ ∫‚  ¿ ∫Í¿ ∫˝   ¿ æI¿ æO    ¿ æl'¿ æu    ¿ æñ¿ æö  ¿ æß
¿ æ≠   ¿ Ωv¿ Ω  ¿ Ω¿ Ω*  ¿ Ω¿ Ω¿ Ω}a¿ Ωé   ¿ Ω}¿ Ω~¿ Ω‚c¿ ΩÁ    ¿ ø/Äß¿ ø@   ¿ ø/¿ ø0¿ ø⁄O¿ øﬂ    ¿ ¿-Å?¿ ¿?  ¿ ¿\¿ ¿j  ¿ ¿-¿ ¿.¿ ¡°ÉI¿ ¡≤  ¿ ¡¡¿ ¡“  ¿ ¡⁄¿ ¡‚  ¿ ¡°¿ ¡¢¿ ƒÓg¿ ƒˇ   ¿ ƒÓ¿ ƒÔ ¿ ≈Yág¿ ∆?Äﬂ/// Clips its child using a rectangle.
///
/// By default, [RenderClipRect] prevents its child from painting outside its
/// bounds, but the size and location of the clip rect can be customized using a
/// custom [clipper]. ¿ ∆rÅ& ¿ «F¿ «TÄ«/// Creates a rectangular clip.
///
/// If [clipper] is null, the clip will match the layout size and position of
/// the child.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ «[¿ «b  ¿ «l¿ «s  ¿ «¿ «Ü    ¿ «ú8¿ «±   ¿ «ú¿ «ù¿ «ÿÅ%¿ «È  ¿ «Ò¿ »  ¿ »¿ »  ¿ «ÿ¿ «Ÿ¿ …Åˆ¿ …  ¿ …¿ …)  ¿ …1¿ …9  ¿ …¿ …¿  ˚Å√¿ À  ¿ À¿ À,  ¿ À4¿ À<  ¿  ˚¿  ¸ ¿ Ã¬ãæ¿ ÕØÄÊ/// Clips its child using a rounded rectangle.
///
/// By default, [RenderClipRRect] uses its own bounds as the base rectangle for
/// the clip, but the size and location of the clip can be customized using a
/// custom [clipper]. ¿ Õ‰Ç# ¿ œ¿ œ Å/// Creates a rounded-rectangular clip.
///
/// The [borderRadius] defaults to [BorderRadius.zero], i.e. a rectangle with
/// right-angled corners.
///
/// If [clipper] is non-null, then [borderRadius] is ignored.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ œ'¿ œ.  ¿ œ85¿ œN  ¿ œs¿ œz  ¿ œÜ¿ œç  ¿ œû¿ œÆ  	¿ œ\¿ œh¿ œi¿ œ—¿ œ√¿ œ”¿ œ˜¿ œË¿ œ˘¿ —"¿ —2  ¿ “U¿ “d  ¿ –Å¿ –¸ÄÀ/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This value is ignored if [clipper] is non-null.   ¿ —CÄô¿ —G  ¿ —T¿ —j   ¿ —‡r¿ “2</// The text direction with which to resolve [borderRadius].   ¿ “vÄñ¿ “z  ¿ “à¿ “ò   ¿ ”g¿ ”&   ¿ ”¿ ”¿ ”{Å%¿ ”å  ¿ ”î¿ ”¶  ¿ ”Ø¿ ”¿  ¿ ”{¿ ”|¿ ‘§Ç¿ ‘µ  ¿ ‘ª¿ ‘Ã  ¿ ‘‘¿ ‘‹  ¿ ‘§¿ ‘•¿ ÷ºÅ¬¿ ÷Õ  ¿ ÷‹¿ ÷Ì  ¿ ÷ı¿ ÷˝  ¿ ÷º¿ ÷Ω ¿ ÿÇâ›¿ ŸêÅ/// Clips its child using an oval.
///
/// By default, inscribes an axis-aligned oval into its layout dimensions and
/// prevents its child from painting outside that oval, but the size and
/// location of the clip oval can be customized using a custom [clipper]. ¿ Ÿ√Å3 ¿ ⁄§¿ ⁄≤Ä‘/// Creates an oval-shaped clip.
///
/// If [clipper] is null, the oval will be inscribed into the layout size and
/// position of the child.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ ⁄π¿ ⁄¿  ¿ ⁄ ¿ ⁄—  ¿ ⁄›¿ ⁄‰   ¿ ⁄˙¿ €   ¿ €¿ €  ¿ €Ÿ8¿ €Ó   ¿ €Ÿ¿ €⁄¿ €)Ä¨¿ €.  ¿ €;	¿ €A   ¿ ‹ÇC¿ ‹&  ¿ ‹.¿ ‹@  ¿ ‹I¿ ‹Z  ¿ ‹¿ ‹¿ ﬁ\Ç¿ ﬁm  ¿ ﬁs¿ ﬁÑ  ¿ ﬁå¿ ﬁî  ¿ ﬁ\¿ ﬁ]¿ ‡vÅÁ¿ ‡á  ¿ ‡ñ¿ ‡ß  ¿ ‡Ø¿ ‡∑  ¿ ‡v¿ ‡w ¿ ‚aà‘¿ ‰4ÅÃ/// Clips its child using a path.
///
/// Takes a delegate whose primary method returns a path that should
/// be used to prevent the child from painting outside the path.
///
/// Clipping to a path is expensive. Certain shapes have more
/// optimized render objects:
///
///  * To clip to a rectangle, consider [RenderClipRect].
///  * To clip to an oval or circle, consider [RenderClipOval].
///  * To clip to a rounded rectangle, consider [RenderClipRRect]. ¿ ‰gÅø ¿ Â‘¿ Â‚Å\/// Creates a path clip.
///
/// If [clipper] is null, the clip will be a rectangle that matches the layout
/// size and location of the child. However, rather than use this default,
/// consider using a [RenderClipRect], which can achieve the same effect more
/// efficiently.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ ÂÈ¿ Â  ¿ Â˙¿ Ê  ¿ Ê¿ Ê    ¿ Ê*I¿ Ê?   ¿ Ê*¿ Ê+¿ ÊwÅ%¿ Êà  ¿ Êê¿ Ê¢  ¿ Ê´¿ Êº  ¿ Êw¿ Êx¿ Á†Ç¿ Á±  ¿ Á∑¿ Á»  ¿ Á–¿ Áÿ  ¿ Á†¿ Á°¿ È∏Å{¿ È…  ¿ Èÿ¿ ÈÈ  ¿ ÈÒ¿ È˘  ¿ È∏¿ Èπ ¿ Î7àÅ¿ ÏÄŒ/// A physical model layer casts a shadow based on its [elevation].
///
/// The concrete implementations [RenderPhysicalModel] and [RenderPhysicalShape]
/// determine the actual shape of the physical model.¿ Ï.¿ Ï.¿ ÏRÅt ¿ Ïà¿ Ï†3/// The [elevation] parameter must be non-negative.¿ Ïß¿ Ï∑  ¿ Ï¡¿ Ï“  ¿ Ï‡¿ Ï  ¿ Ï˙¿ Ì
  ¿ Ì¿ Ì!  ¿ Ì>¿ ÌE  ¿ Ì/¿ Ì3¿ Ì4¿ ÌT¿ ÌZ¿ Ìk¿ Ìe¿ Ì[¿ Ìh¿ ÌÄ¿ Ìu¿ ÌÇ¿ Ìõ¿ Ìî¿ Ìù¿ Ì∏¿ Ì´¿ Ì∫¿ ÓË¿ ÓÔ  ¿ ¿ Ö  ¿ ÒX¿ Ò^  ¿ Ì Å¿ ÓÕÄÎ/// The z-coordinate relative to the parent at which to place this material.
///
/// The value is non-negative.
///
/// If [debugDisableShadows] is set, this value is ignored and no shadow is
/// drawn (an outline is rendered instead).   ¿ Ó˝Å=¿ Ô  ¿ Ô¿ Ô   ¿ >>¿ `/// The shadow color.   ¿ ïÄÜ¿ ô  ¿ •¿ ¨   ¿ Ò6¿ ÒE/// The background color.   ¿ Òht¿ Òl  ¿ Òr¿ Òy   ¿ Ò‡Ä®¿ ÒÒ  ¿ Ú¿ Ú(  ¿ Ò‡¿ Ò·¿ ÚåÅ*¿ Úù  ¿ Ú±'¿ ÚŒ  ¿ Úå¿ Úç ¿ Û∫ê∆¿ Ù\Äõ/// Creates a physical model layer that clips its child to a rounded
/// rectangle.
///
/// A physical model layer casts a shadow based on its [elevation]. ¿ ÙúÅ’ ¿ ı'¿ ı:ÄÄ/// Creates a rounded-rectangular clip.
///
/// The [color] is required.
///
/// The [elevation] parameter must be non-negative.¿ ıA¿ ıH  ¿ ıR#¿ ı\  ¿ ı{¿ ıÇ  ¿ ıì¿ ı¢  ¿ ı≥¿ ı∫  ¿ ıŒ¿ ıﬁ  ¿ ıË+¿ ıÔ  ¿ ıc¿ ık¿ ıl¿ ı≈¿ ı¸¿ ˆ¿ ˆ¿ ˆ¿ ˆ¿ ˆ¿ ˆ"¿ ˆ3¿ ˆ-¿ ˆ#¿ ˆ0¿ ˆD¿ ˆ=¿ ˆF¿ ˆb¿ ˆT¿ ˆd¿ ˜ ¿ ˜)  ¿ ˘¿ ˘  ¿ ˆuÄ®¿ ˜ÄÇ/// The shape of the layer.
///
/// Defaults to [BoxShape.rectangle]. The [borderRadius] affects the corners
/// of the rectangle.   ¿ ˜3w¿ ˜7  ¿ ˜=¿ ˜G   ¿ ˜ÆÅ]¿ ¯ÌÅ/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This property is ignored if the [shape] is not [BoxShape.rectangle].
///
/// The value null is treated like [BorderRadius.zero].   ¿ ˘-Äë¿ ˘1  ¿ ˘>¿ ˘M   ¿ ˘¬Å,¿ ˘ÿ   ¿ ˘¬¿ ˘√¿ ˙ÚÅ%¿ ˚  ¿ ˚¿ ˚  ¿ ˚&¿ ˚7  ¿ ˙Ú¿ ˙Û¿ ¸áF¿ ¸,  ¿ ¸2¿ ¸C  ¿ ¸K¿ ¸S  ¿ ¸¿ ¸¿eÅ¿v  ¿ä'¿ß  ¿e¿f ¿Çå"¿áÄ˛/// Creates a physical shape layer that clips its child to a [Path].
///
/// A physical shape layer casts a shadow based on its [elevation].
///
/// See also:
///
///  * [RenderPhysicalModel], which is optimized for rounded rectangles and
///    circles. ¿∆Åó ¿h¿{Äó/// Creates an arbitrary shape clip.
///
/// The [color] and [clipper] parameters are required.
///
/// The [elevation] parameter must be non-negative.¿Ç¿â  ¿ì*¿∑  ¿√¿   ¿€¿‚  ¿ˆ¿  ¿+¿  ¿Ì¿$¿*¿/¿:¿0¿D¿J¿[¿U¿K¿X ¿aI¿v   ¿a¿b¿ÆÅ%¿ø  ¿«¿Ÿ  ¿‚¿Û  ¿Æ¿Ø¿◊Üı¿Ë  ¿Ó¿ˇ  ¿	¿	  ¿◊¿ÿ¿–Ä“¿·  ¿ı'¿  ¿–¿— ¿rí¿ªB/// Paints a [Decoration] either before or after its child paints. ¿ÈÇ| ¿¿-Å#/// Creates a decorated box.
///
/// The [decoration], [position], and [configuration] arguments must not be
/// null. By default the decoration paints behind the child.
///
/// The [ImageConfiguration] will be passed to the decoration (with the size
/// filled in) to let it resolve images.¿4¿I  ¿X;¿l  ¿ô;¿≠  ¿⁄¿Ê  ¿v¿à¿â¿º¿Œ¿œ¿ˇ¿Û¿¿¿¿ ¿@¿1¿B¿X¿]¿c¿^¿i¿u  ¿ˆ¿  ¿F¿Y  ¿g!¿z  ¿Çq¿ŸA/// What decoration to paint.
///
/// Commonly a [BoxDecoration].   ¿Ä∑¿  ¿¿+   ¿Àx¿-H/// Whether to paint the box decoration behind or in front of the child.   ¿fÄã¿j  ¿s¿á   ¿ıÅo¿DÅ+/// The settings to pass to the decoration when painting, so that it can
/// resolve images appropriately. See [ImageProvider.resolve] and
/// [BoxPainter.paint].
///
/// The [ImageConfiguration.textDirection] field is also used by
/// direction-sensitive [Decoration]s for painting and hit-testing.   ¿åÄö¿ê  ¿û¿≤   ¿*Åÿ¿;   ¿*¿+¿N¿   ¿¿¿XÄè¿i  ¿u¿}  ¿X¿Y¿ÎÜ}¿¸  ¿¿  ¿¿#  ¿Î¿Ï¿"lÅ!¿"}  ¿"ë&¿"Æ  ¿"l¿"m ¿#ë£p¿#œ7/// Applies a transformation before painting its child. ¿#˙Å· ¿$3¿$B6/// Creates a render object that transforms its child.¿$I¿$[  ¿$i¿$r  ¿$}¿$ë  ¿$ü¿$Ø  ¿$¡¿$«  ¿$‰¿$Ù  ¿%¿%  ¿$⁄¿%¿%$¿%*¿%%¿' ¿'(  ¿*®¿*ª  ¿,z¿,â  ¿-∞Åv¿/ÅS/// When set to true, hit tests are performed based on the position of the
/// child as it is painted. When set to false, hit tests are performed
/// ignoring the transformation.
///
/// [applyPaintTransform], and therefore [localToGlobal] and [globalToLocal],
/// always honor the transformation, regardless of the value of this property. ¿/+¿/4  ¿2"¿21  ¿%ﬂÅ>¿'Å/// The origin of the coordinate system (relative to the upper left corner of
/// this render object) in which to apply the matrix.
///
/// Setting an origin is equivalent to conjugating the transform matrix by a
/// translation. This property is provided just for convenience.   ¿'3Äö¿'7  ¿'>¿'G   ¿'—Ç‘¿*çÇé/// The alignment of the origin, relative to the size of the box.
///
/// This is equivalent to setting an origin based on the size of the box.
/// If it is specified at the same time as an offset, both are applied.
///
/// An [AlignmentDirectional.centerStart] value is the same as an [Alignment]
/// whose [Alignment.x] value is `-1.0` if [textDirection] is
/// [TextDirection.ltr], and `1.0` if [textDirection] is [TextDirection.rtl].
/// Similarly [AlignmentDirectional.centerEnd] is the same as an [Alignment]
/// whose [Alignment.x] value is `1.0` if [textDirection] is
/// [TextDirection.ltr], and `-1.0` if [textDirection] is [TextDirection.rtl].   ¿*…ÄÆ¿*Õ  ¿*◊¿*Î   ¿+{Ä¸¿,WÄ¿/// The text direction with which to resolve [alignment].
///
/// This may be changed to null, but only after [alignment] has been changed
/// to a value that does not depend on the direction.   ¿,õÄ∂¿,ü  ¿,≠¿,Ω   ¿-UW¿-j   ¿-U¿-V¿/BÇ¿0zÅ'/// The matrix to transform the child by during painting. The provided value
/// is copied on assignment.
///
/// There is no getter for [transform], because [Matrix4] is mutable, and
/// mutations outside of the control of the render object could not reliably
/// be reflected in the rendering. ¿0Ñ¿0ç   ¿1TÄÀ¿1ˇÄë/// The filter quality with which to apply the transform as a bitmap operation.
///
/// {@macro flutter.widgets.Transform.optional.FilterQuality}   ¿2CÅ8¿2G  ¿2U¿2e   ¿8ÇÓ¿8    ¿3Äû¿3µ./// Sets the transform to the identity matrix.   ¿4!ÄΩ¿4i@/// Concatenates a rotation about the x axis into the transform. ¿4q¿4y   ¿4‚ÄΩ¿5*@/// Concatenates a rotation about the y axis into the transform. ¿52¿5:   ¿5£ÄΩ¿5Î@/// Concatenates a rotation about the z axis into the transform. ¿5Û¿5˚   ¿6dÄﬁ¿6´?/// Concatenates a translation by (x, y, z) into the transform. ¿6µ¿6Ω  ¿6¡¿6…  ¿6—¿6Ÿ  ¿6Ã¿6‹¿7FÄπ¿7z,/// Concatenates a scale into the transform. ¿7Ä¿7à  ¿7å	¿7ï  ¿7ó	¿7†   ¿:ıÅY¿;  ¿;¿;   ¿;)¿;:  ¿:ı¿:ˆ¿<RÅÆ¿<c  ¿<s¿<Ö  ¿<é¿<ü  ¿<R¿<S¿>Ü`¿>  ¿>¿>,  ¿>4¿><  ¿>¿>¿Dh|¿Dy  ¿Dç¿Dò  ¿Dû¿Dß  ¿Dh¿Di¿DËÇ¿D˘  ¿E&¿E*  ¿DË¿DÈ ¿Gü_¿GND/// Scales and positions its child within itself according to [fit]. ¿GyÅà ¿G≠¿Gº1/// Scales and positions its child within itself.¿G√¿GÀ  ¿G‰.¿G˜  ¿H¿H(  ¿H:¿HF  ¿HP¿HV  ¿G–¿G÷¿G◊¿H¿H¿H¿Hd¿Hh¿Hi¿H{¿Hv¿H}¿Hî¿Hâ¿Hñ¿H∑¿H®¿Hπ¿H›¿Hœ¿Hﬂ¿HÙ¿H˘¿Hˇ¿H˙¿IX¿Ic  ¿K_¿Kf  ¿N:¿NL  ¿P¿P  ¿WN¿WT  ¿Wj¿Ws  ¿X¿X ¿X¿X ¿X!¿J˝_¿KPE/// How to inscribe the child into the space allocated during layout.   ¿KnÅ¿Kr  ¿Kv¿K~   ¿LåÅ´¿NÅl/// How to align the child within its parent's bounds.
///
/// An alignment of (0.0, 0.0) aligns the child to the top-left corner of its
/// parent's bounds. An alignment of (1.0, 0.5) aligns the child to the middle
/// of the right edge of its parent's bounds.
///
/// If this is set to an [AlignmentDirectional] object, then
/// [textDirection] must not be null.   ¿NZÄ©¿N^  ¿Nh¿N{   ¿OÄ¸¿O„Ä¿/// The text direction with which to resolve [alignment].
///
/// This may be changed to null, but only after [alignment] has been changed
/// to a value that does not depend on the direction.   ¿P'Ä≤¿P+  ¿P9¿PI   ¿WÇÄÇ¿WÊT/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.none].   ¿X)Ä°¿X-  ¿X:
¿X@   ¿IP¿I    ¿IzU¿I    ¿I”Å&¿Iÿ  ¿IÍ
¿IÚ   ¿QÉ#¿Q=  ¿QN$¿Qh  ¿Q¿Q ¿Q+¿Q,¿TFÉ¿TW   ¿TF¿TG¿XŒR¿X”    ¿Y$Ñd¿Y)    ¿]åÅ‰¿]ú  ¿]µ¿]∆  ¿]Œ¿]÷   ¿_tÇW¿_Ö  ¿_ã¿_ú  ¿_§¿_¨  ¿_t¿_u¿aœÅ∑¿a‡  ¿a¿b  ¿b¿b  ¿aœ¿a–¿cäÄÜ¿cõ  ¿cß¿c≤  ¿cä¿cã¿dÄ‹¿d%  ¿d9¿dD  ¿dJ¿dS  ¿d¿d¿dÙÅl¿e  ¿e&¿e6  ¿dÙ¿dı ¿fdåU¿h#Å∏/// Applies a translation transformation before painting its child.
///
/// The translation is expressed as an [Offset] scaled to the child's size. For
/// example, an [Offset] with a `dx` of 0.25 will result in a horizontal
/// translation of one quarter the width of the child.
///
/// Hit tests will only be detected inside the bounds of the
/// [RenderFractionalTranslation], even if the contents are offset such that
/// they overflow. ¿hZÄÛ ¿hû¿hπA/// Creates a render object that translates its child's painting.¿h¿¿h—  ¿h·¿hÁ  ¿i¿i  ¿h˙¿i*¿i¿i,¿i@¿iE¿iK¿iF¿jR¿jY  ¿l~Åv¿m„ÅS/// When set to true, hit tests are performed based on the position of the
/// child as it is painted. When set to false, hit tests are performed
/// ignoring the transformation.
///
/// applyPaintTransform(), and therefore localToGlobal() and globalToLocal(),
/// always honor the transformation, regardless of the value of this property. ¿iQÄ˛¿j3ÄŒ/// The translation to apply to the child, scaled to the child's size.
///
/// For example, an [Offset] with a `dx` of 0.25 will result in a horizontal
/// translation of one quarter the width of the child.   ¿jiÄ®¿jm  ¿jy¿jÅ   ¿kÅe¿k&  ¿k.¿k@  ¿kI¿kZ  ¿k¿k¿m˘Å ¿n
  ¿n¿n,  ¿n5¿nF  ¿m˘¿m˙¿o«Å¿oÿ  ¿oﬁ¿oÔ  ¿o˜¿oˇ  ¿o«¿o»¿p›Äµ¿pÓ  ¿q¿q  ¿q¿q  ¿p›¿pﬁ¿qñÅ!¿qß  ¿qª&¿qÿ  ¿qñ¿qó ¿xÓé€¿{"Ç-/// Calls callbacks in response to common pointer events.
///
/// It responds to events that can construct gestures, such as when the
/// pointer is pointer is pressed and moved, and then released or canceled.
///
/// It does not respond to events that are exclusive to mouse, such as when the
/// mouse enters and exits a region without pressing any buttons. For
/// these events, use [RenderMouseRegion].
///
/// If it has a child, defers to the child for sizing behavior.
///
/// If it does not have a child, grows to fit the parent-provided constraints. ¿{fÅÕ ¿{ˇ¿|Äí/// Creates a render object that forwards pointer events to callbacks.
///
/// The [behavior] argument defaults to [HitTestBehavior.deferToChild].¿|¿|!  ¿|3¿|9  ¿|K¿|Q  ¿|a¿|g  ¿|z¿|Ä  ¿|î¿|ö  ¿|¥¿|∫  ¿|’¿|€  ¿|Û¿|˘  ¿}¿}  ¿}!¿}(   	¿}7Ä“¿}¸Ä§/// Called when a pointer comes into contact with the screen (for touch
/// pointers), or has its button pressed (for mouse pointers) at this widget's
/// location. ¿~w¿~xM/// Called when a pointer that triggered an [onPointerDown] changes position. ¿~äÄê¿h/// Called when a pointer that triggered an [onPointerDown] is no longer in
/// contact with the screen. ¿w¿àK/// Called when a pointer that has not an [onPointerDown] changes position. ¿õÄ´¿Ä7{/// Called when the input from a pointer that triggered an [onPointerDown] is
/// no longer directed towards this receiver. ¿ÄK|¿Ä≤B/// Called when a pan/zoom begins such as from a trackpad gesture. ¿ÄÃb¿Å&/// Called when a pan/zoom is updated. ¿Å3Z¿Åz$/// Called when a pan/zoom finishes. ¿Åíg¿ÅÍ9/// Called when a pointer signal occurs over this object.  ¿Å˛h¿Ç  ¿Ç%¿Ç5  ¿Å˛¿Åˇ¿ÇjÉ¿Ç{  ¿Çá¿Çï  ¿Çõ¿Ç©  ¿Çj¿Çk¿Ö{ÇL¿Öå  ¿Ö†&¿ÖΩ  ¿Ö{¿Ö| ¿áÀî ¿äØÇ›/// Calls callbacks in response to pointer events that are exclusive to mice.
///
/// It responds to events that are related to hovering, i.e. when the mouse
/// enters, exits (with or without pressing buttons), or moves over a region
/// without pressing buttons.
///
/// It does not respond to common events that construct gestures, such as when
/// the pointer is pressed, moved, then released or canceled. For these events,
/// use [RenderPointerListener].
///
/// If it has a child, it defers to the child for sizing behavior.
///
/// If it does not have a child, it grows to fit the parent-provided constraints.
///
/// See also:
///
///  * [MouseRegion], a widget that listens to hover events using
///    [RenderMouseRegion]. ¿ãÇí ¿ã˜¿åÄ›/// Creates a render object that forwards pointer events to callbacks.
///
/// All parameters are optional. By default this method creates an opaque
/// mouse region with no callbacks and cursor being [MouseCursor.defer].¿å¿å  ¿å!¿å'  ¿å3¿å9  ¿åD&¿åQ  ¿åp ¿åv  ¿åñ¿åú  ¿åÆ¿åµ  ¿åø9¿å—  ¿åY¿åd¿åe¿åå¿å§¿å‚¿åÒ¿åÚ¿ç	¿ç¿ç¿ç0¿ç¿ç2¿çW¿çO¿çY¿çh¿çm¿ç°¿çv¿çn¿çà¿çx¿çã¿çö¿çõ¿ë‚¿ëÁ  ¿îl.¿îì ¿îl¿îm¿îüÄŒ¿ïfÄ£/// Triggered when a pointer has moved onto or within the region without
/// buttons pressed.
///
/// This callback is not triggered by the movement of the object. ¿ïr,¿ïò ¿ïr¿ïs¿ï‘¿ï‡  ¿ó*¿ó/  ¿èÇ‹¿ëÕÇ§/// Whether this object should prevent [RenderMouseRegion]s visually behind it
/// from detecting the pointer, thus affecting how their [onHover], [onEnter],
/// and [onExit] behave.
///
/// If [opaque] is true, this object will absorb the mouse pointer and
/// prevent this object's siblings (or any other objects that are not
/// ancestors or descendants of this object) from detecting the mouse
/// pointer even when the pointer is within their areas.
///
/// If [opaque] is false, this object will not affect how [RenderMouseRegion]s
/// behind it behave, which will detect the mouse pointer as long as the
/// pointer is within their areas.
///
/// This defaults to true.   ¿ëÚÄ∫¿ëˆ  ¿ë˝
¿í   ¿í∞Äò¿ì,`/// How to behave during hit testing.
///
/// This defaults to [HitTestBehavior.opaque] if null.   ¿ìKÅ¿ìO  ¿ì_¿ìq   ¿ï£.¿ïø   ¿ï£¿ï§¿ïÎÄı¿ïÔ  ¿ïˆ¿ñ   ¿ñ‰C¿ñ˘   ¿ñ‰¿ñÂ¿çßÄñ¿ç∏  ¿ç¿¿ç“  ¿ç€¿çÏ  ¿çß¿ç®¿éAÄæ¿éR  ¿é^¿él  ¿ér¿éÄ  ¿éA¿éB¿óIm¿óZ  ¿óa¿óp  ¿óI¿óJ¿ó∫Å$¿óÀ   ¿ó∫¿óª¿ò‚h¿òÛ  ¿ô	¿ô  ¿ò‚¿ò„¿ôNÇõ¿ô_  ¿ôs&¿ôê  ¿ôN¿ôO ¿õÌ©_¿¢HÜT/// Creates a separate display list for its child.
///
/// This render object creates a separate display list for its child, which
/// can improve performance if the subtree repaints at different times than
/// the surrounding parts of the tree. Specifically, when the child does not
/// repaint but its parent does, we can re-use the display list we recorded
/// previously. Similarly, when the child repaints but the surround tree does
/// not, we can re-record its display list without re-recording the display list
/// for the surround tree.
///
/// In some cases, it is necessary to place _two_ (or more) repaint boundaries
/// to get a useful effect. Consider, for example, an e-mail application that
/// shows an unread count and a list of e-mails. Whenever a new e-mail comes in,
/// the list would update, but so would the unread count. If only one of these
/// two parts of the application was behind a repaint boundary, the entire
/// application would repaint each time. On the other hand, if both were behind
/// a repaint boundary, a new e-mail would only change those two parts of the
/// application and the rest of the application would not repaint.
///
/// To tell if a particular RenderRepaintBoundary is useful, run your
/// application in debug mode, interacting with it in typical ways, and then
/// call [debugDumpRenderTree]. Each RenderRepaintBoundary will include the
/// ratio of cases where the repaint boundary was useful vs the cases where it
/// was not. These counts can also be inspected programmatically using
/// [debugAsymmetricPaintCount] and [debugSymmetricPaintCount] respectively. ¿¢yl ¿¢™¿¢ø./// Creates a repaint boundary around [child].¿¢¬¿¢Œ  ¿¢ÿ¿¢›¿¢„¿¢ﬁ¿∏´!¿∏Ø ¿∏À¿ª·"¿ªÂ ¿º¿¢È/¿¢˛   ¿¢È¿¢Í¿∂Çã¿∏rÇ6/// The number of times that this render object repainted at the same time as
/// its parent. Repaint boundaries are only useful when the parent and child
/// paint at different times. When both paint at the same time, the repaint
/// boundary is redundant, and may be actually making performance worse.
///
/// Only valid when asserts are enabled. In release builds, always returns
/// zero.
///
/// Can be reset using [debugResetMetrics]. See [debugAsymmetricPaintCount]
/// for the corresponding count of times where only the parent or only the
/// child painted.   ¿∏—É¿ª¶Ç≤/// The number of times that either this render object repainted without the
/// parent being painted, or the parent repainted without this object being
/// painted. When a repaint boundary is used at a seam in the render tree
/// where the parent tends to repaint at entirely different times than the
/// child, it can improve performance by reducing the number of paint
/// operations that have to be recorded each frame.
///
/// Only valid when asserts are enabled. In release builds, always returns
/// zero.
///
/// Can be reset using [debugResetMetrics]. See [debugSymmetricPaintCount] for
/// the corresponding count of times where both the parent and the child
/// painted together.   ¿£â>¿´ãáÁ/// Capture an image of the current state of this render object and its
/// children.
///
/// The returned [ui.Image] has uncompressed raw RGBA bytes in the dimensions
/// of the render object, multiplied by the [pixelRatio].
///
/// To use [toImage], the render object must have gone through the paint phase
/// (i.e. [debugNeedsPaint] must be false).
///
/// The [pixelRatio] describes the scale between the logical pixels and the
/// size of the output image. It is independent of the
/// [dart:ui.FlutterView.devicePixelRatio] for the device, so specifying 1.0
/// (the default) will give you a 1:1 mapping between logical pixels and the
/// output pixels in the image.
///
/// {@tool snippet}
///
/// The following is an example of how to go from a `GlobalKey` on a
/// `RepaintBoundary` to a PNG:
///
/// ```dart
/// class PngHome extends StatefulWidget {
///   const PngHome({super.key});
///
///   @override
///   State<PngHome> createState() => _PngHomeState();
/// }
///
/// class _PngHomeState extends State<PngHome> {
///   GlobalKey globalKey = GlobalKey();
///
///   Future<void> _capturePng() async {
///     final RenderRepaintBoundary boundary = globalKey.currentContext!.findRenderObject()! as RenderRepaintBoundary;
///     final ui.Image image = await boundary.toImage();
///     final ByteData? byteData = await image.toByteData(format: ui.ImageByteFormat.png);
///     final Uint8List pngBytes = byteData!.buffer.asUint8List();
///     print(pngBytes);
///   }
///
///   @override
///   Widget build(BuildContext context) {
///     return RepaintBoundary(
///       key: globalKey,
///       child: Center(
///         child: TextButton(
///           onPressed: _capturePng,
///           child: const Text('Hello World', textDirection: TextDirection.ltr),
///         ),
///       ),
///     );
///   }
/// }
/// ```
/// {@end-tool}
///
/// See also:
///
///  * [OffsetLayer.toImage] for a similar API at the layer level.
///  * [dart:ui.Scene.toImage] for more information about the image returned. ¿´ï¿´ù  ¿´©¿¨^âª¿µBàb/// Capture an image of the current state of this render object and its
/// children synchronously.
///
/// The returned [ui.Image] has uncompressed raw RGBA bytes in the dimensions
/// of the render object, multiplied by the [pixelRatio].
///
/// To use [toImageSync], the render object must have gone through the paint phase
/// (i.e. [debugNeedsPaint] must be false).
///
/// The [pixelRatio] describes the scale between the logical pixels and the
/// size of the output image. It is independent of the
/// [dart:ui.FlutterView.devicePixelRatio] for the device, so specifying 1.0
/// (the default) will give you a 1:1 mapping between logical pixels and the
/// output pixels in the image.
///
/// This API functions like [toImage], except that rasterization begins eagerly
/// on the raster thread and the image is returned before this is completed.
///
/// {@tool snippet}
///
/// The following is an example of how to go from a `GlobalKey` on a
/// `RepaintBoundary` to an image handle:
///
/// ```dart
/// class ImageCaptureHome extends StatefulWidget {
///   const ImageCaptureHome({super.key});
///
///   @override
///   State<ImageCaptureHome> createState() => _ImageCaptureHomeState();
/// }
///
/// class _ImageCaptureHomeState extends State<ImageCaptureHome> {
///   GlobalKey globalKey = GlobalKey();
///
///   void _captureImage() {
///     final RenderRepaintBoundary boundary = globalKey.currentContext!.findRenderObject()! as RenderRepaintBoundary;
///     final ui.Image image = boundary.toImageSync();
///     print('Image dimensions: ${image.width}x${image.height}');
///   }
///
///   @override
///   Widget build(BuildContext context) {
///     return RepaintBoundary(
///       key: globalKey,
///       child: Center(
///         child: TextButton(
///           onPressed: _captureImage,
///           child: const Text('Hello World', textDirection: TextDirection.ltr),
///         ),
///       ),
///     );
///   }
/// }
/// ```
/// {@end-tool}
///
/// See also:
///
///  * [OffsetLayer.toImageSync] for a similar API at the layer level.
///  * [dart:ui.Scene.toImageSync] for more information about the image returned. ¿µP¿µX  ¿µd¿ºÅI¿º¿Ä™/// Resets the [debugSymmetricPaintCount] and [debugAsymmetricPaintCount]
/// counts to zero.
///
/// Only valid when asserts are enabled. Does nothing in release builds.   ¿ΩUÅ6¿Ωf  ¿Ωä¿Ωê  ¿Ω¶¿Ω¨  ¿ΩU¿ΩV¿Ω†¿Ωª¿æèÜª¿æ†  ¿æ¥&¿æ—  ¿æè¿æê ¿≈Nçà¿»+Ç÷/// A render object that is invisible during hit testing.
///
/// When [ignoring] is true, this render object (and its subtree) is invisible
/// to hit testing. It still consumes space during layout and paints its child
/// as usual. It just cannot be the target of located events, because its render
/// object returns false from [hitTest].
///
/// ## Semantics
///
/// Using this class may also affect how the semantics subtree underneath is
/// collected.
///
/// {@macro flutter.widgets.IgnorePointer.semantics}
///
/// {@macro flutter.widgets.IgnorePointer.ignoringSemantics}
///
/// See also:
///
///  * [RenderAbsorbPointer], which takes the pointer events but prevents any
///    nodes in the subtree from seeing them. ¿»ZÅ• ¿»ö¿»≠=/// Creates a render object that is invisible to hit testing.¿»¥¿»¿  ¿» ¿»–  ¿»‰Äπ¿…ç  ¿»⁄¿»‰¿»Â¿»Ô¿…Ä¿»˜¿…G¿…∞¿…¶¿…≤¿…÷¿…√¿…ÿ¿…Ú¿…˜¿…˝¿…¯¿ÀF¿ÀK  ¿ÕŸ¿Õﬂ  ¿ Å@¿À-Å/// Whether this render object is ignored during hit testing.
///
/// Regardless of whether this render object is ignored during hit testing, it
/// will still consume space during layout and be visible during painting.
///
/// {@macro flutter.widgets.IgnorePointer.semantics}   ¿ÀXÄ¥¿À\  ¿Àe
¿Àk   ¿ÃÅ∆¿ÕÆÄÔ/// Whether the semantics of this render object is ignored when compiling the semantics tree.
///
/// {@macro flutter.widgets.IgnorePointer.ignoringSemantics}
///
/// See [SemanticsNode] for additional information about the semantics tree.  ¿Õ
¿Õ¿Õ¿Õ†¿Õ¿Õi¿ÕıÄ£¿Õ˘  ¿Œ¿Œ   ¿ŒúÄò¿Œ≠  ¿Œµ¿Œ«  ¿Œ–¿Œ·  ¿Œú¿Œù¿œ8Ä∂¿œI  ¿œc¿œx  ¿œ8¿œ9¿œÚÅB¿–  ¿–"¿–:  ¿œÚ¿œÛ¿—8Åú¿—I  ¿—]&¿—z  ¿—8¿—9 ¿“ÿçÃ¿”ïÄ∂/// Lays the child out as if it was in the tree, but without painting anything,
/// without making the child available for hit testing, and without taking any
/// room in the parent. ¿”øÄõ ¿”Ë¿”ˆ&/// Creates an offstage render object.¿”˝¿‘  ¿‘¿‘#  ¿‘¿‘:¿‘0¿‘<¿‘M¿‘R¿‘X¿‘S¿’œ¿’‘  ¿‘^Ån¿’∂Å@/// Whether the child is hidden from the rest of the tree.
///
/// If true, the child is laid out as if it was in the tree, but without
/// painting anything, without making the child available for hit testing, and
/// without taking any room in the parent.
///
/// If false, the child is included in the tree as normal.   ¿’·Äî¿’Â  ¿’Ó
¿’Ù   ¿Ÿ¬/¿Ÿ◊   ¿Ÿ¬¿Ÿ√¿÷yÄü¿÷å  ¿÷•¿÷≠  ¿÷y¿÷z¿◊Äü¿◊/  ¿◊H¿◊P  ¿◊¿◊¿◊øÄü¿◊“  ¿◊Ï¿◊Ù  ¿◊ø¿◊¿¿ÿbÄü¿ÿu  ¿ÿè¿ÿó  ¿ÿb¿ÿc¿ŸÄπ¿Ÿ  ¿Ÿ9¿ŸG  ¿Ÿ¿Ÿ¿ŸıÄ≠¿⁄	  ¿⁄¿⁄,  ¿⁄8¿⁄F  ¿Ÿı¿Ÿˆ¿⁄¶Ä«¿⁄ƒ  ¿⁄’$¿⁄Ô  ¿⁄¶¿⁄ß¿⁄≤¿⁄≥¿€qW¿€Ç   ¿€q¿€r¿€ÃÄå¿€›   ¿€Ã¿€Õ¿‹\Äò¿‹m  ¿‹u¿‹á  ¿‹ê¿‹°  ¿‹\¿‹]¿‹¯k¿›	  ¿›¿›   ¿‹¯¿‹˘¿›gÄé¿›x  ¿›~¿›è  ¿›ó¿›ü  ¿›g¿›h¿›˘Ä£¿ﬁ
  ¿ﬁ$¿ﬁ9  ¿›˘¿›˙¿ﬁ†Ä¬¿ﬁ±  ¿ﬁ≈&¿ﬁ‚  ¿ﬁ†¿ﬁ°¿ﬂfÅ<¿ﬂà   ¿ﬂf¿ﬂg ¿‡¶é9¿„‰É7/// A render object that absorbs pointers during hit testing.
///
/// When [absorbing] is true, this render object prevents its subtree from
/// receiving pointer events by terminating hit testing at itself. It still
/// consumes space during layout and paints its child as usual. It just prevents
/// its children from being the target of located events, because its render
/// object returns true from [hitTest].
///
/// ## Semantics
///
/// Using this class may also affect how the semantics subtree underneath is
/// collected.
///
/// {@macro flutter.widgets.AbsorbPointer.semantics}
///
/// {@macro flutter.widgets.AbsorbPointer.ignoringSemantics}
///
/// See also:
///
///  * [RenderIgnorePointer], which has the opposite effect: removing the
///    subtree from considering entirely for the purposes of hit testing. ¿‰Å∞ ¿‰[¿‰nE/// Creates a render object that absorbs pointers during hit testing.¿‰u¿‰Å  ¿‰ã¿‰ë  ¿‰¶Äπ¿ÂO  ¿‰ú¿‰¶¿‰ß¿‰±¿ÂB¿‰π¿Â	¿Âs¿Âh¿Âu¿Âö¿Âá¿Âú¿Â∂¿Âª¿Â¡¿Âº¿Á¿Á#  ¿Èª¿È¡  ¿Â«ÅT¿ÁÅ$/// Whether this render object absorbs pointers during hit testing.
///
/// Regardless of whether this render object absorbs pointers during hit
/// testing, it will still consume space during layout and be visible during
/// painting.
///
/// {@macro flutter.widgets.AbsorbPointer.semantics}   ¿Á1Ä∑¿Á5  ¿Á?
¿ÁE   ¿ÁÏÅÃ¿ÈêÄÛ/// Whether the semantics of this render object is ignored when compiling the
/// semantics tree.
///
/// {@macro flutter.widgets.AbsorbPointer.ignoringSemantics}
///
/// See [SemanticsNode] for additional information about the semantics tree.  ¿ËÏ¿ËÌ¿Ë˜¿ÈÇ¿Ë˝¿ÈK¿È◊Ä£¿È€  ¿ÈÌ¿ÈÙ   ¿Í~Ä¡¿Íè  ¿Íó¿Í©  ¿Í≤¿Í√  ¿Í~¿Í¿ÎCÄ∂¿ÎT  ¿În¿ÎÉ  ¿ÎC¿ÎD¿Î˝ÅB¿Ï  ¿Ï-¿ÏE  ¿Î˝¿Î˛¿ÌCÅö¿ÌT  ¿Ìh&¿ÌÖ  ¿ÌC¿ÌD ¿Ó·És¿,ÅD/// Holds opaque meta data in the render tree.
///
/// Useful for decorating the render tree with information that will be consumed
/// later. For example, you could store information in the render tree that will
/// be used when the user interacts with the render tree but has no visual
/// impact prior to the interaction. ¿iÄÿ ¿Û¿ÒÄÉ/// Creates a render object that hold opaque meta data.
///
/// The [behavior] argument defaults to [HitTestBehavior.deferToChild].¿Ò¿Ò  ¿Ò¿Ò"  ¿Ò/¿Ò6   ¿ÒEC¿ÒÄ0/// Opaque meta data ignored by the render tree.  ¿ÒçÄ≈¿Òû  ¿Ò≤&¿Òœ  ¿Òç¿Òé ¿ÚVöë¿Úøb/// Listens for the specified gestures from the semantics server (e.g.
/// an accessibility tool). ¿ÛÇ
 ¿ÛV¿ÛsH/// Creates a render object that listens for specific semantic gestures.¿Ûz¿ÛÅ  ¿Ûã¿Û†  ¿Û™%¿Û≈  ¿Û’1¿ÛÒ  ¿Ù/¿Ù(  ¿ÙA¿ÙG  ¿Ù^¿Ùe  ¿ÙU¿Ù|¿Ùu¿Ù~¿Ùô¿Ùå¿Ùõ¿Ù«¿ÙØ¿Ù…¿Ù˛¿ÙË¿ı ¿¯+#¿¯A  ¿˘u¿˘â  ¿˚&¿˚+  ¿¸€2¿¸ˆ  ¿˛…0¿˛‰  ¿ .Å2¿TÅ/// The fraction of the dimension of this render box to use when
/// scrolling. For example, if this is 0.8 and the box is 200 pixels
/// wide, then when a left-scroll action is received from the
/// accessibility system, it will translate into a 160 pixel
/// leftwards drag. 
¿ıÉ¿¯
Çº/// If non-null, the set of actions to allow. Other actions will be omitted,
/// even if their callback is provided.
///
/// For example, if [onTap] is non-null but [validActions] does not contain
/// [SemanticsAction.tap], then the semantic description of this node will
/// not claim to support taps.
///
/// This is normally used to filter the actions made available by
/// [onHorizontalDragUpdate] and [onVerticalDragUpdate]. Normally, these make
/// both the right and left, or up and down, actions available. For example,
/// if [onHorizontalDragUpdate] is set but [validActions] only contains
/// [SemanticsAction.scrollLeft], then the [SemanticsAction.scrollRight]
/// action will be omitted.   ¿¯RÄæ¿¯V  ¿¯c¿¯z   ¿˘^¿˘b3/// Called when the user taps on the render object.   ¿˘ìÄÍ¿˘ó  ¿˘ù¿˘≤   ¿˙ÅÄç¿˙ÚP/// Called when the user presses on the render object for a long period of time.   ¿˚;Å¿˚?  ¿˚K¿˚f   ¿¸GÄë¿¸¶=/// Called when the user scrolls to the left or to the right.   ¿˝Å5¿˝  ¿˝, ¿˝H   ¿˛J|¿˛ò,/// Called when the user scrolls up or down.   ¿˛˝Å-¿ˇ  ¿ˇ ¿ˇ2   ¿eÉ¶¿v  ¿ï¿≠  ¿e¿f¿t¿  ¿#¿4   ¿áÅW¿å    ¿‚ÅW¿Á    ¿=ÅR¿B    ¿	ìÅS¿	ò    ¿
ÍÅ˚¿
˚  ¿&¿,  ¿
Í¿
Î ¿Èª¿,</// Add annotations to the [SemanticsNode] for this subtree. ¿bÇ˘ ¿¿0Ä≠/// Creates a render object that attaches a semantic annotation.
///
/// If the [SemanticsProperties.attributedLabel] is not null, the [textDirection] must also not be null.¿7¿C  ¿M'¿k  ¿z¿Ä  ¿ñ¿ú  ¿ª¿¡  ¿ﬁ¿‰  ¿¿  ¿ã¿∞¿”¿ˆ¿2¿'¿4¿[¿G¿]¿ã¿y¿ç¿π¿ß¿ª¿‰¿’¿Ê¿	¿˝¿¿¿$¿*¿%¿‚¿ˆ  ¿t¿y  ¿¿  ¿M¿R  ¿*¿/  ¿!ï"¿!ß  ¿!ª"¿!Õ  ¿!·+¿!Û  ¿"+¿""  ¿"?!¿"Q  ¿$¿$(  ¿_ÄÄ¿≈K/// All of the [SemanticsProperties] for this [RenderSemanticsAnnotations].   ¿Ä∆¿	  ¿¿)   ¿œÅ¢¿YÅr/// If 'container' is true, this [RenderObject] will introduce a new
/// node in the semantics tree. Otherwise, the semantics will be
/// merged with the semantics of any ancestors.
///
/// Whether descendants of this [RenderObject] can add their semantic information
/// to the [SemanticsNode] introduced by this configuration is controlled by
/// [explicitChildNodes].   ¿áÄâ¿ã  ¿ï
¿õ   ¿Ç¿⁄Ç¢/// Whether descendants of this [RenderObject] are allowed to add semantic
/// information to the [SemanticsNode] annotated by this widget.
///
/// When set to false descendants are allowed to annotate [SemanticsNode]s of
/// their parent with the semantic information they want to contribute to the
/// semantic tree.
/// When set to true the only way for descendants to contribute semantic
/// information to the semantic tree is to introduce new explicit
/// [SemanticsNode]s to the tree.
///
/// This setting is often used in combination with
/// [SemanticsConfiguration.isSemanticBoundary] to create semantic boundaries
/// that are either writable or not for children.   ¿#Ä•¿'  ¿:
¿@   ¿ÃÅ~¿$ÅB/// Whether descendants of this [RenderObject] should have their semantic
/// information ignored.
///
/// When this flag is set to true, all child semantics nodes are ignored.
/// This can be used as a convenience for cases where a child is wrapped in
/// an [ExcludeSemantics] widget and then another [Semantics] widget.   ¿gÄü¿k  ¿|
¿Ç   ¿
Å¿Ä„/// Whether to block user interactions for the semantics subtree.
///
/// Setting this true prevents user from activating pointer related
/// [SemanticsAction]s, such as [SemanticsAction.tap] or
/// [SemanticsAction.longPress].   ¿DÄü¿H  ¿Y
¿_   ¿"eÅ±¿#ˆÅm/// If non-null, sets the [SemanticsNode.textDirection] semantic to the given
/// value.
///
/// This must not be null if [SemanticsProperties.attributedLabel],
/// [SemanticsProperties.attributedHint],
/// [SemanticsProperties.attributedValue],
/// [SemanticsProperties.attributedIncreasedValue], or
/// [SemanticsProperties.attributedDecreasedValue] are not null.   ¿$:Äü¿$>  ¿$L¿$\   ¿ÁÅ|¿Ï  ¿¿   ¿gÄ∑¿y  ¿ì¿®   ¿"Ä∑¿4  ¿N¿c   ¿›Ä˙¿Ô  ¿¿.   ¿€Äˇ¿Ì  ¿ ¿ ,   ¿ ﬁÄ≥¿   ¿!	¿!   ¿$›Ä´¿$Ó  ¿%¿%  ¿$›¿$ﬁ¿%åõK¿%ù  ¿%º¿%‘  ¿%å¿%ç¿@€7¿@‡    ¿AC¿A    ¿A]?¿Ab    ¿A†E¿A•    ¿AÈG¿AÓ    ¿B4A¿B9    ¿ByE¿B~    ¿B¬A¿B«    ¿CA¿C    ¿CL9¿CQ    ¿Câ7¿Cé    ¿Cƒ;¿C…    ¿DÄå¿D  ¿D-¿D3   ¿DìÄé¿Dò  ¿Dæ¿Dƒ   ¿E%ÄÇ¿E*  ¿EJ¿EP   ¿E´ÄÑ¿E∞  ¿E—¿E◊   ¿F3i¿F8  ¿FM¿F\   ¿F†N¿F•  ¿Fµ¿FΩ   ¿FÚc¿F˜    ¿GYc¿G^    ¿G¿;¿G≈     ¿GˇÑÌ¿H˜ÄÒ/// Causes the semantics of all earlier render objects below the same semantic
/// boundary to be dropped.
///
/// This is useful in a stack where an opaque mask should prevent interactions
/// with the render objects painted below the mask. ¿I'Ä‘ ¿IÉ¿IóW/// Create a render object that blocks semantics for nodes below it in paint
/// order.¿Iû¿I™  ¿I¥¿I∫  ¿Iƒ¿I€¿I—¿I›¿IÓ¿IÛ¿I˘¿IÙ¿Jæ¿J√  ¿IˇÄº¿J•Äò/// Whether this render object is blocking semantics of previously painted
/// [RenderObject]s below a common semantics boundary from the semantic tree.   ¿J–Äá¿J‘  ¿J›
¿J„   ¿K[Ä…¿Kl  ¿Kã¿K£  ¿K[¿K\¿L(Ä¬¿L9  ¿LM&¿Lj  ¿L(¿L) ¿LÓÉ¿NRÅ]/// Causes the semantics of all descendants to be merged into this
/// node such that the entire subtree becomes a single leaf in the
/// semantics tree.
///
/// Useful for combining the semantics of multiple render objects that
/// form part of a single conceptual widget, e.g. a checkbox, a label,
/// and the gesture detector that goes with them. ¿NÇÄà ¿N–¿N‰K/// Creates a render object that merges the semantics from its descendants.¿NÁ¿NÛ  ¿N˝¿O¿O¿O  ¿OÄ„¿O  ¿O>¿OV  ¿O¿O ¿OıÑ°¿Q"Å&/// Excludes this subtree from the semantic tree.
///
/// When [excluding] is true, this render object (and its subtree) is excluded
/// from the semantic tree.
///
/// Useful e.g. for hiding text that is redundant with other text next
/// to it (e.g. text included only for the visual effect). ¿QTÄ∆ ¿Qù¿Q≥F/// Creates a render object that ignores the semantics of its subtree.¿Q∫¿Q∆  ¿Q–¿Q÷  ¿Q·¿Q˘¿QÓ¿Q˚¿R¿R¿R¿R¿Rá¿Rå  ¿Rf¿RlB/// Whether this render object is excluded from the semantic tree.   ¿RöÄä¿Rû  ¿R®
¿RÆ   ¿S(Ä§¿S9  ¿SS¿Sh  ¿S(¿S)¿S–Äƒ¿S·  ¿Sı&¿T  ¿S–¿S— ¿TòÑÃ¿V'Åà/// A render objects that annotates semantics with an index.
///
/// Certain widgets will automatically provide a child index for building
/// semantics. For example, the [ScrollView] uses the index of the first
/// visible child semantics node to determine the
/// [SemanticsConfiguration.scrollIndex].
///
/// See also:
///
///  * [CustomScrollView], for an explanation of scroll semantics. ¿VYÄ¬ ¿V©¿VøM/// Creates a render object that annotates the child semantics with an index.¿V∆¿V“  ¿V‹¿VÍ  ¿V˛¿V˜¿W ¿W¿W¿W¿W¿Wm
¿Wq  ¿WK¿WZ0/// The index used to annotated child semantics.   ¿W{|¿W  ¿WÖ	¿Wä   ¿W˚Ä®¿X  ¿X+¿XC  ¿W˚¿W¸¿XßÄª¿X∏  ¿XÃ&¿XÈ  ¿Xß¿X® ¿Yfá€¿Z5Ä»/// Provides an anchor for a [RenderFollowerLayer].
///
/// See also:
///
///  * [CompositedTransformTarget], the corresponding widget.
///  * [LeaderLayer], the layer that this render object creates. ¿ZbÄ© ¿Zõ¿Z¨6/// Creates a render object that uses a [LeaderLayer].¿Z≥¿Z«  ¿Z–¿Z‹  ¿ZÔ¿ZÈ¿ZÒ¿Z˛¿[¿[	¿[¿\¿\  ¿^&¿^,  ¿[Ä˘¿[˙Ä“/// The link object that connects this [RenderLeaderLayer] with one or more
/// [RenderFollowerLayer]s.
///
/// The object must not be associated with another [RenderLeaderLayer] that is
/// also being painted.   ¿\ÄÓ¿\"  ¿\'¿\2   ¿]4¿]%   ¿]¿]¿^D}¿^U   ¿^D¿^E¿^≈Å∑¿^÷  ¿^‹¿^Ì  ¿^ı¿^˝  ¿^≈¿^∆¿`ÄÄø¿`ë  ¿`•&¿`¬  ¿`Ä¿`Å ¿aCúô¿cgÇ/// Transform the child so that its origin is [offset] from the origin of the
/// [RenderLeaderLayer] with the same [LayerLink].
///
/// The [RenderLeaderLayer] in question must be earlier in the paint order.
///
/// Hit testing on descendants of this render object will only work if the
/// target position is within the box that this render object's parent considers
/// to be hittable.
///
/// See also:
///
///  * [CompositedTransformFollower], the corresponding widget.
///  * [FollowerLayer], the layer that this render object creates. ¿cñÅÊ ¿c—¿c‰8/// Creates a render object that uses a [FollowerLayer].¿cÎ¿cˇ  ¿d¿d  ¿d*¿d2  ¿dK*¿dV  ¿d{,¿dÜ  ¿d≠¿dπ  ¿d ¿d:¿d@¿dA¿dd¿dm¿dn¿dñ¿dü¿d†¿dÃ¿d∆¿dŒ¿dÌ¿d€¿dÔ¿e¿e¿e¿e/¿e!¿e1¿eV¿eF¿eX¿eo¿et¿ez¿eu¿f¿f%  ¿hœ¿h‘  ¿j¿j   ¿mù¿mß  ¿ox¿oÇ  ¿eÄÄò¿f
w/// The link object that connects this [RenderFollowerLayer] with a
/// [RenderLeaderLayer] earlier in the paint order.   ¿f.v¿f2  ¿f7¿fB   ¿f®Ç$¿h¶Å‚/// Whether to show the render object's contents when there is no
/// corresponding [RenderLeaderLayer] with the same [link].
///
/// When the render object is linked, the child is positioned such that it has
/// the same global position as the linked [RenderLeaderLayer].
///
/// When the render object is not linked, then: if [showWhenUnlinked] is true,
/// the child is visible and not repositioned; if it is false, then child is
/// hidden, and its hit testing is also disabled.   ¿hÈÄï¿hÌ  ¿h˛
¿i   ¿iÇÄî¿jr/// The offset to apply to the origin of the linked [RenderLeaderLayer] to
/// obtain this render object's origin.   ¿j+y¿j/  ¿j6¿j>   ¿j®ÇÚ¿m|Ç©/// The anchor point on the linked [RenderLeaderLayer] that [followerAnchor]
/// will line up with.
///
/// {@template flutter.rendering.RenderFollowerLayer.leaderAnchor}
/// For example, when [leaderAnchor] and [followerAnchor] are both
/// [Alignment.topLeft], this [RenderFollowerLayer] will be top left aligned
/// with the linked [RenderLeaderLayer]. When [leaderAnchor] is
/// [Alignment.bottomLeft] and [followerAnchor] is [Alignment.topLeft], this
/// [RenderFollowerLayer] will be left aligned with the linked
/// [RenderLeaderLayer], and its top edge will line up with the
/// [RenderLeaderLayer]'s bottom edge.
/// {@endtemplate}
///
/// Defaults to [Alignment.topLeft].   ¿m∏Äé¿mº  ¿m…¿m‘   ¿nJÅ+¿oSÄÓ/// The anchor point on this [RenderFollowerLayer] that will line up with
/// [followerAnchor] on the linked [RenderLeaderLayer].
///
/// {@macro flutter.rendering.RenderFollowerLayer.leaderAnchor}
///
/// Defaults to [Alignment.topLeft].   ¿oïÄî¿oô  ¿o®¿o≥   ¿pv4¿pã   ¿pv¿pw¿pÆ|¿q3/// The layer we created when we were last painted.  ¿p‰¿pÂ¿p-E¿p>   ¿p-¿p.¿q.Åü¿rvÅ3/// Return the transform that was used in the last composition phase, if any.
///
/// If the [FollowerLayer] has not yet been created, was never composited, or
/// was unable to determine the transform (see
/// [FollowerLayer.getLastTransform]), this returns the identity matrix (see
/// [Matrix4.identity].   ¿r—ÅÏ¿r‚  ¿rÍ¿r¸  ¿s¿s  ¿r—¿r“¿t¡ÅV¿t“  ¿t‚¿tÙ  ¿t˝¿u  ¿t¡¿t¬¿vÖâ¿v,  ¿v2¿vC  ¿vK¿vS  ¿v¿v¿{®}¿{π  ¿{Õ¿{ÿ  ¿{ﬁ¿{Á  ¿{®¿{©¿|)Å±¿|:  ¿|N&¿|k  ¿|)¿|* ¿}ﬁá]¿~“ÄÌ/// Render object which inserts an [AnnotatedRegionLayer] into the layer tree.
///
/// See also:
///
///  * [Layer.find], for an example of how this value is retrieved.
///  * [AnnotatedRegionLayer], the layer this render object creates.¿~Ë¿~Ë¿Å ¿Ä)¿Ä>Å/// Creates a new [RenderAnnotatedRegion] to insert [value] into the
/// layer tree.
///
/// If [sized] is true, the layer is provided with the size of this render
/// object to clip the results of [Layer.find].
///
/// Neither [value] nor [sized] can be null.¿ÄE¿ÄQ  ¿Ä[¿Äj  ¿Ät¿ÄÄ  ¿Äî¿Äç¿Äñ¿Ä´¿Ä§¿Ä≠¿Ä»¿Äª¿Ä ¿Ä’¿ÄÌ¿Ä÷¿ÄÍ¿ÄÏ¿ÄÎ¿ÄÓ¿ÄÔ¿Ä˘¿Ä˛¿Å¿Äˇ¿Å\¿Å^  ¿ÇW¿Ç\  ¿Çﬁ7¿É	  ¿É4¿É1 ¿É¿É¿ÉJ¿Å
O¿ÅI6/// A value which can be retrieved using [Layer.find].   ¿Åh{¿Ål  ¿Ås
¿Åv   ¿ÅÁm¿ÇDQ/// Whether the render object will pass its [size] to the [AnnotatedRegionLayer].   ¿Çft¿Çj  ¿Çp
¿Çv   ¿ÉSÅé¿Éd  ¿Éj¿É{  ¿ÉÉ¿Éã  ¿ÉS¿ÉT¿ÑÂT¿Ñˆ   ¿ÑÂ¿ÑÊ  ëÛÇ0í#/// How to behave during hit tests.  í0Äñí∫ÄÖ/// Targets that defer to their children receive events within their bounds
/// only if one of their children is hit by the hit test. íÀÄΩìÇÄ∞/// Opaque targets can be hit by hit tests, causing them to both receive
/// events within their bounds and prevent targets visually behind them from
/// also receiving events. ìçÄìîÄÉ/// Translucent targets both receive events within their bounds and permit
/// targets visually behind them to also receive events.    ¿¶Ä ¿–$/// Where to paint a box decoration.  ¿Á>¿1/// Paint the box decoration behind the children. ¿*C¿c6/// Paint the box decoration in front of the children.         	¿ íõÄø¿ ì,Äà/// Signature for a function that creates a [Shader] for a given [Rect].
///
/// Used by [RenderShaderMask] and the [ShaderMask] widget.  ¿ ìM¿ ìS   ¿rªÄª¿s5q/// Signature for listening to [PointerDownEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿s^¿sp   ¿sxÄª¿sÚq/// Signature for listening to [PointerMoveEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿t¿t-   ¿t5Äµ¿t≠o/// Signature for listening to [PointerUpEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿t‘¿t‰   ¿tÏÄ¡¿uhs/// Signature for listening to [PointerCancelEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿uì¿uß   ¿uØÄ”¿v1y/// Signature for listening to [PointerPanZoomStartEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿vb¿v|   ¿vÑÄ÷¿wz/// Signature for listening to [PointerPanZoomUpdateEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿w9¿wT   ¿w\ÄÕ¿w‹w/// Signature for listening to [PointerPanZoomEndEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿x¿x#   ¿x+Ä¡¿xßs/// Signature for listening to [PointerSignalEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿x“¿xÊ   áëä`â,ÅÇ/// Implementation of [RenderProxyBox].
///
/// Use this mixin in situations where the proxying behavior
/// of [RenderProxyBox] is desired but inheriting from [RenderProxyBox] is
/// impractical (e.g. because you want to inherit from a different class).
///
/// If a class already inherits from [RenderProxyBox] and also uses this mixin,
/// you can safely delete the use of the mixin.â@â@   âÖÅâñ  â¶â¥  âÖâÜääwäù  ä∂äæ  äääããwã  ã1ã9  ãããÄwãì  ã≠ãµ  ãÄãÅã˚wå  å(å0  ã˚ã¸åvÄƒåä  å™å∏  åvåwç>ÄØç_  çr$çå  çòç¶  ç>ç?çJçKçÒÄ≠é  é $é:  çÒçÚç˝ç˛é¢Ä¶é≥   é¢é£èLÄÍèﬁÄà/// Calculate the size the [RenderProxyBox] would have under the given
/// [BoxConstraints] for the case where it does not have a child. èÙê   ê:ÄùêK  ê[êm  êvêá  ê:ê;ê€OêÏ  ë ë  ëë  ê€ê‹ë.Ä¡ë?  ëEëV  ë^ëf  ë.ë/ââ¿ Åfé‚¿ ÇßÅ:/// Implementation of [RenderAnimatedOpacity] and [RenderSliverAnimatedOpacity].
///
/// This mixin allows the logic of animating opacity to be used with different
/// layout models, e.g. the way that [RenderAnimatedOpacity] uses it for [RenderBox]
/// and [RenderSliverAnimatedOpacity] uses it for [RenderSliver].¿ Ç¬¿ Ç¬ ¿ Çˇ¿ É  ¿ Éj!¿ Ép  ¿ Ü_¿ Ür  ¿ â/¿ â5  ¿ ÉX¿ É$   ¿ É¿ É¿ ÑpÅÏ¿ ÜGÅ¨/// The animation that drives this render object's opacity.
///
/// An opacity of 1.0 is fully opaque. An opacity of 0.0 is fully transparent
/// (i.e., invisible).
///
/// To change the opacity of a child in a static manner, not animated,
/// consider [RenderOpacity] instead.
///
/// This getter cannot be read until the value has been set. It should be set
/// by the constructor of the class in which this mixin is included.   ¿ Ü~Å(¿ ÜÇ  ¿ Üä¿ Üù   ¿ á™ÅÇ¿ à˘Å5/// Whether child semantics are included regardless of the opacity.
///
/// If false, semantics are excluded when [opacity] is 0.0.
///
/// Defaults to false.
///
/// This getter cannot be read until the value has been set. It should be set
/// by the constructor of the class in which this mixin is included.   ¿ âPÄ±¿ âT  ¿ âk
¿ âq   ¿ ÉêÄ‹¿ É®  ¿ Éø)¿ É·  ¿ Éê¿ Éë¿ äÄª¿ ä  ¿ ä¿ ä,  ¿ ä¿ ä¿ äƒ_¿ ä’   ¿ äƒ¿ ä≈¿ ã'Ç¿ ã,    ¿ ç;v¿ çL  ¿ çX¿ çf  ¿ ç;¿ ç<¿ çµÄë¿ ç∆  ¿ çÃ¿ ç›  ¿ çÂ¿ çÌ  ¿ çµ¿ ç∂¿ éJÄÆ¿ é[  ¿ éu¿ éä  ¿ éJ¿ éK¿ é¸ÅJ¿ è  ¿ è!&¿ è>  ¿ é¸¿ é˝     ÄÆ  package:flutter/widgets.dart  Ä·  proxy_sliver.dart  Å  sliver.dart ì» <ÄÜÄ§Ä•Ä‘ÄÿÄ¸ÅÅ#Å$ÅeÅfÅèÅπÅ·Ç
Ç2Ç3ÇFÇ[ÇxÇéÇèÇªÇ—ÇÂÇıÉ	ÉÉÉ\É`É©É˜ÑFÑäÑéÑ›Ö.Ö}ÖëÖïÖ£ÖßÖ˜ÜÜ|ÜûÜ§ÜÏá9áKáráäáéáêáëáπáΩá˙àEàêàîà‰ââ&âÉâèâºää+äVä}äÉäáäàäîä«ä˛ããããBãyã}ã~ãäãΩãÙã¯ã˘åå8åoåsåtåÄå√å˚ç7ç;ç<çHçUç±çÍçÓçÔç˚ééHéõéüé†é¨é≈è
è9èEèIèJèìè◊êê3ê7ê8êDêîê‘êÿêŸêÂë+ë,ë8ëoëòë±ëøë≈ëÏëëÚëÛíí.í|í∏í»í…ììcìÄìäìãìÿîî"î$î%îdî~î»î˚ïïEïkïùï≥ï»ï…ññ]ñcñïñõñ‚ñ˛ñˇóóSóoóíóÍò,òaòiòoòÖòâòäòñò·ò‚òÓô3ô^ôªôøô¡ô¬ôÛô˜öFöèöﬂöÏöõ@õâõ¶õ⁄úúúPúiúú≤úÌù$ù9ù:ùzù¿ùÈûûEûpû~ûÑû®ûøû√ûƒû–üü]üãüëü“üÓ†"†]†c†u†y†z†Ü†π°°A°G°à°§°ÿ¢¢¢+¢/¢0¢<¢o¢À¢˙£ £B£_£î£—£◊£Í£Ó£Ô£˚§.§ä§π§ø•••S•ê•ñ•©•≠•Æ•∫¶¶o¶s¶t¶Ä¶ô¶“¶ÎßCß]ßjßπßøß√ßƒß–ß›®®i®∂®∫®ª®«©©2©B©[©ç©•©“™	™™$™.™2™3™?™Ñ™Ø´´´´´X´õ´ü´Ï¨7¨Ç¨—¨Í¨Ó≠9≠≠è≠øÆÆEÆKÆíÆ¶ÆªÆ—Æ¯Ø Ø@ØaØ~ØùØ≤Ø≥∞∞,∞@∞_∞y∞ó∞•∞´∞¬∞Ÿ∞›∞ﬁ±5±[±p±ê±™±…±◊±›±ı≤≤≤≤R≤m≤ì≤˛≥&≥ñ≥ù≥°≥¢¥¥¥o¥û¥§¥‰¥Ë¥È¥ıµµBµ[µ{µ∞µ∑µªµºµ»µ·µ˙∂∂L∂S∂W∂X∂d∂©∂‘∑-∑à∑å∑é∑è∑ ∑Œ∏∏i∏∑∏ªππSπãπèπ‹∫*∫y∫¿∫ƒªªaª≤º ºNºúºÍΩ8ΩÖΩÀææ<æyææ¬æÿæÓøø1øVøyøéøèøπøø¿ @¿ @V¿ @Ä¿ @ó¿ @π¿ @“¿ @Ó¿ A¿ A¿ A#¿ A=¿ AT¿ AX¿ AY¿ Ae¿ Aò¿ A≥¿ A◊¿ A›¿ B¿ B¿ B¿ B%¿ BX¿ Bs¿ Bó¿ Bù¿ B‘¿ Bÿ¿ BŸ¿ BÂ¿ C¿ C2¿ CU¿ C[¿ Cí¿ Cñ¿ Có¿ C£¿ C÷¿ C¿ D¿ D¿ DP¿ DT¿ DU¿ Då¿ D∫¿ D ¿ E¿ E1¿ Eg¿ Eæ¿ F¿ Fa¿ F¿ Fä¿ Fí¿ F•¿ FØ¿ F∞¿ Fœ¿ FÚ¿ F¯¿ F˘¿ G"¿ G5¿ G6¿ GÉ¿ Gœ¿ GÊ¿ H ¿ H%¿ H2¿ HX¿ H}¿ HÉ¿ HÑ¿ H“¿ I¿ Ih¿ I¿ IÄ¿ I®¿ IÃ¿ IÒ¿ I˜¿ I¯¿ J"¿ JH¿ Jm¿ Js¿ Jt¿ Jú¿ J¿¿ JÂ¿ JÎ¿ JÏ¿ K¿ K<¿ Ka¿ Kg¿ Kh¿ Kü¿ K£¿ K§¿ K∞¿ KΩ¿ K˝¿ L(¿ L,¿ L-¿ L9¿ Lã¿ LÎ¿ LÔ¿ L¿ L¸¿ M¿ M;¿ Mj¿ Mn¿ Mo¿ M{¿ M¿¿ MÎ¿ N+¿ N/¿ N1¿ N2¿ Nn¿ Nr¿ Nø¿ O¿ OC¿ OG¿ Oì¿ O„¿ P/¿ Py¿ P∆¿ PÓ¿ PÚ¿ QB¿ Qé¿ QÃ¿ Q–¿ R¿ Rk¿ R∫¿ R—¿ R’¿ R„¿ RÁ¿ S6¿ S}¿ SÀ¿ Sﬁ¿ T*¿ Tm¿ T∫¿ TÓ¿ U"¿ Ur¿ Ux¿ U»¿ UÈ¿ V¿ V¿ V1¿ VG¿ V|¿ V≥¿ V“¿ VÛ¿ W¿ W	¿ WT¿ WZ¿ WÇ¿ W©¿ Wø¿ W‡¿ X
¿ X)¿ X7¿ X=¿ XU¿ Xl¿ Xp¿ Xq¿ XΩ¿ X√¿ XÎ¿ Y¿ Y+¿ YM¿ Yw¿ Yó¿ Y•¿ Y´¿ Yƒ¿ Y€¿ Yﬂ¿ Y‡¿ Z¿ Z5¿ ZM¿ Za¿ Zg¿ Zê¿ Zî¿ Zï¿ Z°¿ Z‘¿ Z˝¿ [¿ [¿ [¿ [A¿ [Z¿ [l¿ [r¿ [∞¿ [⁄¿ [ﬁ¿ [ﬂ¿ [Î¿ \¿ \7¿ \I¿ \O¿ \j¿ \ü¿ \•¿ \¡¿ ] ¿ ],¿ ]0¿ ]1¿ ]=¿ ]p¿ ]â¿ ]õ¿ ]°¿ ]º¿ ]Ò¿ ]˜¿ ^¿ ^R¿ ^~¿ ^Ç¿ ^É¿ ^’¿ ^ı¿ _p¿ _Ê¿ _Ì¿ _Ò¿ _Ú¿ `S¿ `|¿ `È¿ `Ì¿ `Ó¿ `˙¿ a¿ aG¿ a`¿ aï¿ aµ¿ aº¿ a¿¿ a¡¿ aÕ¿ b¿ bH¿ bõ¿ bü¿ b†¿ b¨¿ b≈¿ bﬁ¿ c¿ c0¿ c7¿ c;¿ c<¿ cH¿ cç¿ c∏¿ cÙ¿ d2¿ d6¿ d8¿ d9¿ dn¿ dr¿ d¿¿ e¿ eE¿ eI¿ eï¿ eÂ¿ f3¿ f~¿ fÃ¿ fı¿ f˘¿ gF¿ gî¿ g„¿ g˙¿ g˛¿ h¿ h¿ h_¿ hß¿ hˆ¿ i	¿ iX¿ iú¿ iÎ¿ j ¿ jU¿ j¶¿ j¿¿ j÷¿ jÎ¿ jÏ¿ j¯¿ k+¿ kD¿ kV¿ k\¿ kx¿ k∂¿ kº¿ kŸ¿ l	¿ l¿ l¿ l¿ lM¿ lf¿ lx¿ l~¿ lö¿ lÿ¿ lﬁ¿ l˚¿ m+¿ m/¿ m0¿ m<¿ mo¿ mò¿ mú¿ mù¿ mÔ¿ n¿ n)¿ nÅ¿ nÖ¿ nÜ¿ nÁ¿ o¿ o}¿ oÅ¿ oÇ¿ oé¿ oõ¿ o€¿ oÙ¿ p)¿ pI¿ pP¿ pT¿ pU¿ pa¿ p≥¿ p‹¿ q/¿ q3¿ q4¿ q@¿ qY¿ qr¿ q§¿ qƒ¿ qÀ¿ qœ¿ q—¿ q“¿ r¿ rG¿ r™¿ r√¿ rŸ¿ rÓ¿ rÔ¿ r˚¿ s;¿ sL¿ sP¿ sQ¿ s]¿ s∂¿ s«¿ sÀ¿ sÕ¿ sŒ¿ s˘¿ s˝¿ tM¿ tÇ¿ tÜ¿ t—¿ u¿ uc¿ u≥¿ u‡¿ v¿ v¿ v`¿ vr¿ vå¿ vµ¿ vÀ¿ v¸¿ w¿ wP¿ wá¿ wú¿ wù¿ w©¿ wÎ¿ wÏ¿ w¯¿ x0¿ x1¿ x?¿ x@¿ xu¿ x{¿ xÀ¿ x‰¿ xÍ¿ y.¿ yu¿ yÜ¿ y®¿ yª¿ yŸ¿ z¿ z ¿ z.¿ z4¿ zp¿ zô¿ zØ¿ z‰¿ {¿ {D¿ {J¿ {p¿ {≤¿ {‘¿ {⁄¿ {ﬁ¿ {ﬂ¿ |%¿ |+¿ |i¿ |o¿ |à¿ |∆¿ |Ê¿ }¿ }=¿ }K¿ }Q¿ }v¿ }ñ¿ }ö¿ }õ¿ }ß¿ }Õ¿ }Ô¿ ~¿ ~
¿ ~¿ ~¿ ~j¿ ~•¿ ~ø¿ ~—¿ ~’¿ ~÷¿ ~‚¿ ¿ A¿ O¿ U¿ w¿ {¿ |¿ à¿ »¿ Ä¿ Ä#¿ Ä)¿ Ä-¿ Ä.¿ Ä:¿ Ä¿ Ä™¿ Ä‚¿ Å_¿ Åc¿ Åe¿ Åf¿ Å∑¿ Åª¿ Ç
¿ Ç_¿ Ç°¿ Ç˝¿ É¿ É¿ É¿ Éh¿ Éç¿ Éé¿ Éö¿ ÉÌ¿ Ñ/¿ ÑP¿ Ñi¿ Ñm¿ Ñn¿ Ñ¨¿ Ñ≤¿ Ö¿ Ö¿ Ö!¿ Öj¿ Öí¿ Öò¿ ÖË¿ Ü/¿ Ü]¿ Ü|¿ Ü•¿ Ü¬¿ Ü–¿ Ü÷¿ Ü˛¿ á,¿ á2¿ áH¿ á\¿ áá¿ áç¿ á£¿ áß¿ á®¿ áÓ¿ áÙ¿ à2¿ à8¿ àQ¿ àW¿ àß¿ àÓ¿ â-¿ âN¿ ây¿ â•¿ â≥¿ âπ¿ âﬁ¿ â˛¿ ä¿ ä¿ ä¿ ä4¿ äM¿ äv¿ äΩ¿ ä¡¿ ä¬¿ äŒ¿ ä‡¿ ã¿ ã ¿ ã$¿ ã%¿ ã?¿ ãa¿ ãõ¿ ãπ¿ ã˝¿ å.¿ å~¿ å®¿ å∞¿ åÿ¿ ç¿ ç&¿ ç.¿ ç4¿ ç8¿ ç9¿ çE¿ çn¿ çê¿ çÆ¿ ç≤¿ ç≥¿ çø¿ çˆ¿ é¿ é¿ é!¿ éC¿ éG¿ éH¿ éT¿ éî¿ éÿ¿ éÔ¿ éı¿ é˘¿ é˙¿ è¿ èK¿ èv¿ è∆¿ êC¿ êG¿ êI¿ êJ¿ êë¿ êï¿ êÊ¿ ë¿ ër¿ ëß¿ ë¡¿ ëÈ¿ í¿ í(¿ í>¿ íZ¿ íî¿ íò¿ íö¿ íõ¿ í‰¿ íË¿ ì$¿ ì[¿ ì\¿ ìï¿ ìô¿ ìË¿ î¿ îM¿ î•¿ î∫¿ î–¿ î¸¿ ï*¿ ïS¿ ïr¿ ïá¿ ïà¿ ïî¿ ï’¿ ï÷¿ ñ¿ ñ¿ ñi¿ ñ≤¿ ñ∏¿ ñ¯¿ ó¿ ó`¿ óò¿ ó–¿ óÚ¿ ò¿ òC¿ òQ¿ òW¿ òt¿ òä¿ òé¿ òè¿ ò”¿ òŸ¿ ô(¿ ôs¿ ôú¿ ô¥¿ ô◊¿ ôˆ¿ ö¿ ö
¿ ö"¿ ö8¿ ö<¿ ö=¿ öI¿ ö}¿ ö~¿ öä¿ ö¡¿ ö⁄¿ ö˙¿ õ¿ õ*¿ õa¿ õÑ¿ õ¶¿ õ‹¿ õÓ¿ ú¿ ú/¿ ú;¿ úH¿ ú\¿ úb¿ úf¿ úh¿ úi¿ ú∑¿ úª¿ ù¿ ù¿ ùS¿ ùt¿ ùy¿ ùπ¿ ù“¿ ùË¿ û¿ û9¿ ûR¿ ûW¿ ûo¿ ûâ¿ ûß¿ ûª¿ ûº¿ û»¿ ü¿ ü¿ üc¿ üÉ¿ üî¿ ü∞¿ üÃ¿ ü⁄¿ ü‡¿ üˆ¿ †¿ †¿ †¿ †a¿ †r¿ †x¿ †≈¿ †ÿ¿ ° ¿ °¿ °?¿ °[¿ °i¿ °o¿ °Ñ¿ °ö¿ °û¿ °ü¿ °¯¿ ¢¿ ¢¿ ¢E¿ ¢n¿ ¢Ü¿ ¢©¿ ¢»¿ ¢÷¿ ¢‹¿ ¢Ù¿ £
¿ £¿ £¿ £¿ £O¿ £P¿ £\¿ £ì¿ £®¿ £Ã¿ £⁄¿ £‡¿ £·¿ £˙¿ §¿ §A¿ §`¿ §Ö¿ §ª¿ §Õ¿ §˘¿ •¿ •¿ •'¿ •;¿ •A¿ •E¿ •G¿ •H¿ •u¿ •y¿ •¬¿ •”¿ •◊¿ ¶(¿ ¶,¿ ¶u¿ ¶¡¿ ¶“¿ ¶÷¿ ß!¿ ßo¿ ß¿¿ ®¿ ®¿ ®"¿ ®&¿ ®o¿ ®∫¿ ©¿ ©L¿ ©õ¿ ©–¿ ©¿ ©ˆ¿ ™G¿ ™â¿ ™ä¿ ™ß¿ ™®¿ ™Î¿ ™Ò¿ ´@¿ ´ê¿ ´ß¿ ´≥¿ ¨ ¿ ¨¿ ¨Q¿ ¨Ç¿ ¨à¿ ¨◊¿ ≠'¿ ≠>¿ ≠J¿ ≠ù¿ ≠û¿ ≠È¿ Æ¿ Æ%¿ Æ&¿ Æk¿ ÆÆ¿ Æ‚¿ ÆË¿ Ø,¿ Øs¿ Ø∂¿ Ø˝¿ ∞=¿ ∞>¿ ∞ã¿ ∞‹¿ ±-¿ ±~¿ ±Ñ¿ ±Ã¿ ≤¿ ≤(¿ ≤.¿ ≤|¿ ≤à¿ ≤é¿ ≤‘¿ ≥ ¿ ≥T¿ ≥ê¿ ≥ë¿ ≥ù¿ ≥ﬁ¿ ≥‡¿ ≥·¿ ¥(¿ ¥_¿ ¥Ü¿ ¥å¿ ¥‘¿ µ#¿ µp¿ µ≥¿ µ–¿ µÈ¿ ∂¿ ∂¿ ∂¿ ∂G¿ ∂b¿ ∂c¿ ∂´¿ ∂±¿ ∂¸¿ ∑#¿ ∑I¿ ∑J¿ ∑¿ ∑ã¿ ∑ß¿ ∑¯¿ ∑¸¿ ∑˝¿ ∏	¿ ∏?¿ ∏w¿ ∏ä¿ ∏ê¿ ∏·¿ π¿ πF¿ πJ¿ πL¿ πM¿ πä¿ π†¿ π∂¿ π’¿ π˝¿ ∫¿ ∫=¿ ∫R¿ ∫S¿ ∫ë¿ ∫æ¿ ∫‹¿ ª
¿ ª,¿ ª:¿ ª@¿ ªs¿ ªé¿ ªƒ¿ ª¯¿ º4¿ ºc¿ º{¿ ºÅ¿ ºï¿ º«¿ ºˆ¿ º¸¿ Ω ¿ Ω¿ Ω¿ Ω2¿ ΩK¿ Ωv¿ Ωz¿ Ω{¿ Ωá¿ Ωô¿ Ω«¿ Ω€¿ Ωﬂ¿ Ω‡¿ Ω˙¿ æ¿ æ"¿ æB¿ æF¿ æG¿ æ]¿ æi¿ æj¿ æî¿ æµ¿ æ◊¿ æÙ¿ ø¿ ø¿ ø¿ ø,¿ ø-¿ ø9¿ øR¿ øÉ¿ øû¿ øπ¿ øÕ¿ ø”¿ ø◊¿ øÿ¿ øÔ¿ ¿&¿ ¿*¿ ¿+¿ ¿7¿ ¿r¿ ¿é¿ ¿§¿ ¿π¿ ¿”¿ ¿Ó¿ ¡¿ ¡c¿ ¡i¿ ¡m¿ ¡n¿ ¡Ñ¿ ¡ü¿ ¡´¿ ¡Î¿ ¡˚¿ ¬¿ ¬@¿ ¬W¿ ¬{¿ ¬Ú¿ √¿ √;¿ √E¿ √a¿ √â¿ √´¿ √…¿ √ﬁ¿ √˙¿ ƒ ¿ ƒ>¿ ƒM¿ ƒZ¿ ƒ¨¿ ƒ∂¿ ƒ ¿ ƒ›¿ ƒÁ¿ ƒÎ¿ ƒÏ¿ ƒ¯¿ ≈¿ ≈&¿ ≈=¿ ≈R¿ ≈V¿ ≈X¿ ≈Y¿ ≈Ä¿ ≈Ñ¿ ≈“¿ ∆#¿ ∆9¿ ∆p¿ ∆í¿ ∆ò¿ ∆Ë¿ ∆˘¿ ∆ˇ¿ «D¿ «W¿ «h¿ «{¿ «ì¿ «ô¿ «ö¿ «¶¿ «’¿ «÷¿ «‚¿ »*¿ »F¿ »[¿ »x¿ »†¿ »∂¿ »æ¿ »ƒ¿ »˙¿ »˛¿ »ˇ¿ …¿ …B¿ …[¿ …Ç¿ …ô¿ …ø¿ …€¿ …Ì¿ …ˇ¿  ¿  <¿  i¿  t¿  É¿  Ø¿  ≈¿  Õ¿  ⁄¿  Ó¿  Ù¿  ¯¿  ˘¿ À¿ ÀE¿ ÀU¿ Àp¿ Àü¿ À»¿ Ã¿ Ãå¿ Ãñ¿ Ãû¿ Ã±¿ Ãª¿ Ãø¿ Ã¡¿ Ã¬¿ ÃÒ¿ Ãı¿ ÕE¿ Õì¿ Õ©¿ Õ‚¿ Œ¿ Œ¿ Œb¿ Œ~¿ ŒÑ¿ Œƒ¿ Œ ¿ œ¿ œ#¿ œ4¿ œo¿ œÇ¿ œö¿ œº¿ œ·¿ –¿ –	¿ –9¿ –?¿ –ä¿ –•¿ –´¿ –·¿ —¿ —A¿ —r¿ —î¿ —¢¿ —®¿ —√¿ —Ÿ¿ —›¿ —ﬁ¿ “¿ “S¿ “t¿ “†¿ “√¿ “—¿ “◊¿ “Û¿ ”	¿ ”¿ ”¿ ”¿ ”x¿ ”y¿ ”Ö¿ ”Õ¿ ”È¿ ”˛¿ ‘¿ ‘C¿ ‘Y¿ ‘a¿ ‘g¿ ‘ù¿ ‘°¿ ‘¢¿ ‘Æ¿ ‘Â¿ ‘˛¿ ’%¿ ’<¿ ’c¿ ’¿ ’ë¿ ’≠¿ ’ø¿ ’÷¿ ’¸¿ ÷*¿ ÷5¿ ÷D¿ ÷p¿ ÷Ü¿ ÷é¿ ÷õ¿ ÷Ø¿ ÷µ¿ ÷π¿ ÷∫¿ ÷∆¿ ◊¿ ◊¿ ◊1¿ ◊`¿ ◊â¿ ◊—¿ ÿL¿ ÿV¿ ÿ^¿ ÿq¿ ÿ{¿ ÿ¿ ÿÅ¿ ÿÇ¿ ÿ•¿ ÿ©¿ ÿ˜¿ Ÿ@¿ Ÿä¿ Ÿ¡¿ Ÿ‰¿ ŸÍ¿ ⁄:¿ ⁄W¿ ⁄]¿ ⁄¢¿ ⁄µ¿ ⁄∆¿ ⁄Ÿ¿ ⁄Ò¿ ⁄˜¿ ⁄¯¿ €¿ €&¿ €'¿ €H¿ €g¿ €Å¿ €¥¿ €∫¿ €“¿ €÷¿ €◊¿ €„¿ ‹¿ ‹¿ ‹¿ ‹g¿ ‹z¿ ‹ï¿ ‹æ¿ ›
¿ ›,¿ ›\¿ ›ç¿ ›î¿ ›…¿ ﬁ¿ ﬁ¿ ﬁ¿ ﬁU¿ ﬁY¿ ﬁZ¿ ﬁf¿ ﬁù¿ ﬁ∂¿ ﬁ›¿ ﬁÙ¿ ﬂ¿ ﬂ6¿ ﬂH¿ ﬂZ¿ ﬂz¿ ﬂë¿ ﬂ∑¿ ﬂ‰¿ ﬂÔ¿ ﬂ˛¿ ‡*¿ ‡@¿ ‡H¿ ‡U¿ ‡i¿ ‡o¿ ‡s¿ ‡t¿ ‡Ä¿ ‡¿¿ ‡–¿ ‡Î¿ ·¿ ·C¿ ·ò¿ ‚+¿ ‚5¿ ‚=¿ ‚P¿ ‚Z¿ ‚^¿ ‚`¿ ‚a¿ ‚É¿ ‚á¿ ‚Ã¿ „¿ „¿ „O¿ „m¿ „q¿ „´¿ „Î¿ ‰.¿ ‰e¿ ‰Ä¿ ‰Ü¿ ‰◊¿ Â$¿ Ât¿ Âá¿ Âç¿ Â“¿ ÂÂ¿ Âˆ¿ Ê	¿ Ê!¿ Ê'¿ Ê(¿ Ê4¿ Êt¿ Êu¿ ÊÅ¿ Ê…¿ ÊÂ¿ Ê˙¿ Á¿ Á?¿ ÁU¿ Á]¿ Ác¿ Áô¿ Áù¿ Áû¿ Á™¿ Á·¿ Á˙¿ Ë!¿ Ë8¿ Ë^¿ Ëz¿ Ëå¿ Ë™¿ Ëº¿ Ë”¿ Ë˘¿ È&¿ È1¿ È@¿ Èl¿ ÈÇ¿ Èä¿ Èó¿ È´¿ È±¿ Èµ¿ È∂¿ È¬¿ Í¿ Í¿ Í-¿ Í\¿ ÍÖ¿ ÍÃ¿ Î¿ Î¿ Î¿ Î&¿ Î0¿ Î4¿ Î6¿ Î7¿ Î{¿ Î¿ Î–¿ Ï¿ ÏP¿ ÏÜ¿ Ï£¿ ÏΩ¿ Ï‹¿ Ïˆ¿ Ì¿ Ì:¿ ÌM¿ Ìn¿ Ìç¿ Ì§¿ Ì«¿ Ì»¿ Ó¿ Ó¿ Ó>¿ ÓD¿ Óí¿ Ó¿¿ ÓÊ¿ Ó˚¿ Ô¿ Ô5¿ ÔS¿ Ôa¿ Ôg¿ Ô£¿ Ôª¿ ÔÛ¿ ¿ !¿ 7¿ ;¿ <¿ T¿ }¿ ì¿ ¥¿ ‘¿ ‚¿ Ë¿ Ò¿ Ò¿ Ò¿ Ò¿ Ò9¿ ÒV¿ Òf¿ ÒÅ¿ Òõ¿ Ò©¿ ÒØ¿ Ò√¿ ÒŸ¿ Ò›¿ Òﬁ¿ ÒÍ¿ Ú1¿ Úc¿ ÚÖ¿ Úâ¿ Úä¿ Úñ¿ Ú‹¿ Û¿ ÛE¿ Ûy¿ Û≥¿ Û∑¿ Ûπ¿ Û∫¿ Ûˇ¿ Ù¿ Ù¿ ÙV¿ Ùö¿ Ùƒ¿ Ù ¿ ÙÈ¿ ÙÔ¿ ı%¿ ı=¿ ıN¿ ıw¿ ıè¿ ıØ¿ ı ¿ ı‰¿ ˆ¿ ˆ6¿ ˆM¿ ˆr¿ ˆs¿ ˆë¿ ˆó¿ ˆÊ¿ ˆ˛¿ ˜¿ ˜1¿ ˜O¿ ˜i¿ ˜w¿ ˜}¿ ˜ë¿ ˜ß¿ ˜´¿ ˜¨¿ ˜‹¿ ˜‚¿ ¯-¿ ¯H¿ ¯N¿ ¯ô¿ ¯ü¿ ¯Ÿ¿ ˘¿ ˘+¿ ˘U¿ ˘v¿ ˘Ñ¿ ˘ä¿ ˘•¿ ˘ª¿ ˘ø¿ ˘¿¿ ˘Ã¿ ˘Á¿ ˘¸¿ ˙&¿ ˙C¿ ˙í¿ ˙‰¿ ˙Î¿ ˙Ô¿ ˙¿ ˙¸¿ ˚D¿ ˚`¿ ˚u¿ ˚í¿ ˚∫¿ ˚–¿ ˚ÿ¿ ˚ﬁ¿ ¸¿ ¸¿ ¸¿ ¸%¿ ¸\¿ ¸u¿ ¸â¿ ¸ó¿ ¸ù¿ ¸û¿ ¸±¿ ¸Â¿ ˝'¿ ˝E¿ ˝U¿ ˝v¿ ˝ï¿ ˝π¿ ˝“¿ ˝Ê¿ ˛
¿ ˛7¿ ˛f¿ ˛s¿ ˛}¿ ˛õ¿ ˛£¿ ˛∂¿ ˛¿¿ ˛¡¿ ˛Î¿ ˇ¿ ˇ0¿ ˇK¿ ˇ`¿ ˇs¿ ˇê¿ ˇô¿ ˇü¿ ˇÎ¿ ¿ ¿ 2¿ Q¿ Z¿ `¿ É¿ õ¿ ©¿ √¿ —¿¿¿[¿™¿˘¿=¿z¿Ñ¿™¿≥¿›¿ˇ¿¿¿¿A¿T¿^¿b¿c¿o¿µ¿·¿%¿{¿¿Å¿Ç¿«¿À¿¿¿!¿%¿q¿Å¿ƒ¿Î¿Ò¿*¿0¿f¿~¿è¿ø¿◊¿Ú¿¿=¿^¿_¿k¿´¿¨¿∏¿ ¿¿1¿N¿v¿å¿î¿ö¿–¿‘¿’¿·¿	¿	1¿	E¿	S¿	Y¿	Z¿	m¿	ü¿	Ω¿	Õ¿	Ó¿
¿
0¿
H¿
\¿
Ä¿
≠¿
‹¿
È¿
Û¿¿¿,¿6¿7¿a¿ç¿¶¿∫¿œ¿‚¿ˇ¿¿¿Z¿t¿ã¿ü¿æ¿«¿Õ¿Ô¿¿¿/¿=¿n¿ã¿«¿¿e¿©¿Ê¿¿¿¿H¿j¿q¿r¿Ç¿¨¿ø¿…¿Õ¿Œ¿⁄¿ ¿L¿ü¿£¿•¿¶¿À¿Â¿¿'¿(¿a¿o¿q¿r¿µ¿Á¿¿¿Z¿ô¿ü¿Ó¿¿0¿T¿ï¿÷¿Ï¿¿*¿Q¿f¿g¿¿Ä¿†¿¶¿»¿Ù¿¿3¿S¿a¿g¿Ä¿ï¿Æ¿ƒ¿»¿…¿¿D¿d¿è¿≠¿ª¿¡¿ÿ¿Ó¿Ú¿Û¿>¿Ç¿ú¿¢¿Â¿+¿e¿ä¿∫¿›¿Î¿Ò¿¿#¿'¿(¿4¿F¿_¿t¿à¿Õ¿¿b¿Æ¿È¿ˇ¿¿¿¿#¿<¿Q¿U¿V¿b¿à¿‰¿Ë¿È¿ı¿,¿k¿¬¿˜¿¿$¿\¿q¿}¿¡¿”¿¿L¿¥¿“¿.¿é¿Î¿˙¿ t¿ È¿ ˜¿!¿!¿!"¿!D¿!h¿!p¿!v¿!ò¿!Õ¿"¿"3¿"W¿"_¿"e¿"i¿"j¿"v¿"ª¿"Ê¿#-¿#ä¿#é¿#ê¿#ë¿#…¿#¯¿$1¿$E¿$e¿$y¿$õ¿$Ω¿$‡¿%¿%¿%.¿%N¿%n¿%ñ¿%æ¿%ÿ¿%‹¿%›¿&-¿&e¿&k¿&∫¿&˝¿'¿'1¿'O¿'k¿'y¿'¿'î¿'™¿' ¿'Œ¿'œ¿(¿(¿(e¿(Ø¿(µ¿)¿)E¿)ï¿)‰¿*#¿*t¿*¶¿*«¿*Û¿+¿+ ¿+&¿+>¿+T¿+t¿+x¿+y¿+µ¿+ª¿,
¿,B¿,x¿,ô¿,≈¿,Ë¿,ˆ¿,¸¿-¿-.¿-N¿-R¿-S¿-_¿-≠¿-Æ¿-˚¿.D¿.g¿.m¿.Ω¿/¿/(¿/)¿/@¿/è¿/Æ¿/¥¿0 ¿0O¿0t¿0æ¿0›¿0Î¿0Ò¿1¿1-¿1M¿1Q¿1R¿1§¿1™¿1Í¿2 ¿2A¿2m¿2ê¿2û¿2§¿2‡¿2¸¿34¿3\¿3b¿3x¿3|¿3}¿3Æ¿3≈¿3‰¿3˙¿4¿4¿4¿4b¿4É¿4•¿4ª¿4€¿4ﬂ¿4‡¿5#¿5D¿5f¿5|¿5ú¿5†¿5°¿5‰¿6¿6'¿6=¿6]¿6a¿6b¿6§¿6Â¿7	¿7¿7?¿7C¿7D¿7s¿7¶¿7∆¿7‹¿7¸¿8 ¿8¿8&¿8r¿8™¿8√¿8…¿8¯¿9¿9E¿9K¿9d¿9â¿9¿¿9¯¿9˛¿: ¿:E¿:Ä¿:Ü¿:°¿:’¿:€¿:Ó¿:Ú¿:Û¿:ˇ¿;G¿;~¿;ª¿;˘¿<¿<K¿<O¿<P¿<\¿<¨¿<Î¿=¿=U¿=o¿=´¿=Ì¿=ˆ¿=˝¿>¿>¿>¿>E¿>^¿>î¿>∑¿?¿?'¿?|¿?¿¿?ˆ¿@!¿@;¿@O¿@[¿@Ñ¿@¢¿@∂¿@Õ¿@Ê¿A7¿AD¿AU¿Aã¿A£¿A≠¿Aº¿B¿B`¿Bù¿B√¿BÏ¿B˜¿C4¿C`¿Cq¿C™¿C¥¿CÏ¿D ¿D.¿DE¿DS¿D[¿Da¿De¿Df¿Dr¿D≥¿D·¿DÂ¿DÊ¿DÚ¿E7¿Eb¿E©¿EÏ¿F@¿F•¿F¸¿G ¿G¿G¿GH¿Gw¿G´¿Gø¿G‡¿H¿H6¿HL¿Ho¿HÇ¿H°¿H»¿HÌ¿I¿I¿IV¿Iw¿Ix¿Ió¿I∂¿IÃ¿I–¿I—¿I¯¿J¿J(¿J=¿JX¿Jq¿Jâ¿J¶¿J¬¿J⁄¿J¿Jˆ¿J˙¿J˚¿KC¿K]¿Kl¿KÜ¿Kü¿K≠¿K≥¿K‘¿KÊ¿L(¿LA¿LN¿Lg¿L¿LÖ¿Lâ¿Lä¿L√¿L…¿M¿Mj¿Mö¿M†¿Mﬂ¿N¿N8¿NX¿NÉ¿N¢¿N∞¿N∂¿NŒ¿NÂ¿O ¿O¿O¿OA¿OG¿Oñ¿OŒ¿P¿P%¿PQ¿Pt¿PÇ¿Pà¿P§¿Pª¿P÷¿P⁄¿P€¿Q¿Q¿Q)¿Q6¿Qv¿Qè¿QŸ¿Q⁄¿QÔ¿R¿RU¿R«¿S¿S¿S:¿ST¿Ss¿Së¿S´¿T¿T	¿T¿T9¿T?¿TC¿TD¿TP¿Ti¿TÇ¿T≈¿T⁄¿T˘¿U@¿U¥¿UÔ¿V¿V'¿VA¿V`¿V~¿Vò¿V¿V¯¿W¿W¿WA¿WG¿WK¿WL¿Wh¿W¿WÄ¿W∂¿Wº¿W€¿X¿X'¿XH¿Xj¿Xá¿Xü¿X¡¿X«¿XÀ¿XÃ¿XÁ¿Y¿Y¿Y!¿Y"¿Y>¿Y\¿Yj¿Yp¿Yq¿Yä¿Y¨¿Y”¿Y‡¿Z¿Z@¿ZÑ¿ZŒ¿[¿[{¿[·¿\H¿\z¿\◊¿\¸¿]4¿]¿]Ö¿]â¿]ä¿]ﬂ¿^*¿^I¿^m¿^á¿^ó¿^¨¿^¡¿_¿_¿_$¿_V¿_\¿_m¿_q¿_r¿_~¿_µ¿_ı¿`¿`	¿`!¿`<¿`x¿`ú¿`∂¿`∆¿`‚¿a¿aO¿as¿a|¿aâ¿a¬¿a»¿aÃ¿aÕ¿aŸ¿b)¿bc¿bw¿b}¿bï¿bæ¿b€¿bı¿c1¿cs¿c|¿cÉ¿cá¿cà¿cî¿c∫¿c‹¿d¿d¿d¿d¿d_¿d~¿dô¿d¶¿d¿¿dÁ¿dÌ¿dÒ¿dÚ¿d˛¿eC¿en¿e§¿e¯¿f]¿fa¿fc¿fd¿f®¿f¨¿f¸¿gE¿g|¿gÄ¿gΩ¿h
¿h¿hX¿hú¿hº¿h›¿i ¿i¿i9¿iN¿iO¿iò¿iû¿iÌ¿j&¿jP¿jg¿jâ¿j™¿j∏¿jæ¿jÿ¿jÓ¿k¿k¿k¿k¿kg¿k™¿kÁ¿l%¿l?¿lw¿l{¿l|¿l…¿m¿m5¿m;¿mã¿m‹¿mˆ¿m˜¿n¿nS¿nr¿nò¿n∏¿o¿o¿o2¿on¿o∞¿oπ¿o¿¿oƒ¿o≈¿o—¿p¿p'¿p@¿pc¿pî¿p∆¿p–¿p÷¿p⁄¿p€¿pÁ¿q(¿qA¿qd¿qà¿qè¿qì¿qî¿q†¿qÂ¿r¿r]¿r¥¿r∏¿r∫¿rª¿rı¿r˘¿s-¿sw¿sx¿s≤¿s∂¿sÍ¿t4¿t5¿tm¿tq¿t•¿tÎ¿tÏ¿u(¿u,¿u`¿uÆ¿uØ¿uÒ¿uı¿v)¿vÉ¿vÑ¿v«¿vÀ¿vˇ¿w[¿w\¿wú¿w†¿w‘¿x*¿x+¿xg¿xk¿xü¿xÌ¿xÓ¿y(¿y,¿yt¿y¿¿yƒ¿z¿zZ¿zÖ¿zâ¿z…¿zÕ¿{¿{d¿{≠¿{≥¿{˝¿|¿|/¿|G¿|]¿|v¿|ê¿|∞¿|—¿|Ô¿}	¿}¿}.¿}4¿}5¿}¿}–¿}‡¿~¿~¿~\¿~á¿~à¿~÷¿~ı¿¿¿k¿ò¿ô¿È¿Ä¿ÄH¿ÄI¿Äé¿Ä…¿Ä ¿ÄÛ¿Å0¿Å1¿ÅX¿Åè¿Åê¿ÅÃ¿Å˚¿Å¸¿Ç¿ÇC¿Çc¿Çg¿Çh¿Çt¿Ç±¿Ç›¿Ç˘¿É:¿É{¿É∫¿É¸¿Ñ?¿Ñà¿Ñ“¿Ö¿Ö\¿Öm¿Öt¿Öx¿Öy¿ÖÖ¿Ö ¿Öı¿Ü!¿Ü4¿ÜO¿Ün¿Üç¿Ü®¿Ü…¿ÜÏ¿á¿áL¿áw¿áö¿á£¿áº¿áƒ¿á»¿á ¿áÀ¿à¿à¿ài¿à∂¿à‘¿àÿ¿â'¿âw¿âò¿âú¿âﬂ¿â„¿ä5¿ä9¿äG¿äK¿äç¿ä©¿ã¿ãX¿ã^¿ã™¿ãı¿å¿å¿å/¿å@¿ål¿åí¿å™¿åª¿å˙¿ç¿çH¿ça¿ç§¿ç•¿ç±¿ç˘¿é:¿é>¿é?¿éK¿éà¿é¥¿é⁄¿éˆ¿é¸¿è ¿è¿èR¿è£¿èæ¿èƒ¿ê¿êU¿êù¿êÿ¿êﬁ¿ë/¿ëz¿ëü¿ë•¿ë¬¿ë‡¿ë¿í¿í'¿í>¿íã¿í£¿í©¿í≠¿íÆ¿í÷¿í‹¿ì¿ìI¿ìy¿ìø¿ìﬂ¿ì˙¿îG¿î_¿îe¿îi¿îj¿îv¿îú¿îù¿îË¿îˇ¿ï¿ïI¿ïo¿ïp¿ï|¿ï†¿ï°¿ï≠¿ï“¿ïÈ¿ñ¿ñ'¿ñ>¿ñÇ¿ñø¿ñ◊¿ñ›¿ñ·¿ñ‚¿ñÓ¿ó(¿óF¿óG¿óS¿óx¿óë¿ó≥¿ó∑¿ó∏¿óƒ¿ó÷¿ò!¿ò|¿ò§¿ò«¿ò€¿òﬂ¿ò‡¿òÏ¿ô'¿ôG¿ôK¿ôL¿ôX¿ôù¿ô»¿ôÙ¿ö¿ö"¿ö<¿öV¿ön¿öw¿öê¿öò¿õ¿õV¿õÊ¿õÍ¿õÏ¿õÌ¿ú ¿ú$¿úp¿úº¿ù	¿ùU¿ù£¿ùÙ¿û¿û¿ûb¿û∞¿ü¿üP¿üõ¿üÎ¿†9¿†|¿†Ä¿†∆¿°¿°_¿°Æ¿°ı¿¢B¿¢w¿¢®¿¢Ê¿¢Á¿¢Û¿£¿£¿£d¿£t¿£z¿£ ¿§¿§¿§]¿§ã¿§ë¿§ﬂ¿•¿•g¿•∂¿•ÿ¿•ﬁ¿•Ù¿•˙¿¶A¿¶c¿¶i¿¶w¿¶§¿¶»¿¶Œ¿¶‡¿ß¿ß!¿ß'¿ßZ¿ßÖ¿ßã¿ß∂¿®/¿®j¿®«¿©¿©'¿©1¿©7¿©I¿©v¿©ò¿©¥¿©œ¿©¿™¿™l¿™}¿™å¿™ô¿™£¿™´¿™µ¿™«¿™Õ¿™›¿™„¿´(¿´x¿´≤¿´–¿¨¿¨W¿¨[¿¨\¿¨¶¿¨ƒ¿¨ ¿≠¿≠V¿≠\¿≠±¿≠ﬂ¿≠Â¿Æ3¿Æl¿Æª¿Ø
¿Ø,¿Ø2¿ØÑ¿Ø”¿ØŸ¿ØÔ¿Øı¿∞<¿∞h¿∞n¿∞|¿∞≤¿∞ﬂ¿∞Â¿∞˜¿±B¿±J¿±P¿±ï¿±¿¿±∆¿±Â¿≤^¿≤ó¿≤‹¿≤Ê¿≤Ï¿≤˛¿≥+¿≥M¿≥i¿≥Ñ¿≥•¿≥œ¿¥#¿¥4¿¥C¿¥P¿¥Z¿¥b¿¥l¿¥~¿¥Ñ¿¥î¿¥ö¿¥„¿µ7¿µm¿µã¿µ∆¿∂¿∂¿∂¿∂k¿∂∫¿∑¿∑S¿∑Y¿∑¶¿∑≤¿∑∏¿∏¿∏S¿∏h¿∏©¿∏Œ¿∏œ¿π¿πl¿π∏¿∫¿∫M¿∫É¿∫â¿∫÷¿∫‚¿∫Ë¿ª9¿ªÑ¿ªú¿ªﬂ¿º¿º¿ºR¿ºh¿ºn¿ºπ¿º÷¿ºÊ¿Ω¿Ω1¿ΩD¿ΩN¿ΩR¿ΩS¿Ω_¿Ω∆¿Ω÷¿æ¿æ+¿æ:¿æc¿æk¿æ~¿æà¿æå¿æç¿æô¿æﬁ¿ø	¿ø(¿ø8¿øU¿ø©¿ø«¿¿0¿¿?¿¿à¿¿Ω¿¡#¿¡à¿¡”¿¬m¿¬‘¿√T¿√Æ¿√π¿√∫¿ƒU¿ƒñ¿ƒû¿ƒ±¿ƒª¿ƒ‘¿≈A¿≈G¿≈K¿≈M¿≈N¿≈à¿≈å¿≈€¿∆*¿∆{¿∆§¿∆®¿∆π¿∆Ω¿«
¿«¿«¿«R¿«V¿«ì¿«ó¿«•¿«©¿«˜¿»%¿»X¿»ò¿»∞¿»∆¿»‡¿»Ò¿…A¿…|¿…Ç¿…ü¿…º¿…Î¿  ¿ ¿ A¿ G¿ ò¿ Â¿ Î¿À"¿ÀD¿ÀV¿Às¿Àë¿Àü¿À•¿Àº¿À·¿Ã¿Ã	¿Ã¿Ã¿Ãn¿Ãt¿Ã≥¿Ãπ¿Õ¿Õ¿Õe¿Õû¿Õ¢¿Õ◊¿ÕÛ¿Œ¿ŒA¿ŒO¿ŒU¿Œu¿Œï¿Œô¿Œö¿Œ¶¿ŒÓ¿œ1¿œ5¿œ6¿œB¿œÇ¿œ©¿œ∑¿œΩ¿œÎ¿œÔ¿œ¿œ¸¿–C¿–u¿–∆¿–„¿—1¿—5¿—6¿—B¿—á¿—≤¿—¯¿“¿“-¿“J¿“f¿“¡¿“ ¿“—¿“’¿“◊¿“ÿ¿”(¿”w¿”è¿”Ω¿”Ê¿”˘¿‘¿‘)¿‘F¿‘[¿‘\¿‘ô¿‘ü¿‘Í¿’;¿’h¿’n¿’´¿’Õ¿’ﬂ¿’¸¿÷¿÷(¿÷.¿÷E¿÷r¿÷v¿÷w¿÷É¿÷∂¿÷ ¿÷‹¿÷‚¿◊¿◊¿◊¿◊&¿◊Y¿◊m¿◊¿◊Ö¿◊∏¿◊º¿◊Ω¿◊…¿◊¸¿ÿ¿ÿ"¿ÿ(¿ÿ[¿ÿ_¿ÿ`¿ÿl¿ÿü¿ÿ≥¿ÿ≈¿ÿÀ¿ÿ˛¿Ÿ¿Ÿ¿Ÿ¿ŸR¿Ÿf¿Ÿy¿Ÿ¿Ÿª¿Ÿø¿Ÿ¿¿ŸÃ¿ŸÚ¿ŸÛ¿Ÿˇ¿⁄Q¿⁄ü¿⁄£¿⁄§¿⁄∞¿⁄Ω¿⁄˝¿€¿€4¿€:¿€j¿€n¿€o¿€{¿€î¿€™¿€≈¿€…¿€ ¿€÷¿€Ô¿‹¿‹%¿‹2¿‹O¿‹U¿‹Y¿‹Z¿‹f¿‹Æ¿‹Ò¿‹ı¿‹ˆ¿›¿›(¿›J¿›`¿›d¿›e¿›q¿›®¿›º¿› ¿›–¿›Ú¿›ˆ¿›˜¿ﬁ¿ﬁC¿ﬁW¿ﬁe¿ﬁk¿ﬁô¿ﬁù¿ﬁû¿ﬁ™¿ﬁÔ¿ﬂ¿ﬂ_¿ﬂc¿ﬂd¿ﬂp¿ﬂ¢¿ﬂª¿ﬂ›¿ﬂ„¿‡¿‡!¿‡8¿‡è¿‡ò¿‡ü¿‡£¿‡•¿‡¶¿‡‰¿‡Ë¿·3¿·¿·–¿‚¿‚E¿‚I¿‚Z¿‚^¿‚´¿‚∫¿‚æ¿‚Û¿‚˜¿„4¿„8¿„F¿„J¿„î¿„ﬁ¿‰¿‰Y¿‰q¿‰á¿‰¢¿‰≥¿Â¿Â>¿ÂD¿Âa¿ÂÄ¿ÂØ¿Âƒ¿Â≈¿Ê¿Ê¿Ê\¿Ê´¿Êª¿Ê¡¿Ê¯¿Á¿Á/¿ÁM¿Ál¿Áz¿ÁÄ¿Áò¿ÁΩ¿Áﬂ¿ÁÂ¿ÁÈ¿ÁÍ¿Ë:¿ËP¿ËV¿Ëï¿Ëõ¿ËÍ¿Ë˘¿ÈG¿ÈÄ¿ÈÑ¿Èπ¿È’¿È¸¿Í#¿Í1¿Í7¿ÍW¿Íw¿Í{¿Í|¿Íà¿Í–¿ÍÂ¿Î¿Î<¿Î@¿ÎA¿ÎM¿Îç¿Î¥¿Î¬¿Î»¿Îˆ¿Î˙¿Î˚¿Ï¿ÏN¿ÏÄ¿Ï—¿ÏÓ¿Ì<¿Ì@¿ÌA¿ÌM¿Ìí¿ÌΩ¿Ó¿Ó¿Ó9¿ÓV¿Óq¿Ó ¿Ó”¿Ó⁄¿Óﬁ¿Ó‡¿Ó·¿Ô¿Ô¿Ôe¿Ô∂¿¿&¿g¿°¿ß¿Ò¿Ò¿Ò¿Ò+¿Ò<¿ÒB¿ÒC¿Òv¿Òä¿Òã¿Òó¿Ò‹¿Ú¿ÚO¿ÚS¿ÚU¿ÚV¿Úù¿Úπ¿Û	¿ÛT¿Ûv¿Ûá¿Û¶¿Û—¿Ù¿Ù=¿ÙZ¿Ùn¿ÙÖ¿Ù®¿Ù·¿ı¿ı¿ıf¿ıê¿ıñ¿ı‰¿ˆ1¿ˆR¿ˆX¿ˆú¿ˆÏ¿˜;¿˜Ö¿˜–¿˜Ó¿¯)¿¯P¿¯Ç¿¯æ¿¯Ã¿¯“¿¯Ì¿˘¿˘¿˘¿˘H¿˘s¿˘ë¿˘∫¿˘’¿˘„¿˘È¿˙¿˙)¿˙R¿˙t¿˙z¿˙~¿˙¿˙“¿˚¿˚9¿˚n¿˚è¿˚ù¿˚£¿˚’¿˚Ô¿¸¿¸:¿¸@¿¸D¿¸E¿¸Ö¿¸Ÿ¿˝¿˝P¿˝|¿˝ä¿˝ê¿˝Õ¿˝Ú¿˛¿˛=¿˛C¿˛G¿˛H¿˛w¿˛«¿˛˚¿ˇ:¿ˇd¿ˇr¿ˇx¿ˇ≥¿ˇ÷¿ˇˇ¿ !¿ '¿ +¿ ,¿ o¿ ∂¿ ˆ¿5¿K¿b¿c¿o¿∂¿Ë¿È¿)¿E¿K¿ó¿ø¿≈¿Ô¿(¿d¿l¿§¿ﬁ¿Ê¿Ï¿¿J¿Ä¿à¿¿¿˙¿¿¿¿¿=¿Ä¿Ñ¿Ö¿´¿’¿¿D¿ä¿À¿’¿€¿ﬂ¿‡¿¿1¿n¿ü¿Â¿&¿0¿6¿:¿;¿_¿á¿∆¿ı¿	;¿	|¿	Ü¿	å¿	ê¿	ë¿	∑¿	ﬂ¿
¿
L¿
í¿
”¿
›¿
„¿
Á¿
Ë¿
Ù¿9¿d¿ê¿∞¿›¿¿W¿^¿z¿ò¿û¿‚¿Ê¿Ë¿È¿&¿`¿£¿©¿¿3¿I¿v¿í¿∑¿⁄¿˝¿¿?¿q¿ü¿Õ¿ı¿¿.¿X¿\¿]¿´¿‡¿¿1¿Q¿_¿e¿~¿®¿»¿Ã¿Õ¿¿W¿â¿è¿„¿2¿N¿r¿Ö¿£¿¡¿œ¿’¿Ì¿¿¿¿_¿¢¿®¿¯¿H¿]¿®¿Ï¿¿¿K¿õ¿œ¿¿!¿H¿p¿~¿Ñ¿•¿≈¿…¿ ¿¿1¿7¿É¿—¿¿K¿e¿ä¿∞¿æ¿ƒ¿„¿¿¿¿L¿R¿ò¿”¿ˆ¿(¿B¿g¿ç¿õ¿°¿¿¿‡¿‰¿Â¿!¿Z¿ì¿ﬁ¿)¿`¿d¿e¿∞¿‘¿¿¿ ¿k¿è¿÷¿⁄¿€¿¿6¿c¿â¿ú¿‘¿ÿ¿Ÿ¿ ¿ 4¿ f¿ å¿ ü¿ ◊¿ €¿ ‹¿!&¿!I¿!é¿!í¿!ì¿!π¿!ﬂ¿"¿"=¿"b¿"c¿"≥¿"¿¿"∆¿#¿#8¿#e¿#û¿#·¿$¿$8¿$d¿$Ü¿$î¿$ö¿$∂¿$÷¿$⁄¿$€¿$Á¿%'¿%C¿%Q¿%W¿%Ö¿%â¿%ä¿%ñ¿%›¿&¿&:¿&n¿&£¿&Ø¿'¿'`¿'g¿'s¿'æ¿(¿(¿(¿(6¿(d¿(j¿(ë¿(ø¿(≈¿(Í¿)¿)$¿)K¿)y¿)¿)ß¿)ÿ¿)ﬁ¿*¿*1¿*7¿*_¿*è¿*ï¿*π¿*‚¿*Ë¿+¿+;¿+A¿+g¿+î¿+ö¿+≈¿+¸¿,¿,(¿,U¿,[¿,á¿,æ¿,ƒ¿,Ì¿- ¿-&¿-N¿-¿-Ö¿-Æ¿-·¿-Á¿.¿.=¿.C¿.{¿.Ã¿.“¿.˙¿/+¿/1¿/Z¿/ç¿/ì¿/π¿/Ê¿/Ï¿0¿0<¿0B¿0l¿0ü¿0•¿0…¿0˚¿1¿1%¿1W¿1]¿1ä¿1Œ¿1‘¿2¿2E¿2K¿2n¿2û¿2§¿2À¿2¯¿2˛¿3T¿3å¿3í¿3Ω¿3Ú¿3¯¿4"¿4U¿4[¿4Ö¿4∏¿4æ¿4Ï¿5&¿5,¿5^¿5†¿5¶¿5«¿5Û¿5˘¿6 ¿6L¿6R¿6Ä¿6Ω¿6√¿7¿7_¿7°¿7∆¿7Ë¿7Ó¿8¿8G¿8M¿8v¿8†¿8¶¿8“¿9¿9¿95¿9g¿9m¿9ó¿9√¿9…¿9ı¿:%¿:+¿:U¿:Å¿:á¿:±¿:›¿:„¿;	¿;-¿;3¿;X¿;z¿;Ä¿;ß¿;Õ¿;”¿<¿<e¿<k¿<™¿= ¿=¿=?¿=â¿=è¿=…¿>¿>¿>I¿>}¿>É¿>¨¿>÷¿>‹¿?¿?e¿?k¿?¶¿?Ù¿?˙¿@!¿@G¿@M¿@É¿@Œ¿@‘¿@ÿ¿@Ÿ¿@¿A¿A¿A¿A1¿AV¿AZ¿A[¿Av¿Aô¿Aù¿Aû¿Aº¿A‚¿AÊ¿AÁ¿B¿B-¿B1¿B2¿BN¿Br¿Bv¿Bw¿Bï¿Bª¿Bø¿B¿¿B‹¿C ¿C¿C¿C!¿CE¿CI¿CJ¿Cb¿CÇ¿CÜ¿Cá¿Cû¿CΩ¿C¡¿C¬¿C€¿C¸¿D ¿D¿DE¿Då¿Dê¿Dë¿D÷¿E¿E"¿E#¿Eb¿E§¿E®¿E©¿EÈ¿F,¿F0¿F1¿Fh¿Fô¿Fù¿Fû¿Fƒ¿FÎ¿FÔ¿F¿G¿GR¿GV¿GW¿GÑ¿Gπ¿GΩ¿Gæ¿G◊¿G¯¿G¸¿G˛¿Gˇ¿HN¿Hj¿Hn¿HΩ¿HÒ¿I%¿It¿IÅ¿Iö¿I∞¿I ¿IÁ¿I¸¿I˝¿JJ¿Jö¿Jº¿JŒ¿JÎ¿K	¿K¿K¿K4¿KT¿KX¿KY¿Ke¿K¨¿Kﬁ¿L!¿L%¿L&¿L2¿Lw¿L¢¿LÁ¿LÎ¿LÌ¿LÓ¿M1¿Mt¿Mà¿Må¿M”¿N¿NL¿NÄ¿NŒ¿O¿O¿O¿O_¿Oë¿Oú¿Oæ¿OÓ¿OÚ¿OÙ¿Oı¿P'¿P+¿Pz¿Pñ¿Pö¿P·¿Q¿QR¿Qõ¿Q∂¿QÃ¿QÁ¿R¿R¿R¿Ra¿RÖ¿Rò¿R∂¿R’¿R„¿RÈ¿S¿S!¿S%¿S&¿S2¿Sr¿Sá¿Sï¿Sõ¿S…¿SÕ¿SŒ¿S⁄¿T¿TJ¿Të¿Tï¿Tó¿Tò¿T’¿TŸ¿U#¿Ul¿Uû¿U»¿UÃ¿U⁄¿Uﬁ¿V!¿VW¿Vß¿V¬¿Vÿ¿V¿W¿W¿W¿WP¿Wk¿Wy¿Wí¿W¨¿W∫¿W¿¿W‘¿WÙ¿W¯¿W˘¿X¿XL¿X~¿X†¿X§¿X•¿X±¿Xˆ¿Y!¿Y_¿Yc¿Ye¿Yf¿Yö¿Yû¿Y¨¿Y∞¿YÓ¿Z/¿Z`¿Zô¿ZØ¿ZÃ¿Z‚¿Z˜¿[¿[¿[[¿[y¿[¿[–¿[Í¿\	¿\¿\:¿\T¿\b¿\h¿\Ö¿\ò¿\ø¿\Ì¿\Û¿]	¿]¿]¿]¿]E¿]F¿]î¿]‚¿^$¿^A¿^B¿^N¿^g¿^Ç¿^¢¿^æ¿^¬¿^√¿^œ¿_¿_¿_V¿_c¿_†¿_≤¿_»¿_„¿_È¿`"¿`2¿`\¿`o¿`y¿`}¿`~¿`ä¿`œ¿`˙¿a<¿a@¿aB¿aC¿aë¿aƒ¿a»¿b¿b¿bc¿b¥¿b»¿bÃ¿b⁄¿bﬁ¿c¿ca¿cî¿cœ¿cÁ¿d¿d&¿dG¿dw¿d©¿dø¿d‘¿e¿e¿e?¿eh¿e}¿e~¿eƒ¿e˙¿f¿f,¿fJ¿fd¿fr¿fx¿fã¿f°¿f•¿f¶¿fÍ¿g(¿g.¿g¿g¡¿g«¿h¿hg¿hõ¿hÕ¿hÁ¿i¿i2¿i@¿iF¿ie¿i{¿i¿iÄ¿iÕ¿i˜¿j¿j)¿jF¿jb¿jp¿jv¿jã¿j°¿j•¿j¶¿jı¿k¿k¿kY¿kû¿kÌ¿l/¿l~¿lø¿m¿m*¿m?¿mE¿ml¿mõ¿m∂¿m‹¿m˛¿n¿n¿n-¿nC¿nG¿nH¿nî¿nŒ¿n‘¿o¿o¿oC¿ov¿oì¿oª¿oﬂ¿oÌ¿oÛ¿p¿p&¿p*¿p+¿p7¿pI¿p[¿po¿ps¿pt¿pÄ¿p´¿p¨¿p‚¿pÓ¿q+¿q,¿q|¿qÇ¿q“¿r¿rR¿rl¿ré¿r ¿rŒ¿rœ¿r€¿s#¿sd¿sò¿s¨¿s≤¿sÌ¿t*¿th¿tÇ¿t∫¿tæ¿tø¿tÀ¿u¿uD¿ul¿uÜ¿u¬¿v¿v¿v¿v¿v¿v%¿v\¿vä¿vñ¿vÒ¿wF¿wë¿wº¿w√¿wˇ¿x¿xn¿xá¿x§¿x∏¿x‰¿y¿y1¿y:¿yG¿yS¿yj¿yò¿y«¿yÍ¿y¿z¿z¿z(¿z;¿zh¿z∆¿zÁ¿{¿{!¿{:¿{C¿{J¿{Z¿{Ñ¿{ó¿{°¿{•¿{¶¿{≤¿{Û¿|"¿|&¿|'¿|3¿|x¿|£¿|Â¿}:¿}}¿}◊¿}€¿}›¿}ﬁ¿~-¿~1¿~?¿~C¿~á¿~Ã¿¿¿[¿m¿s¿¿¿Ú¿¯¿Ä'¿ÄA¿ÄW¿Äp¿ÄÜ¿Äù¿Ä¥¿ÄÚ¿Å¿Å¿ÅA¿ÅZ¿Åf¿ÅÅ¿Åü¿Å≠¿Å≥¿Å ¿Å‡¿Å‰¿ÅÂ¿Ç9¿ÇU¿Çd¿Ç~¿Çô¿Çß¿Ç≠¿Ç¡¿Ç◊¿Ç€¿Ç‹¿É¿É¿É$¿ÉP¿ÉQ¿É]¿Éî¿ÉÓ¿Ñ1¿Ñ>¿Ñ_¿ÑÑ¿Ñã¿Ñ´¿Ñﬁ¿Ñ‚¿Ñ„¿ÑÔ¿Ö¿Ö!¿Ö6¿Ö:¿Ö<    .RenderProxyBoxRenderProxyBoxMixinHitTestBehavior!RenderProxyBoxWithHitTestBehaviorRenderConstrainedBoxRenderLimitedBoxRenderAspectRatioRenderIntrinsicWidthRenderIntrinsicHeightRenderIgnoreBaselineRenderOpacityRenderAnimatedOpacityMixinRenderAnimatedOpacityRenderShaderMaskRenderBackdropFilterCustomClipperShapeBorderClipper_RenderCustomClipRenderClipRectRenderClipRRectRenderClipOvalRenderClipPath_RenderPhysicalModelBaseRenderPhysicalModelRenderPhysicalShapeDecorationPositionRenderDecoratedBoxRenderTransformRenderFittedBoxRenderFractionalTranslationRenderPointerListenerRenderMouseRegionRenderRepaintBoundaryRenderIgnorePointerRenderOffstageRenderAbsorbPointerRenderMetaDataRenderSemanticsGestureHandlerRenderSemanticsAnnotationsRenderBlockSemanticsRenderMergeSemanticsRenderExcludeSemanticsRenderIndexedSemanticsRenderLeaderLayerRenderFollowerLayerRenderAnnotatedRegion Z(