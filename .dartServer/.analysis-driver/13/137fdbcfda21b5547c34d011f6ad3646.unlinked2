Ä¢magnifierConfiguration	focusNodechildcontextMenuBuilderselectionControlsonSelectionChangedgetSelectableButtonItemscreateState_actions_gestureRecognizers_selectionOverlay_startHandleLayerLink_endHandleLayerLink_toolbarLayerLink_selectionDelegate_selectable_hasSelectionOverlayGeometry_lastOrientation_lastSelectedContentselectionOverlay_processTextService_processTextActions	initState_initProcessTextActionsdidChangeDependenciesdidUpdateWidget_makeOverridable_handleFocusChanged_updateSelectionStatus_isShiftPressed_lastSecondaryTapDownPosition_lastPointerDeviceKind_isPrecisePointerDevice _getEffectiveConsecutiveTapCount_initMouseGestureRecognizer_onTapTrackStart_onTapTrackReset_initTouchGestureRecognizer_doubleTapOffset_startNewMouseSelectionGesture_handleMouseDragStart_handleMouseDragUpdate_handleMouseDragEnd_handleMouseTapUp_updateSelectedContentIfNeeded_handleTouchLongPressStart_handleTouchLongPressMoveUpdate_handleTouchLongPressEnd_positionIsOnActiveSelection_handleRightClickDown_selectionEndPosition_userDraggingSelectionEnd _scheduledSelectionEndEdgeUpdate_triggerSelectionEndEdgeUpdate_onAnyDragEnd_stopSelectionEndEdgeUpdate_selectionStartPosition_userDraggingSelectionStart"_scheduledSelectionStartEdgeUpdate _triggerSelectionStartEdgeUpdate_stopSelectionStartEdgeUpdate!_selectionStartHandleDragPosition_selectionEndHandleDragPosition$_handleSelectionStartHandleDragStart%_handleSelectionStartHandleDragUpdate"_handleSelectionEndHandleDragStart#_handleSelectionEndHandleDragUpdate_buildInfoForMagnifier_createSelectionOverlay_updateSelectionOverlay_showHandles_showToolbar_selectEndTo_selectStartTo_collapseSelectionAt_selectWordAt_selectParagraphAt_finalizeSelectionclearSelection_copy_sharecontextMenuAnchors_adjustingSelectionEnd!_determineIsAdjustingSelectionEnd_granularlyExtendSelection_directionalHorizontalBaseline_directionallyExtendSelectioncontextMenuButtonItems _textProcessingActionButtonItemsstartGlyphHeightendGlyphHeightselectionEndpoints
cutEnabledpasteEnabledhideToolbar	selectAllcopySelectiontextEditingValuebringIntoViewcutSelectionuserUpdateTextEditingValue	pasteTextaddremovedisposebuildinvokeActioninvokestategranularity_hasReceivedStartEvent_hasReceivedEndEvent"_lastStartEdgeUpdateGlobalPosition _lastEndEdgeUpdateGlobalPosition#_updateLastEdgeEventsFromGeometrieshandleSelectAllhandleSelectWordhandleSelectParagraphhandleClearSelectionhandleSelectionEdgeUpdatedispatchSelectionEventToChildensureChildUpdateddidChangeSelectablesselectables$_kSelectionHandleDrawableAreaPaddingcurrentSelectionEndIndexcurrentSelectionStartIndex_startHandleLayer_startHandleLayerOwner_endHandleLayer_endHandleLayerOwner_isHandlingSelectionEvent_scheduledSelectableUpdate_selectionInProgress
_additions_extendSelectionInProgresslayoutDidChange_scheduleSelectableUpdate_updateSelectables_flushAdditions_removeSelectablevalue_selectionGeometry_updateSelectionGeometry_getBoundingBoxcompareOrder_compareScreenOrder_compareVertically_compareHorizontally_handleSelectableGeometryChangegetSelectionGeometry-_adjustSelectionIndexBasedOnSelectionGeometrypushHandleLayers_updateHandleLayersAndOwnersgetSelectedContent_flushInactiveSelections_handleSelectBoundaryhandleGranularlyExtendSelection"handleDirectionallyExtendSelectiondispatchSelectionEvent_initSelection_adjustSelection_kLongPressSelectionDevices&_kSelectableVerticalComparingThresholdSelectableRegionSelectableRegionState_NonOverrideAction_SelectAllAction_CopySelectionAction _GranularlyExtendSelectionAction%_GranularlyExtendCaretSelectionAction(_DirectionallyExtendCaretSelectionAction"_SelectableRegionContainerDelegate)MultiSelectableSelectionContainerDelegate"SelectableRegionContextMenuBuilderÅ¢SetPointerDeviceKindtouchstylusinvertedStylusdoubleTextSelectionAreamaterial
SelectableSelectionContainerSelectionEventSelectionRegistrarScopedelegateSelectionRegistrarmaybeOfSelectionRegistrantdisabledWidgetTesterdragFrom	GlobalKeySelectableTextSelectionHandlerStatefulWidgetTextMagnifierConfiguration	FocusNodeWidgetemptyTextSelectionControlsTextSelectionControlsValueChangedSelectedContentContextMenuButtonItemcontextMenuButtonItemsEditableTextgetEditableButtonItemsAdaptiveTextSelectionToolbarbuttonItemsgetAdaptiveButtonsListSelectionGeometryVoidCallbackboolselectionGeometrystatusSelectionStatusuncollapsed
hasContentdefaultTargetPlatformTargetPlatformandroidmacOSfuchsialinuxwindowsiOSonShare	onPressedonCopytypeContextMenuButtonTypecopyshareonSelectAll	selectAlloverrideStateTextSelectionDelegateMapTypeActionIntentSelectAllTextIntentCopySelectionTextIntent6ExtendSelectionToNextWordBoundaryOrCaretLocationIntentgranularityTextGranularityword'ExpandSelectionToDocumentBoundaryIntentdocument ExpandSelectionToLineBreakIntentline ExtendSelectionByCharacterIntent	character'ExtendSelectionToNextWordBoundaryIntent ExtendSelectionToLineBreakIntent-ExtendSelectionVerticallyToAdjacentLineIntent'ExtendSelectionToDocumentBoundaryIntentGestureRecognizerFactorySelectionOverlay	LayerLinkvaluestartSelectionPointendSelectionPointOrientationvisibleForTestingProcessTextServiceDefaultProcessTextServiceProcessTextActionvoid	initStatewidget	focusNodeaddListenerTapGestureRecognizer$GestureRecognizerFactoryWithHandlers
debugOwnerinstanceonSecondaryTapDownFutureclearaddAllqueryTextActionsdidChangeDependencies
MediaQueryorientationOfcontextdidUpdateWidgetremoveListenerhasFocusoverridabledefaultActionkIsWeb#PlatformSelectableRegionContextMenudetachSchedulerBindinglifecycleStateAppLifecycleStateresumedattachTextSelection	collapsed
baseOffsetextentOffsetnoneoffsetTextEditingValuetext	selectiondisposePointerDownEventBaseTapAndDragGestureRecognizerOffsetmousetrackpadunknownintminTapAndPanGestureRecognizersupportedDevicesonTapTrackStartonTapTrackReset	onTapDownonTapUponDragStartonDragUpdate	onDragEndonCanceldragStartBehaviorDragStartBehaviordownHardwareKeyboardlogicalKeysPressedintersectionLogicalKeyboardKey	shiftLeft
shiftRight
isNotEmpty%TapAndHorizontalDragGestureRecognizervalueswheredevicetoSeteagerVictoryOnDragLongPressGestureRecognizeronLongPressStartonLongPressMoveUpdateonLongPressEndTapDragDownDetailskindconsecutiveTapCountrequestFocusisShiftPressedValidglobalPositionTapDragStartDetailsTapDragUpdateDetails
continuoustextGranularity	paragraphTapDragEndDetailsTapDragUpDetailstoolbarIsVisibleisPointerPrecise	plainTextgetSelectedContentonSelectionChangedcallLongPressStartDetailsHapticFeedbackselectionClickLongPressMoveUpdateDetailsLongPressEndDetailsRectselectionRectsMatrix4getTransformToMatrixUtilstransformRectselectionRectcontainsTapDownDetails0lastSecondaryTapDownPositionWasOnActiveSelectionlocationSelectionEdgeUpdateEventSelectionResultpendingdispatchSelectionEventforEndaddPostFrameCallbackDuration
debugLabelDragEndDetailsselectionControlsTextSelectionHandleControlshideMagnifiershowToolbarcontextMenuBuilderBuildContextforStartDragStartDetailslocalPositiontransformPointshowMagnifierDragUpdateDetailsdelta
lineHeightupdateMagnifierMagnifierInfoSelectionPointVector3getTranslationxyfromLTWHdxdyglobalGesturePosition	caretRectfieldBoundssizecurrentLineBoundariesdebugRequiredForstartHandleType
handleTypeTextSelectionHandleTypeleftlineHeightAtStartonStartHandleDragStartonStartHandleDragUpdateonStartHandleDragEndendHandleTyperightlineHeightAtEndonEndHandleDragStartonEndHandleDragUpdateonEndHandleDragEndselectionEndpointsselectionDelegateclipboardStatusstartHandleLayerLinkendHandleLayerLinktoolbarLayerLinkmagnifierConfigurationshowHandlesOverlayBrowserContextMenuenabledtoolbarLocationhideToolbarSelectWordSelectionEventSelectParagraphSelectionEventClearSelectionEvent	ClipboardsetDataClipboardDataSystemChannelsplatforminvokeMethodTextSelectionToolbarAnchorsprimaryAnchor	RenderBoxfindRenderObjectfromSelection	renderBoxstartGlyphHeightendGlyphHeighthasSelectionGranularlyExtendSelectionEventforwardisEnd!DirectionallyExtendSelectionEvent	directionSelectionExtendDirectionnextLinepreviousLinegetSelectableButtonItemsEditableTextStateSelectionChangedCausetoolbaraddlabelactionStringprocessTextActionidTextSelectionPointTextDirectionltr
DeprecatedhideHandlesSelectAllSelectionEventcauseTextPositionpushHandleLayersdebugCheckHasOverlay	registrarchildCompositedTransformTargetlinkRawGestureDetectorgesturesbehaviorHitTestBehaviortranslucentexcludeFromSemanticsActionsactionsFocusincludeSemanticsContextActionObjectcallingActioninvokekeyboard_copyDirectionalTextEditingIntent_granularlyExtendSelectionDirectionalCaretMovementIntentcollapseSelection_directionallyExtendSelectionremovecurrentSelectionStartIndexselectablescurrentSelectionEndIndexhandleSelectAll
selectablehandleSelectWordhandleSelectParagraphhandleClearSelectionSelectionEventTypeendEdgeUpdatehandleSelectionEdgeUpdatestartEdgeUpdate
selectWordselectParagraphgranularlyExtendSelectiondirectionallyExtendSelectiondispatchSelectionEventToChildremoveWheredidChangeSelectablesSelectionContainerDelegateChangeNotifier kFlutterMemoryAllocationsEnabledmaybeDispatchObjectCreation	protectedschedulerPhaseSchedulerPhasepostFrameCallbacksscheduleMicrotasktoListsortlengthmaxindexOfremoveAtmustCallSupernotifyListenersboundingBoxesfirstindexexpandToInclude
ComparatortopbottomabsprecisionErrorToleranceisEmptygetTransformFromisFinitehasSizecontainerSizewidthheightmap	intersectinflatedataStringBufferwritetoStringtargetforEachrectnextpreviousendbackwardcopyWithEditableTextContextMenuBuilder	StatefulWidgetStateTextSelectionDelegateSelectionRegistrarContextAction_NonOverrideAction)MultiSelectableSelectionContainerDelegateSelectionContainerDelegateChangeNotifier°z˝∏T-…Tßû]“Õb∞    Å^   
dart:async  Ås   	dart:math  Åà   package:flutter/foundation.dart  Å≤   package:flutter/gestures.dart  Å⁄   package:flutter/rendering.dart  Ç   package:flutter/scheduler.dart  Ç,   package:flutter/services.dart  ÇT   'package:vector_math/vector_math_64.dart  Çá   actions.dart  Çû   
basic.dart  Ç≥   context_menu_button_item.dart  Ç€   
debug.dart  Ç   focus_manager.dart  É   focus_scope.dart  É(   framework.dart  ÉA   gesture_detector.dart  Éa   magnifier.dart  Éz   media_query.dart  Éï   overlay.dart  É¨   ,platform_selectable_region_context_menu.dart  É„   selection_container.dart  Ñ   text_editing_intents.dart  Ñ*   text_selection.dart  ÑH   #text_selection_toolbar_anchors.dart¿ ó ¿ÀüãS <ÄÜÄ§Ä•Ä’ÅÅÅ7ÅSÅ\Å]ÅrÅÜÅáÅ±ÅŸÇÇ+ÇSÇÖÇÜÇùÇ≤Ç⁄ÇÔÉÉ'É@É`ÉyÉîÉ´É‚ÑÑ)ÑGÑuÑvÑéÑµÑÃÑÕÖÖ8ÖTÖxÖ{Ö|Ö ÜÜYÜîÜïÜœÜ”á ápá¿ààSà£à…àÕââFâJâíâﬁä+äyä}ä©ä≠ä˛ã4ã8ãâãÃãÒãıå6åÄåœççoçΩçÈçÌé>éåé“è"è@èDèèè√êêêêHêLê`êdêpêÅêüêŸëë/ësëçë≥ëÛí3íBíOíZícíiíqíÅíÖíâíÆí”íÙìì9ì]ìÇì®ìÿîî/î[îàîΩîÛî˜î˚ïï!ïqï≥ïÀïœññfñùñ°ñó;óÜó•ó©óΩò	ò&ò*òÖòïòôòØò≥ôôOôçôëô•ôÒö7ö;ööö™öÆöˇõGõjõnõÇõ–õ‘ú<úLúPúöúÌù<ùäùéùõùüùûAûnûrû~û‚ûÍûÓû¸ü ü@ümü∑†
†%†u†√†‹°*°w°ß°’°€¢)¢K¢f¢u¢í¢Ø¢‘¢Ì£4£Q£W£X£ß£≠£˛§I§{§Å§∞§Î§Ï••8•9•p•v•ß•Ω•æ•˝¶=¶>¶á¶ñ¶ú¶Êß%ßVßWßáß√ßƒ®®9®?®è®´®±®¡®«©©Q©¢©‹™-™b™ñ™È´2´r´™´“´ˇ¨)¨0¨Ç¨æ≠≠≠b≠}≠ù≠ª≠€≠ÌÆ;ÆçÆ∏Æ¯ØØ#Ø*ØiØjØØ∞
∞∞\∞¢∞µ∞Ÿ∞Ï±±(±T±_±è±Æ±Ã±˘≤≤≤;≤]≤é≤ô≤ ≤È≥≥4≥?≥F≥J≥K≥W≥ô≥õ≥ú≥¿¥7¥Å¥ƒµµ‡∂ó∑<∑Î∏£πMπÒ∫≠∫≤∫≥ªª@ªwª¨ªﬂºEºïº∞º±ΩΩpΩqΩíΩªΩºæææEæZæôæöæÒø?ø@øâø÷ø◊ø„ø¯¿ @¿ @F¿ @i¿ @å¿ @°¿ A¿ AE¿ Aq¿ AÆ¿ A∑¿ Aæ¿ A›¿ A·¿ A‚¿ B3¿ BX¿ Bâ¿ B™¿ B¯¿ B¸¿ B˝¿ C	¿ C*¿ CM¿ Cr¿ Cï¿ C¥¿ C√¿ CÊ¿ D¿ D(¿ DK¿ D[¿ Da¿ Db¿ D≠¿ DÙ¿ E¿ E>¿ EL¿ ER¿ E}¿ E£¿ EÁ¿ EÌ¿ EÒ¿ EÚ¿ E˛¿ F3¿ FY¿ Få¿ FÀ¿ G¿ GK¿ Gj¿ Gr¿ Gx¿ G|¿ G}¿ G«¿ H¿ H¿ H¿ H=¿ Hc¿ Hw¿ Hø¿ H«¿ I¿ Ii¿ Iµ¿ J¿ JQ¿ J£¿ JÛ¿ K¿ K1¿ K9¿ K?¿ KQ¿ Kó¿ Kù¿ K°¿ K¢¿ Kƒ¿ L¿ LD¿ Lª¿ M¿ M
¿ MU¿ M}¿ Mû¿ M´¿ Mœ¿ MÔ¿ Mı¿ M˘¿ M˙¿ N	¿ N
¿ NZ¿ Nñ¿ N∂¿ N∑¿ N˝¿ O¿ O=¿ O>¿ Oç¿ O§¿ O—¿ O“¿ P¿ P@¿ Pd¿ Py¿ P†¿ P≈¿ PÚ¿ Q¿ Q<¿ QR¿ QX¿ Q\¿ Q]¿ Q≠¿ R ¿ RP¿ Rï¿ Rö¿ RÏ¿ S ¿ S7¿ SV¿ S{¿ Sû¿ S¡¿ T$¿ Tr¿ Tæ¿ TÙ¿ U¿ U¿ Ul¿ U¡¿ V¿ VV¿ V®¿ VÒ¿ WÉ¿ W§¿ WÒ¿ XF¿ Xó¿ X‚¿ Y4¿ Y}¿ Z¿ Z.¿ ZO¿ Zr¿ Zø¿ [¿ [g¿ [å¿ [Ω¿ [√¿ [«¿ [»¿ [Ô¿ \g¿ \ì¿ \∞¿ \˛¿ ]¿ ]=¿ ]N¿ ]}¿ ]¨¿ ]„¿ ^¿ ^;¿ ^m¿ ^ô¿ ^ø¿ ^˜¿ _ ¿ _¿ _¿ _¿ _(¿ _k¿ _‘¿ _È¿ _Ì¿ _Ó¿ `
¿ `'¿ `+¿ `,¿ `S¿ `´¿ a¿ ab¿ a¿ b'¿ bD¿ bû¿ b÷¿ bÓ¿ b˚¿ c8¿ cI¿ cà¿ c—¿ d¿ dL¿ dã¿ d…¿ e¿ eG¿ eÖ¿ eø¿ e¸¿ f9¿ fY¿ f¶¿ f›¿ g¿ g5¿ gg¿ gì¿ gπ¿ gÒ¿ g˙¿ h¿ hy¿ hÊ¿ i¿ i)¿ ic¿ iß¿ iﬁ¿ iÁ¿ iÓ¿ iÚ¿ iÛ¿ j¿ jS¿ j~¿ jÀ¿ jŸ¿ k¿ k+¿ kR¿ ky¿ kú¿ kÏ¿ l ¿ l¿ l8¿ l]¿ lÑ¿ lü¿ lÌ¿ m=¿ mä¿ m≥¿ n)¿ nP¿ nå¿ n¢¿ n∞¿ nÚ¿ n¸¿ o
¿ o3¿ oV¿ o≥¿ p¿ pE¿ pZ¿ ph¿ p£¿ pˆ¿ q¿ q"¿ qI¿ qp¿ qï¿ q∫¿ q·¿ r¿ r&¿ r4¿ r]¿ rÑ¿ r´¿ rŒ¿ s ¿ sg¿ s¢¿ s‰¿ sÚ¿ t¿ t<¿ tc¿ t£¿ t≠¿ t≥¿ tŸ¿ t›¿ tﬁ¿ u¿ ug¿ uu¿ uƒ¿ v¿ v!¿ v+¿ vc¿ vi¿ vè¿ vì¿ vî¿ v“¿ w¿ w-¿ w|¿ w«¿ wŸ¿ w„¿ x+¿ x9¿ xb¿ xâ¿ x∞¿ y¿ y9¿ yñ¿ z¿ z¿ z<¿ zµ¿ {¿ {3¿ {k¿ {í¿ {†¿ |¿ |f¿ |Ñ¿ |í¿ |∑¿ |‹¿ }¿ }v¿ }Ä¿ }é¿ }∑¿ }ﬁ¿ ~¿ ~(¿ ~x¿ ~°¿ ~Û¿ m¿ {¿ †¿ ≈¿ Ï¿ Äd¿ Än¿ Ät¿ Äö¿ Äû¿ Äü¿ Ä◊¿ ÅN¿ Ås¿ Åñ¿ Åπ¿ Å⁄¿ Ç,¿ Ç{¿ Çï¿ ÇØ¿ Çπ¿ Çÿ¿ Ç˘¿ ÉG¿ Éñ¿ É∞¿ É∫¿ É€¿ É¸¿ Ñ¿ Ñr¿ ÑÉ¿ Ñâ¿ Ñ£¿ Ñ…¿ ÑÕ¿ ÑŒ¿ Ö¿ ÖÇ¿ ÖÃ¿ Ü¿ Ü_¿ Ü}¿ Üô¿ Ü®¿ Ü¿¿ Ü»¿ Ü÷¿ Ü‹¿ á)¿ á7¿ á`¿ áá¿ áÆ¿ á—¿ áÏ¿ à.¿ àS¿ àx¿ àü¿ àÂ¿ à¯¿ â¿ â¿ â]¿ âÜ¿ â≠¿ â‘¿ â˘¿ äN¿ ä°¿ äø¿ ä›¿ äÎ¿ ã¿ ã3¿ ãÑ¿ ã◊¿ ãı¿ å¿ å(¿ åM¿ åt¿ åΩ¿ å·¿ åˆ¿ ç ¿ ç¿ ç,¿ ç0¿ ç1¿ ç[¿ ç∂¿ çˆ¿ é3¿ é9¿ é=¿ é>¿ éÅ¿ é¶¿ éÀ¿ é˛¿ èI¿ èõ¿ èÍ¿ ê%¿ ê;¿ êA¿ êg¿ êk¿ êl¿ êπ¿ ë¿ ë8¿ ë<¿ ë=¿ ë|¿ ëñ¿ ëº¿ ë–¿ í¿ í!¿ í'¿ í+¿ í,¿ ít¿ íƒ¿ ì¿ ìZ¿ ìã¿ ì†¿ ì®¿ ìÆ¿ ì¿¿ ìƒ¿ ì≈¿ ì¸¿ îP¿ î†¿ î‹¿ ï¿ ï&¿ ïI¿ ïl¿ ïè¿ ï‡¿ ñ ¿ ñ¨¿ ñÌ¿ ó5¿ ó?¿ óW¿ óñ¿ óµ¿ óÙ¿ ò¿ òK¿ òl¿ ò—¿ òÍ¿ ò¸¿ ô¿ ôE¿ ô]¿ ôú¿ ôΩ¿ ô›¿ ôˆ¿ ö¿ ö¿ öc¿ ö£¿ õ/¿ õp¿ õ∏¿ õ¬¿ õ⁄¿ ú¿ ú¿ úE¿ úI¿ úJ¿ úp¿ úq¿ úí¿ úŸ¿ ù
¿ ù¿ ùQ¿ ùW¿ ù®¿ ù˘¿ û+¿ ûw¿ û√¿ ü¿ ü]¿ ü•¿ üÔ¿ ü˝¿ †¿ †0¿ †Ω¿ †Ï¿ °8¿ °i¿ °{¿ °Ö¿ °∑¿ ¢¿ ¢9¿ ¢G¿ ¢M¿ ¢P¿ ¢Q¿ ¢¿ ¢¬¿ ¢Í¿ £¿ £¿ £E¿ £j¿ £É¿ £∑¿ £Ú¿ £¸¿ §¿ §	¿ §,¿ §M¿ §q¿ §t¿ §u¿ §ú¿ § ¿ §Ï¿ §¿ §Ò¿ •¿ •_¿ •í¿ •ì¿ •€¿ •·¿ ¶2¿ ¶É¿ ¶µ¿ ß¿ ßO¿ ßö¿ ßÈ¿ ®1¿ ®¿ ®ç¿ ®ì¿ ®¿¿ ©Q¿ ©Ç¿ ©Œ¿ ™¿ ™¿ ™¿ ™Q¿ ™ù¿ ™◊¿ ™Â¿ ™Î¿ ™Ô¿ ™¿ ´¿ ´I¿ ´k¿ ´o¿ ´p¿ ´ñ¿ ´ó¿ ´»¿ ´˜¿ ´¯¿ ¨@¿ ¨Ç¿ ¨É¿ ¨·¿ ≠(¿ ≠å¿ ≠ç¿ ≠ ¿ ≠Ë¿ Æ¿ Æ%¿ ÆK¿ ÆO¿ ÆP¿ Æö¿ Æı¿ Ø?¿ Øà¿ ∞¿ ∞;¿ ∞<¿ ∞{¿ ∞ô¿ ∞Œ¿ ∞÷¿ ∞¸¿ ± ¿ ±¿ ±G¿ ±á¿ ±„¿ ≤*¿ ≤å¿ ≤ç¿ ≤ ¿ ≤Ë¿ ≥¿ ≥#¿ ≥I¿ ≥M¿ ≥N¿ ≥ñ¿ ≥Ì¿ ¥7¿ ¥Ä¿ µ¿ µ+¿ µ,¿ µk¿ µâ¿ µº¿ µƒ¿ µÍ¿ µÓ¿ µÔ¿ ∂U¿ ∂Ø¿ ∑
¿ ∑t¿ ∑†¿ ∑…¿ ∏¿ ∏¿ ∏;¿ ∏D¿ ∏E¿ ∏a¿ ∏ó¿ ∏µ¿ ∏˜¿ πC¿ πL¿ πP¿ πQ¿ πt¿ πû¿ π√¿ π—¿ π◊¿ ∫'¿ ∫s¿ ∫ù¿ ∫µ¿ ∫’¿ ª¿ ª^¿ ª¢¿ ªË¿ º¿ ºZ¿ ºó¿ º◊¿ Ω¿ ΩB¿ Ωp¿ Ω£¿ Ω¬¿ Ωﬂ¿ æ¿ æA¿ æl¿ æ®¿ æØ¿ æ≥¿ æ¥¿ æ◊¿ æ¸¿ ø
¿ ø¿ ø:¿ øä¿ ø÷¿ øÌ¿ ¿9¿ ¿z¿ ¿√¿ ¡¿ ¡3¿ ¡7¿ ¡8¿ ¡[¿ ¡a¿ ¡¨¿ ¡π¿ ¡—¿ ¡ˆ¿ ¬¿ ¬1¿ ¬7¿ ¬8¿ ¬a¿ ¬u¿ ¬{¿ ¬|¿ ¬õ¿ ¬¡¿ ¬“¿ ¬÷¿ ¬◊¿ ¬ˇ¿ √¿ √P¿ √†¿ √Ì¿ √˛¿ ƒ¿ ƒU¿ ƒ¿ ƒ≈¿ ƒŸ¿ ƒﬂ¿ ƒ‡¿ ≈1¿ ≈Å¿ ≈—¿ ∆¿ ∆]¿ ∆ç¿ ∆°¿ ∆ß¿ ∆®¿ ∆Õ¿ ∆Ó¿ ∆Ù¿ ∆ı¿ «(¿ «l¿ «î¿ «ß¿ «≠¿ «Æ¿ «‘¿ «’¿ «˘¿ »¿ »D¿ »~¿ »á¿ »é¿ »ü¿ »£¿ »§¿ »Á¿ »Ì¿ …;¿ …ç¿ …’¿ …€¿  ¿  ]¿  c¿  ≠¿  ¸¿ ÀD¿ Àj¿ Àp¿ À£¿ À©¿ À÷¿ À‹¿ Ã0¿ Ãx¿ ÃÆ¿ Ã¥¿ Ãƒ¿ Õ¿ ÕP¿ Õè¿ Õ’¿ Œ'¿ Œw¿ ŒØ¿ œ¿ œ1¿ œ≥¿ œ¡¿ œ«¿ œÚ¿ –¿ –`¿ –f¿ –j¿ –k¿ –∞¿ –∂¿ —¿ —V¿ —û¿ —§¿ —Í¿ “(¿ “.¿ “x¿ “«¿ ”¿ ”5¿ ”;¿ ”n¿ ”t¿ ”°¿ ”ß¿ ”˚¿ ‘C¿ ‘y¿ ‘¿ ‘è¿ ‘“¿ ’¿ ’V¿ ’ú¿ ’Ó¿ ÷>¿ ÷v¿ ÷„¿ ÷˙¿ ◊~¿ ◊å¿ ◊í¿ ◊ø¿ ◊Á¿ ÿ1¿ ÿ7¿ ÿ;¿ ÿ<¿ ÿz¿ ÿÄ¿ ÿ≠¿ ÿ≥¿ ÿ√¿ Ÿ
¿ ŸM¿ Ÿí¿ Ÿ—¿ ⁄¿ ⁄i¿ ⁄°¿ ⁄Ÿ¿ ⁄˝¿ €¿ €#¿ €$¿ €Y¿ €_¿ €å¿ €í¿ €ﬂ¿ ‹*¿ ‹v¿ ‹|¿ ‹Œ¿ ‹ı¿ ‹˚¿ ›¿ ›R¿ ›ï¿ ›⁄¿ ﬁ¿ ﬁi¿ ﬁª¿ ﬁÛ¿ ﬂ$¿ ﬂQ¿ ﬂk¿ ﬂ∆¿ ﬂ ¿ ﬂÀ¿ ‡¿ ‡¿ ‡;¿ ‡A¿ ‡ç¿ ‡ÿ¿ ·)¿ ·/¿ ·Å¿ ·®¿ ·Æ¿ ·æ¿ ‚¿ ‚H¿ ‚ç¿ ‚À¿ „¿ „I¿ „¿ „¨¿ „∆¿ ‰&¿ ‰*¿ ‰+¿ ‰V¿ ‰\¿ ‰©¿ ‰Ï¿ ‰Ú¿ Â@¿ Âê¿ ÂŸ¿ ÂÍ¿ Ê¿ Ê+¿ ÊP¿ ÊT¿ ÊU¿ Êñ¿ Ê∞¿ Ê ¿ Êı¿ Á¿ Á^¿ ÁÑ¿ Áà¿ Áâ¿ Á®¿ ÁÌ¿ Ë¿ Ë¿ Ë¿ Ë[¿ Ë_¿ Ë`¿ ËÄ¿ Ë≈¿ Ë›¿ ËÎ¿ ËÒ¿ ÈA¿ ÈE¿ ÈF¿ È}¿ ÈÉ¿ Èì¿ Èô¿ ÈË¿ Í¿ ÍN¿ Í¿ Í©¿ Í‡¿ ÍÈ¿ ÍÔ¿ Î9¿ Îo¿ Îã¿ Îµ¿ Î€¿ Ï	¿ Ï¿ Ï¿ Ï¿ Ï5¿ Ïn¿ Ïò¿ Ïæ¿ Ïƒ¿ Ïﬂ¿ Ì¿ Ì8¿ ÌÑ¿ ÌΩ¿ Ì÷¿ Ó¿ Ó0¿ Ó=¿ Ó¿ ÓÖ¿ Óœ¿ Ô
¿ Ô¿ Ô¿ Ô^¿ Ôâ¿ Ôª¿ Ô…¿ Ôœ¿ Ô¯¿ ¿ 8¿ s¿ ï¿ û¿ •¿ À¿ œ¿ –¿ ˙¿ ˚¿ Ò0¿ Òb¿ Òp¿ Òv¿ ÒÃ¿ Ú¿ ÚB¿ Úy¿ Ú¿¿ Ûh¿ Ûë¿ Û∫¿ Û‚¿ ÙJ¿ Ùu¿ Ù~¿ ÙÖ¿ Ù´¿ ÙØ¿ Ù∞¿ Ùÿ¿ ÙŸ¿ ı%¿ ıN¿ ıT¿ ıd¿ ıj¿ ıæ¿ ˆ¿ ˆ]¿ ˆ§¿ ˆÛ¿ ˜	¿ ˜Z¿ ˜è¿ ˜√¿ ¯¿ ¯_¿ ¯ö¿ ¯–¿ ˘¿ ˘¿ ˘'¿ ˘(¿ ˘_¿ ˘à¿ ˘Ø¿ ˘÷¿ ˘Ù¿ ˙¿ ˙7¿ ˙\¿ ˙Å¿ ˙®¿ ˙√¿ ˙Õ¿ ˙÷¿ ˙Ó¿ ˚¿ ˚>¿ ˚a¿ ˚à¿ ˚æ¿ ˚„¿ ¸¿ ¸/¿ ¸H¿ ¸c¿ ¸m¿ ¸v¿ ¸ä¿ ¸ú¿ ¸ù¿ ¸÷¿ ¸ˇ¿ ˝&¿ ˝M¿ ˝k¿ ˝é¿ ˝Æ¿ ˝”¿ ˝¯¿ ˛¿ ˛:¿ ˛D¿ ˛M¿ ˛~¿ ˛Ç¿ ˛É¿ ˛»¿ ˇ¿ ˇ\¿ ˇt¿ ˇé¿ ˇî¿ ˇï¿ ˇ◊¿ ¿ !¿ ?¿ u¿ û¿ ˆ¿¿¿(¿2¿8¿P¿T¿U¿í¿≤¿˜¿˚¿¸¿7¿U¿ò¿ú¿ù¿Ï¿ ¿p¿º¿Ê¿8¿à¿ø¿‰¿%¿h¿q¿~¿£¿Ê¿'¿0¿6¿I¿M¿N¿v¿∏¿‰¿¿¿*¿S¿å¿ê¿ú¿º¿Ω¿Ã¿ı¿.¿2¿>¿`¿a¿m¿ù¿√¿⁄¿	¿	¿	¿	¿	¿	L¿	b¿	¨¿	ﬁ¿	Ù¿

¿
¿
6¿
:¿
;¿
J¿
s¿
¨¿
∞¿
º¿
¿
˝¿¿¿¿'¿P¿â¿ç¿ô¿‚¿„¿Ú¿¿T¿X¿d¿»¿…¿ÿ¿¿:¿>¿J¿}¿ê¿î¿ï¿§¿Õ¿¿
¿¿û¿ü¿Æ¿◊¿¿¿ ¿^¿q¿u¿v¿ö¿õ¿ß¿À¿Ï¿
¿@¿è¿ì¿î¿†¿«¿Ó¿'¿V¿n¿r¿s¿¿í¿À¿˙¿¿j¿§¿Ã¿Ó¿¿!¿%¿&¿2¿Y¿Ñ¿¨¿√¿Á¿¿	¿¿O¿f¿o¿u¿õ¿∫¿€¿¿1¿U¿m¿ä¿¢¿«¿¿¿¿#¿,¿3¿7¿9¿:¿à¿å¿⁄¿+¿?¿é¿…¿ ¿÷¿¿-¿Y¿_¿â¿ç¿è¿ê¿Ÿ¿˘¿˙¿¿ ¿,¿w¿¨¿∞¿≤¿≥¿¿(¿)¿N¿O¿[¿™¿Ω¿¡¿√¿ƒ¿3¿Ä¿Å¿¶¿À¿Ã¿ÿ¿¿T¿X¿Z¿[¿—¿#¿$¿I¿n¿o¿{¿¥¿ÿ¿¿¿"¿e¿i¿k¿l¿Â¿¿¿C¿D¿P¿â¿≠¿„¿Ò¿˜¿ 0¿ 4¿ 6¿ 7¿ î¿ ’¿!¿!¿!C¿!o¿!p¿!|¿!£¿!“¿!ˇ¿"¿"!¿""¿"Q¿"ª¿#¿#X¿#†¿$¿$¿$¿$√¿%¿%U¿%¬¿%»¿%Ã¿%Õ¿%Ÿ¿&¿&]¿&î¿&¬¿&Ó¿&Ù¿'>¿'i¿'|¿'Ä¿'Å¿'∏¿'È¿'ı¿(:¿(|¿(®¿(Û¿(˘¿)#¿)j¿)p¿)õ¿)Æ¿)≤¿)≥¿)Ô¿*%¿*1¿*Ä¿*«¿*Û¿+>¿+D¿+n¿+µ¿+ª¿+Ê¿+˘¿+˝¿+˛¿,
¿,N¿,î¿,∏¿,⁄¿-	¿-6¿-I¿-M¿-N¿-Z¿-®¿-‚¿.!¿..¿.o¿.u¿.®¿.¨¿.≠¿.π¿.Ã¿.¿/¿/'¿/+¿/,¿/8¿/ó¿/±¿/‡¿0¿08¿0e¿0ì¿0ª¿0‡¿1¿1D¿1m¿1ó¿1∆¿1’¿2¿2J¿2z¿2®¿2–¿2÷¿3¿3¿3¿3*¿3]¿3π¿4¿4M¿4V¿4Ç¿4∑¿4ø¿4˙¿5 ¿5`¿5ª¿5˙¿6¿61¿6f¿6n¿6©¿6Ø¿6≥¿6¥¿6¿¿6‡¿7¿75¿7^¿7õ¿7¶¿7Ø¿7µ¿7Î¿8¿87¿8v¿8Å¿8ä¿8ê¿8œ¿95¿9ù¿9ø¿9√¿9≈¿9∆¿:¿:¿:!¿:r¿:¿¿; ¿;r¿;º¿;Ï¿<¿<P¿<V¿<Z¿<[¿<õ¿<Ã¿<Õ¿=¿=&¿=,¿=z¿= ¿=Â¿=Î¿>1¿>j¿>p¿>µ¿>˜¿>¯¿?=¿?J¿?o¿?p¿?∑¿?ƒ¿?Î¿?Ï¿@¿@2¿@P¿@t¿@u¿@ü¿@ ¿@Ô¿A¿A¿AJ¿AK¿AW¿A{¿A™¿A ¿AÎ¿AÔ¿A¿A¸¿B#¿BL¿Bî¿B¿¿B…¿C¿C$¿C*¿CM¿Cn¿Cr¿Cs¿C∫¿C’¿Cı¿C˘¿C˙¿D¿DF¿Do¿D£¿DŒ¿D‡¿DÍ¿E¿E4¿E<¿E=¿Eò¿EÈ¿F5¿FÅ¿Fª¿FË¿F˜¿G/¿GK¿Gà¿Gì¿Gõ¿G°¿G•¿G¶¿Gƒ¿GË¿H	¿H"¿H(¿HD¿HH¿HI¿Hd¿HΩ¿H˚¿I¿I7¿IR¿Iå¿I¬¿I·¿JF¿J}¿J∂¿K¿KZ¿Ké¿Kò¿K—¿L¿L¿LJ¿Lf¿Lx¿LÄ¿LÅ¿L“¿L¿M=¿Mî¿MÎ¿N¿N"¿Nh¿Ní¿N´¿N±¿NÈ¿O ¿O]¿O∞¿Oˇ¿PM¿Pú¿PÁ¿Q¿QO¿Qp¿Qt¿Qu¿Qß¿R¿R8¿RY¿RÜ¿R´¿R±¿R‡¿S¿S¿SM¿SQ¿SR¿Só¿S§¿Sµ¿S’¿Sı¿S˘¿S˙¿T¿T;¿T}¿Tî¿T∂¿Tª¿Tº¿U	¿U-¿Ul¿Uñ¿Uª¿U‘¿U⁄¿U˛¿V¿V¿V:¿Vl¿Vª¿W¿W	¿W¿W ¿W!¿Wm¿Wç¿Wì¿W≥¿W¿¿X¿X¿XB¿Xt¿Xí¿X¨¿X≥¿XÂ¿Y¿Y¿Y$¿Y]¿Yt¿Yâ¿Yè¿Yæ¿Y¬¿Y√¿Z¿Z¿Z%¿Zo¿Z±¿Z„¿[$¿[™¿\0¿\@¿\F¿\ê¿\µ¿\ª¿\‰¿\Ë¿\È¿]9¿]Å¿]á¿]∆¿]˙¿^¿^u¿^Ü¿^å¿^°¿_¿_¿_¿_Z¿_Å¿_á¿_Æ¿_≤¿_≥¿_ﬁ¿`/¿`}¿`«¿`Ï¿`˙¿a ¿a ¿a$¿a%¿aj¿aw¿a§¿aŒ¿a˙¿b¿b?¿b_¿bÖ¿b±¿b∫¿b¿¿b¡¿bË¿c:¿c^¿cÄ¿câ¿cŸ¿c˚¿d¿d(¿d.¿d/¿dg¿dº¿e¿eM¿eµ¿eÍ¿f%¿f+¿f,¿fL¿fÅ¿f◊¿gP¿gà¿g§¿g…¿gÈ¿h.¿hs¿h~¿hÜ¿hå¿hç¿h√¿i¿iG¿i´¿iﬁ¿j¿j¿j9¿jj¿jº¿k-¿ke¿k¿k¢¿k¿¿l¿lB¿lM¿lU¿l[¿l\¿l•¿lË¿m¿mF¿mè¿mÓ¿nM¿nø¿o¿o[¿oõ¿o¡¿p¿p¿pT¿pZ¿p[¿py¿p†¿p√¿pÈ¿q¿q:¿qZ¿qç¿q•¿q¨¿q∞¿q±¿q¸¿rI¿ró¿r‰¿s3¿sP¿sU¿s•¿s˛¿t3¿t]¿t±¿tŸ¿tﬂ¿t¯¿t¸¿t˝¿u	¿uQ¿uù¿u´¿u±¿u÷¿u˜¿v¿v¿v ¿vq¿vw¿v»¿w¿wZ¿wt¿wú¿w’¿x
¿xP¿xÄ¿x√¿y¿y§¿z?¿zà¿zÀ¿z—¿{¿{<¿{h¿{¶¿{Õ¿{’¿{ˇ¿|;¿|`¿|h¿|v¿||¿|}¿| ¿}¿}¿}U¿}è¿}ï¿}ñ¿}‹¿}›¿~¿~S¿~à¿~‚¿~¿~ˆ¿~˜¿A¿É¿…¿Õ¿Œ¿Ä¿Ä¿Ä=¿Ä}¿Ä¥¿Å¿Å¿Å,¿Å?¿ÅE¿Åu¿ÅØ¿Åÿ¿Åﬁ¿Å˙¿Ç¿Ç%¿Ç)¿Ç*¿Çk¿Ç¶¿Ç´¿Ç˛¿É0¿É5¿Éy¿Éù¿ÉÎ¿É˘¿Éˇ¿ÑM¿Ñ√¿Ñ’¿Ö¿Öä¿Öò¿Öû¿ÖÛ¿ÜF¿Üà¿Üº¿ÜŒ¿Ü÷¿á,¿á2¿á6¿á7¿áh¿áu¿á∏¿áÔ¿à'¿à-¿àQ¿àà¿à©¿à≠¿àÆ¿àÓ¿âô¿â»¿âˇ¿äS¿äñ¿äÔ¿äı¿ã¿ãa¿ãê¿ã…¿å¿åy¿å∑¿åÊ¿å˘¿ç¿ç¿ç¿ç?¿çå¿ç‰¿éB¿éi¿és¿éÆ¿é¬¿éÃ¿è¿èD¿èN¿èä¿è⁄¿ê!¿ê7¿ê¿ê¿ë9¿ëC¿ëg¿ëv¿ë±¿ë˛¿í$¿í.¿í6¿í<¿íe¿íÖ¿íâ¿íä¿í¡¿íÚ¿íˇ¿ìD¿ìm¿ìq¿ìr¿ìÆ¿ì‰¿ìÒ¿î@¿îi¿îm¿în¿î∂¿î√¿ï¿ï>¿ïv¿ï|¿ïü¿ïƒ¿ïÂ¿ïÈ¿ïÍ¿ñ)¿ñ6¿ñê¿ñ‰¿ó¿ó+¿ón¿ó}¿ó—¿óŸ¿óﬂ¿ò:¿òó¿ò∞¿ò‚¿ô9¿ôS¿ô§¿ôÿ¿ô‡¿ôÌ¿ö¿öa¿ö{¿öÃ¿ö¸¿õ¿õ
¿õ!¿õO¿õ\¿õå¿õí¿õ•¿õ©¿õ™¿õÈ¿õˆ¿úV¿ú™¿ú÷¿ù/¿ùù¿ùÒ¿ù˙¿û ¿û[¿û∏¿û◊¿ü	¿ü^¿üê¿ü±¿üœ¿†¿†+¿†w¿†Ü¿†π¿†≈¿†œ¿†˝¿°N¿°|¿°≤¿°–¿¢¿¢,¿¢w¿¢Ü¿¢π¿¢≈¿¢œ¿¢¸¿£*¿£Y¿£_¿£v¿£§¿£±¿£·¿£Á¿£˙¿£˛¿£ˇ¿§"¿§/¿§}¿§∑¿•0¿•6¿•±¿•µ¿•∂¿•¬¿¶¿¶M¿¶ã¿¶∆¿¶Ï¿¶Ú¿ß(¿ßN¿ßo¿ßâ¿ß∏¿ßÂ¿®¿®`¿®Ö¿®±¿®ˆ¿©¿©K¿©è¿©π¿©Â¿™+¿™Z¿™Ü¿™÷¿´¿´:¿´ï¿´—¿´¸¿¨]¿¨c¿¨ä¿¨™¿¨Ω¿¨¡¿¨¬¿¨Œ¿¨·¿≠¿≠Z¿≠`¿≠à¿≠∞¿≠≈¿≠…¿≠ ¿Æ¿Æ¿Æl¿Æ≠¿Æ≥¿Ø¿Ø¿Ø$¿ØV¿ØW¿Øñ¿Øú¿ØÎ¿∞#¿∞0¿∞è¿∞ƒ¿∞»¿∞…¿±¿±¿±\¿±©¿±˚¿≤D¿≤|¿≤Ç¿≤—¿≥"¿≥/¿≥â¿≥¿¥¿¥+¿¥H¿¥†¿¥”¿µ*¿µG¿µj¿µç¿µ©¿µÀ¿µÁ¿∂¿∂3¿∂Z¿∂~¿∂ö¿∂¥¿∂„¿∂Ô¿∑¿∑?¿∑[¿∑á¿∑´¿∑≥¿∑π¿∑∫¿∑‘¿∑˜¿∏¿∏ ¿∏1¿∏\¿∏i¿∏ñ¿∏ú¿∏º¿π¿πX¿π¶¿π—¿π’¿π÷¿∫$¿∫j¿∫p¿∫∑¿ª¿ªH¿ª§¿ª¥¿ª«¿º'¿º<¿ºD¿º¶¿ºπ¿º√¿ºÂ¿Ω2¿ΩÇ¿Ω¡¿æ¿æ)¿æv¿æ•¿æ¨¿ø ¿ø&¿ø∫¿¿O¿¿∞¿¿Ê¿¡¿¡V¿¡w¿¡∞¿¡Í¿¬"¿¬D¿¬K¿¬^¿¬ê¿¬‡¿√¿√V¿√|¿√“¿ƒ¿ƒ¿ƒ`¿ƒÑ¿ƒã¿ƒØ¿ƒ‰¿≈$¿≈a¿≈µ¿∆¿∆;¿∆]¿∆É¿∆¶¿∆◊¿∆˙¿«¿«7¿«f¿«°¿«‘¿«Á¿»¿»¿»*¿»Q¿»s¿»é¿»Ω¿»„¿…¿…)¿…F¿…a¿…m¿…u¿…{¿…å¿…∑¿…ƒ¿…Ò¿…˜¿ ¿ 0¿ 4¿ 6¿ 7¿ É¿ †¿ §¿ ≤¿ ∂¿À ¿À¿ÀU¿Àm¿Àú¿Àü   Ä≠/// @docImport 'package:flutter/material.dart';
/// @docImport 'package:flutter_test/flutter_test.dart';
///
/// @docImport 'editable_text.dart';
/// @docImport 'text.dart';Å]  År  Åá  Å±  ÅŸ  Ç  Ç+  ÇS  ÇÜ  Çù  Ç≤  Ç⁄  ÇÔ  É  É'  É@  É`  Éy  Éî  É´  É‚  Ñ  Ñ)  ÑG    
Üï≠°}ö·/// A widget that introduces an area for user selections.
///
/// Flutter widgets are not selectable by default. Wrapping a widget subtree
/// with a [SelectableRegion] widget enables selection within that subtree (for
/// example, [Text] widgets automatically look for selectable regions to enable
/// selection). The wrapped subtree can be selected by users using mouse or
/// touch gestures, e.g. users can select widgets by holding the mouse
/// left-click and dragging across widgets, or they can use long press gestures
/// to select words on touch devices.
///
/// A [SelectableRegion] widget requires configuration; in particular specific
/// [selectionControls] must be provided.
///
/// The [SelectionArea] widget from the [material] library configures a
/// [SelectableRegion] in a platform-specific manner (e.g. using a Material
/// toolbar on Android, a Cupertino toolbar on iOS), and it may therefore be
/// simpler to use that widget rather than using [SelectableRegion] directly.
///
/// ## An overview of the selection system.
///
/// Every [Selectable] under the [SelectableRegion] can be selected. They form a
/// selection tree structure to handle the selection.
///
/// The [SelectableRegion] is a wrapper over [SelectionContainer]. It listens to
/// user gestures and sends corresponding [SelectionEvent]s to the
/// [SelectionContainer] it creates.
///
/// A [SelectionContainer] is a single [Selectable] that handles
/// [SelectionEvent]s on behalf of child [Selectable]s in the subtree. It
/// creates a [SelectionRegistrarScope] with its [SelectionContainer.delegate]
/// to collect child [Selectable]s and sends the [SelectionEvent]s it receives
/// from the parent [SelectionRegistrar] to the appropriate child [Selectable]s.
/// It creates an abstraction for the parent [SelectionRegistrar] as if it is
/// interacting with a single [Selectable].
///
/// The [SelectionContainer] created by [SelectableRegion] is the root node of a
/// selection tree. Each non-leaf node in the tree is a [SelectionContainer],
/// and the leaf node is a leaf widget whose render object implements
/// [Selectable]. They are connected through [SelectionRegistrarScope]s created
/// by [SelectionContainer]s.
///
/// Both [SelectionContainer]s and the leaf [Selectable]s need to register
/// themselves to the [SelectionRegistrar] from the
/// [SelectionContainer.maybeOf] if they want to participate in the
/// selection.
///
/// An example selection tree will look like:
///
/// {@tool snippet}
///
/// ```dart
/// MaterialApp(
///   home: SelectableRegion(
///     selectionControls: materialTextSelectionControls,
///     focusNode: _focusNode, // initialized to FocusNode()
///     child: Scaffold(
///       appBar: AppBar(title: const Text('Flutter Code Sample')),
///       body: ListView(
///         children: const <Widget>[
///           Text('Item 0', style: TextStyle(fontSize: 50.0)),
///           Text('Item 1', style: TextStyle(fontSize: 50.0)),
///         ],
///       ),
///     ),
///   ),
/// )
/// ```
/// {@end-tool}
///
///
///               SelectionContainer
///               (SelectableRegion)
///                  /         \
///                 /           \
///                /             \
///           Selectable          \
///      ("Flutter Code Sample")   \
///                                 \
///                          SelectionContainer
///                              (ListView)
///                              /       \
///                             /         \
///                            /           \
///                     Selectable        Selectable
///                     ("Item 0")         ("Item 1")
///
///
/// ## Making a widget selectable
///
/// Some leaf widgets, such as [Text], have all of the selection logic wired up
/// automatically and can be selected as long as they are under a
/// [SelectableRegion].
///
/// To make a custom selectable widget, its render object needs to mix in
/// [Selectable] and implement the required APIs to handle [SelectionEvent]s
/// as well as paint appropriate selection highlights.
///
/// The render object also needs to register itself to a [SelectionRegistrar].
/// For the most cases, one can use [SelectionRegistrant] to auto-register
/// itself with the register returned from [SelectionContainer.maybeOf] as
/// seen in the example below.
///
/// {@tool dartpad}
/// This sample demonstrates how to create an adapter widget that makes any
/// child widget selectable.
///
/// ** See code in examples/api/lib/material/selectable_region/selectable_region.0.dart **
/// {@end-tool}
///
/// ## Complex layout
///
/// By default, the screen order is used as the selection order. If a group of
/// [Selectable]s needs to select differently, consider wrapping them with a
/// [SelectionContainer] to customize its selection behavior.
///
/// {@tool dartpad}
/// This sample demonstrates how to create a [SelectionContainer] that only
/// allows selecting everything or nothing with no partial selection.
///
/// ** See code in examples/api/lib/material/selection_container/selection_container.0.dart **
/// {@end-tool}
///
/// In the case where a group of widgets should be excluded from selection under
/// a [SelectableRegion], consider wrapping that group of widgets using
/// [SelectionContainer.disabled].
///
/// {@tool dartpad}
/// This sample demonstrates how to disable selection for a Text in a Column.
///
/// ** See code in examples/api/lib/material/selection_container/selection_container_disabled.0.dart **
/// {@end-tool}
///
/// To create a separate selection system from its parent selection area,
/// wrap part of the subtree with another [SelectableRegion]. The selection of the
/// child selection area can not extend past its subtree, and the selection of
/// the parent selection area can not extend inside the child selection area.
///
/// ## Tests
///
/// In a test, a region can be selected either by faking drag events (e.g. using
/// [WidgetTester.dragFrom]) or by sending intents to a widget inside the region
/// that has been given a [GlobalKey], e.g.:
///
/// ```dart
/// Actions.invoke(key.currentContext!, const SelectAllTextIntent(SelectionChangedCause.keyboard));
/// ```
///
/// See also:
///
///  * [SelectionArea], which creates a [SelectableRegion] with
///    platform-adaptive selection controls.
///  * [SelectableText], which enables selection on a single run of text.
///  * [SelectionHandler], which contains APIs to handle selection events from the
///    [SelectableRegion].
///  * [Selectable], which provides API to participate in the selection system.
///  * [SelectionRegistrar], which [Selectable] needs to subscribe to receive
///    selection events.
///  * [SelectionContainer], which collects selectable widgets in the subtree
///    and provides api to dispatch selection event to the collected widget. °©Å≠ ¢S¢cÄõ/// Create a new [SelectableRegion] widget.
///
/// The [selectionControls] are used for building the selection handles and
/// toolbar for mobile devices.¢j	¢q  ¢y¢  ¢ñ¢•  ¢≥¢¬  ¢ÿ¢Á  ¢ÒA¢˜  £8£>  ££)£*£ZÅè§”ÅI/// The configuration for the magnifier used with selections in this region.
///
/// By default, [SelectableRegion]'s [TextMagnifierConfiguration] is disabled.
/// For a version of [SelectableRegion] that adapts automatically to the
/// current platform, consider [SelectionArea].
///
/// {@macro flutter.widgets.magnifier.intro} §ÓH•-,/// {@macro flutter.widgets.Focus.focusNode} •;ÄÄ•∂g/// The child widget this selection area applies to.
///
/// {@macro flutter.widgets.ProxyWidget.child} •¿{¶)</// {@macro flutter.widgets.EditableText.contextMenuBuilder} ¶@ÅßCÄ‹/// The delegate to build the selection handles and toolbar for mobile
/// devices.
///
/// The [emptyTextSelectionControls] global variable provides a default
/// [TextSelectionControls] implementation with no controls. ßYhßØ-/// Called when the selected content changes.  ß∆ãÉ´WÉK/// Returns the [ContextMenuButtonItem]s representing the buttons in this
/// platform's default selection menu.
///
/// For example, [SelectableRegion] uses this to generate the default buttons
/// for its context menu.
///
/// See also:
///
/// * [SelectableRegionState.contextMenuButtonItems], which gives the
///   [ContextMenuButtonItem]s for a specific SelectableRegion.
/// * [EditableText.getEditableButtonItems], which performs a similar role but
///   for content that is both selectable and editable.
/// * [AdaptiveTextSelectionToolbar], which builds the toolbar itself, and can
///   take a list of [ContextMenuButtonItem]s with
///   [AdaptiveTextSelectionToolbar.buttonItems].
/// * [AdaptiveTextSelectionToolbar.getAdaptiveButtons], which builds the button
///   Widgets for the current platform given [ContextMenuButtonItem]s. ´v2´ò  ´Æ"´À  ´÷'´Û  ¨$¨!   ≥MK≥o   ≥M≥N ≥ú¿ ‚ú≥∆#/// State for a [SelectableRegion].  ¥9Üw¥^ Äû¥∫Ø¥i¥~¥j¥p¥v¥}¥w¥ò¥Ö¥ö¥™¥¡¥´¥ª¥¿¥º¥ﬂ¥»¥·¥Òµ¥ÚµµµµIµµKµ[µ›µ\µ|µ≥µ}µ¥µ‹µµµ∆µªµ»µ◊µÿ∂µ‰∂∂∂î∂∂>∂f∂?∂g∂ì∂h∂y∂n∂{∂ä∂ã∂ª∂õ∂Ω∂Õ∑9∂Œ∂Ó∑∂Ô∑∑8∑∑"∑∑$∑3∑4∑`∑@∑b∑r∑Ë∑s∑ò∑π∑ô∑∫∑Á∑ª∑Ã∑¡∑Œ∑›∑ﬁ∏∑Ô∏∏(∏†∏)∏N∏v∏O∏w∏ü∏x∏â∏~∏ã∏ö∏õ∏«∏ß∏…∏ŸπJ∏⁄∏ˇπ π π!πIπ"π3π(π5πDπEπ~πQπÄπêπÓπëπππÁπ∫πËπÌπÈ∫πı∫∫.∫™∫/∫T∫|∫U∫}∫©∫~∫è∫Ñ∫ë∫†∫°∫µb∫ﬂ ªª∫ıª∫ˆ∫¸ª#ª-  ªB3ªR ªjªsªtªy1ªâ ªüª®ª©ªÆ/ªæ ª“ª€ª‹ª·bº
 ººAºBºóº£  ΩsΩÄ  Ωî%Ω•  æúÄ°øT/// The text processing service used to retrieve the native text processing actions.ø"ø;ø<øBÄíø©F/// The list of native text processing actions provided by the engine.ø“ø”øøø—ø¿¿ NÄ®¿ NùÄá/// Whether the Shift key was pressed when the most recent [PointerDownEvent]
/// was tracked by the [BaseTapAndDragGestureRecognizer].¿ NØ¿ O%¿ O  ¿ O¶)¿ Oπ  ¿ iı¿ i˝  ¿ ús¿ ú{  ¿ ú€-¿ ú‡ ¿ ù¿ §Û¿ §˚  ¿ •a/¿ •f ¿ •ã¿ ´ô-¿ ´•  ¿ ´ +¿ ´÷  ¿ Ï¿ Ï  ¿ “&¿ ⁄  ¿Ä∆¿¨ ¿¿¿%¿ã¿+¿T¿è¿ê¿ø¿≈¿’¿ﬂ¿⁄¿÷¿‹º≥Äººº    ΩæÄ⁄ærÄÇ/// The [SelectionOverlay] that is currently visible on the screen.
///
/// Can be null if there is no visible [SelectionOverlay].  æGæH¿ úîD¿ úù    ¿ •H¿ •    ¿ ÈHÇÀ¿ Í9Äƒ/// {@macro flutter.widgets.EditableText.getAnchors}
///
/// See also:
///
///  * [contextMenuButtonItems], which provides the [ContextMenuButtonItem]s
///    for the default context menu buttons.   ¿ Ù€â¶¿ ¯ÅÉe/// Returns the [ContextMenuButtonItem]s representing the buttons in this
/// platform's default selection menu.
///
/// See also:
///
/// * [SelectableRegion.getSelectableButtonItems], which performs a similar role,
///   but for any selectable text, not just specifically SelectableRegion.
/// * [EditableTextState.contextMenuButtonItems], which performs a similar role
///   but for content that is not just selectable but also editable.
/// * [contextMenuAnchors], which provides the anchor points for the default
///   context menu.
/// * [AdaptiveTextSelectionToolbar], which builds the toolbar itself, and can
///   take a list of [ContextMenuButtonItem]s with
///   [AdaptiveTextSelectionToolbar.buttonItems].
/// * [AdaptiveTextSelectionToolbar.getAdaptiveButtons], which builds the
///   button Widgets for the current platform given [ContextMenuButtonItem]s.   ¿ ˛ÖÇŒ¿ ˛•    ¿WÄ£¿ü:/// The line height at the start of the current selection.   ¿˛Äù¿D8/// The line height at the end of the current selection.   ¿üÉ≠¿L/// Returns the local coordinates of the endpoints of the current selection.   ¿Äû¿ß   ¿¿¿(¿é¿.¿W¿í¿ì¿øÄ†¿I   ¿ø¿¿¿ ¿0¿–¿˘¿4¿5=øŸÇøÍ   øŸø⁄¿ A‰Å¿ Bgq/// Query the engine to initialize the list of text processing actions to show
/// in the text selection toolbar.   ¿ BˇÇÒ¿ C   ¿ Bˇ¿ C ¿ EÙÅá¿ F  ¿ F¿ F'  ¿ EÙ¿ Eı¿ GÄù¿ Gâ ¿ Gö¿ Gö¿ G¨¿ G∑   ¿ H ÉÄ¿ H%    ¿ K§ÇT¿ K©    ¿ O‘Åá¿ O‡  ¿ O¯#¿ P   ¿ Sàƒ¿ S  ¿ S'¿ S,   ¿ [ É@¿ [œ    ¿ _Äﬁ¿ _    ¿ _:¿ _ı    ¿ `.â√¿ `3    ¿ jäÀ¿ j  ¿ j5¿ jI   ¿ t‡Å≤¿ tÂ  ¿ t˚¿ u   ¿ vñä¿ võ  ¿ v≤¿ v»   ¿ Ä°Ñ+¿ Ä¶  ¿ Ä∫¿ ÄÕ   ¿ Ñ–à_¿ Ñ’  ¿ ÑÁ¿ Ñ˘   ¿ ç3Å	¿ ç8    ¿ é@Ç*¿ éE  ¿ é`¿ éw   ¿ ênÄÕ¿ ês  ¿ êì"¿ êØ   ¿ ë?ÄÎ¿ ëD  ¿ ë]¿ ër   ¿ í.Åï¿ í3  ¿ íQ¿ íb   ¿ ì«àÅ¿ ìÃ  ¿ ì‚¿ ìÚ   ¿ ùÖB¿ û2Å/// Sends end [SelectionEdgeUpdateEvent] to the selectable subtree.
///
/// If the selectable subtree returns a [SelectionResult.pending], this method
/// continues to send [SelectionEdgeUpdateEvent]s every frame until the result
/// is not pending or users end their gestures. ¿ ûR ¿ ûd   ¿ ¢RÇ!¿ ¢W  ¿ ¢e¿ ¢u   ¿ §wx¿ §|    ¿ •ïÖY¿ ¶ºÅ/// Sends start [SelectionEdgeUpdateEvent] to the selectable subtree.
///
/// If the selectable subtree returns a [SelectionResult.pending], this method
/// continues to send [SelectionEdgeUpdateEvent]s every frame until the result
/// is not pending or users end their gestures. ¿ ¶ﬁ ¿ ¶   ¿ ™Ú|¿ ™˜    ¿ ´˙ÇT¿ ´ˇ  ¿ ¨$¿ ¨6   ¿ ÆRÇ≠¿ ÆW  ¿ Æ}¿ Æê   ¿ ±ÇI¿ ±  ¿ ±+¿ ±=   ¿ ≥PÇù¿ ≥U  ¿ ≥y¿ ≥å   ¿ µÒÉ^¿ µˇ  ¿ ∂¿ ∂  ¿ ∂4¿ ∂D   ¿ πSÖ_¿ πX    ¿ æ∂ÇÄ¿ æª    ¿ ¡:Åõ¿ ¡¿x/// Shows the selection handles.
///
/// Returns true if the handles are shown, false if the handles can't be
/// shown.   ¿ ¬ŸÖ…¿ ƒ\Åm/// Shows the text selection toolbar.
///
/// If the parameter `location` is set, the toolbar will be shown at the
/// location. Otherwise, the toolbar location will be calculated based on the
/// handles' locations. The `location` is in the coordinates system of the
/// [Overlay].
///
/// Returns true if the toolbar is shown, false if the toolbar can't be shown. ¿ ƒj¿ ƒs   ¿ »¶á√¿ Œ∂ÖŒ/// Sets or updates selection end edge to the `offset` location.
///
/// A selection always contains a select start edge and selection end edge.
/// They can be created by calling both [_selectStartTo] and [_selectEndTo], or
/// use other selection APIs, such as [_selectWordAt] or [selectAll].
///
/// This method sets or updates the selection end edge by sending
/// [SelectionEdgeUpdateEvent]s to the child [Selectable]s.
///
/// If `continuous` is set to true and the update causes scrolling, the
/// method will continue sending the same [SelectionEdgeUpdateEvent]s to the
/// child [Selectable]s every frame until the scrolling finishes or a
/// [_finalizeSelection] is called.
///
/// The `continuous` argument defaults to false.
///
/// The `offset` is in global coordinates.
///
/// Provide the `textGranularity` if the selection should not move by the default
/// [TextGranularity.character]. Only [TextGranularity.character] and
/// [TextGranularity.word] are currently supported.
///
/// See also:
///  * [_selectStartTo], which sets or updates selection start edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [clearSelection], which clears the ongoing selection.
///  * [_selectWordAt], which selects a whole word at the location.
///  * [_selectParagraphAt], which selects an entire paragraph at the location.
///  * [_collapseSelectionAt], which collapses the selection at the location.
///  * [selectAll], which selects the entire content. ¿ Œƒ¿ Œ’  ¿ Œ‹¿ Œ‚  ¿ Œı ¿ œ  ¿ ŒÓ¿ –máÕ¿ ÷}ÖŒ/// Sets or updates selection start edge to the `offset` location.
///
/// A selection always contains a select start edge and selection end edge.
/// They can be created by calling both [_selectStartTo] and [_selectEndTo], or
/// use other selection APIs, such as [_selectWordAt] or [selectAll].
///
/// This method sets or updates the selection start edge by sending
/// [SelectionEdgeUpdateEvent]s to the child [Selectable]s.
///
/// If `continuous` is set to true and the update causes scrolling, the
/// method will continue sending the same [SelectionEdgeUpdateEvent]s to the
/// child [Selectable]s every frame until the scrolling finishes or a
/// [_finalizeSelection] is called.
///
/// The `continuous` argument defaults to false.
///
/// The `offset` is in global coordinates.
///
/// Provide the `textGranularity` if the selection should not move by the default
/// [TextGranularity.character]. Only [TextGranularity.character] and
/// [TextGranularity.word] are currently supported.
///
/// See also:
///  * [_selectEndTo], which sets or updates selection end edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [clearSelection], which clears the ongoing selection.
///  * [_selectWordAt], which selects a whole word at the location.
///  * [_selectParagraphAt], which selects an entire paragraph at the location.
///  * [_collapseSelectionAt], which collapses the selection at the location.
///  * [selectAll], which selects the entire content. ¿ ÷ç¿ ÷û  ¿ ÷•¿ ÷´  ¿ ÷æ ¿ ÷–  ¿ ÷∑¿ ÿ>Ç‰¿ ⁄®ÇL/// Collapses the selection at the given `offset` location.
///
/// The `offset` is in global coordinates.
///
/// See also:
///  * [_selectStartTo], which sets or updates selection start edge.
///  * [_selectEndTo], which sets or updates selection end edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [clearSelection], which clears the ongoing selection.
///  * [_selectWordAt], which selects a whole word at the location.
///  * [_selectParagraphAt], which selects an entire paragraph at the location.
///  * [selectAll], which selects the entire content. ¿ ⁄æ¿ ⁄œ   ¿ €&Ñ£¿ ﬁ˙É®/// Selects a whole word at the `offset` location.
///
/// The `offset` is in global coordinates.
///
/// If the whole word is already in the current selection, selection won't
/// change. One call [clearSelection] first if the selection needs to be
/// updated even if the word is already covered by the current selection.
///
/// One can also use [_selectEndTo] or [_selectStartTo] to adjust the selection
/// edges after calling this method.
///
/// See also:
///  * [_selectStartTo], which sets or updates selection start edge.
///  * [_selectEndTo], which sets or updates selection end edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [clearSelection], which clears the ongoing selection.
///  * [_collapseSelectionAt], which collapses the selection at the location.
///  * [_selectParagraphAt], which selects an entire paragraph at the location.
///  * [selectAll], which selects the entire content. ¿ ﬂ	¿ ﬂ   ¿ ﬂÕÑ\¿ „PÉY/// Selects the entire paragraph at the `offset` location.
///
/// The `offset` is in global coordinates.
///
/// If the paragraph is already in the current selection, selection won't
/// change. One call [clearSelection] first if the selection needs to be
/// updated even if the paragraph is already covered by the current selection.
///
/// One can also use [_selectEndTo] or [_selectStartTo] to adjust the selection
/// edges after calling this method.
///
/// See also:
///  * [_selectStartTo], which sets or updates selection start edge.
///  * [_selectEndTo], which sets or updates selection end edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [clearSelection], which clear the ongoing selection.
///  * [_selectWordAt], which selects a whole word at the location.
///  * [selectAll], which selects the entire content. ¿ „d¿ „u   ¿ ‰-Ç&¿ ÂÒÅ¨/// Stops any ongoing selection updates.
///
/// This method is different from [clearSelection] that it does not remove
/// the current selection. It only stops the continuous updates.
///
/// A continuous update can happen as result of calling [_selectStartTo] or
/// [_selectEndTo] with `continuous` sets to true which causes a [Selectable]
/// to scroll. Calling this method will stop the update as well as the
/// scrolling.   ¿ ÊWÅ0¿ Êù>/// Removes the ongoing selection for this [SelectableRegion].   ¿ ÁãÄ”¿ Áò    ¿ ËbÄ‚¿ Ëo    ¿ Ï7Ç÷¿ Ï<  ¿ Ï^¿ Ïd   ¿ ÔÅΩ¿ Ô  ¿ Ô1¿ ÔB  ¿ ÔN¿ ÔT   ¿ ˝É±¿ Ò  ¿ Ò ¿ Ò&   ¿cÄ®¿t  ¿Å¿á  ¿c¿d¿î¿	Å*¿	   ¿	+¿	C  ¿	¿	¿
=ÄŸ¿
√  ¿
—¿
Ë  ¿
=¿
>¿
H¿
Æ¿
N¿
w¿
≤¿
≥¿ÂÄ‚¿k  ¿y¿á  ¿Â¿Ê¿¿V¿ˆ¿¿Z¿[¿ÀÄ»¿Q  ¿^¿u  ¿À¿Ã¿÷¿<¿‹¿¿@¿A¿óÅ¿  ¿8¿J  ¿P¿g  ¿ó¿ò¿¢¿¿®¿—¿¿¿°Ä”¿/  ¿9¿P  ¿°¿¢¿¨¿¿≤¿€¿¿¿ùÄı¿Æ  ¿≤¿æ  ¿ù¿û¿ñÄ€¿ß  ¿Æ¿∫  ¿ñ¿ó¿uÅØ¿Ü   ¿u¿v¿(É¿;  ¿A¿O  ¿(¿) ¿:ÇT¿NÅ/// An action that does not override any [Action.overridable] in the subtree.
///
/// If this action is invoked by an [Action.overridable], it will immediately
/// invoke the [Action.overridable] and do nothing else. Otherwise, it will call
/// [invokeAction].¿a¿a   ¿ê8¿ò  ¿•¿®  ¿∞¿ø   ¿ÃÄ¿¿‡  ¿Á¿Í  ¿Ú¿  ¿Ã¿Õ ¿êÅ!¿ñ  ¿€ ¿€¿Î ¿Ï
¿Ú   ¿¸!¿   ¿"Äç¿3  ¿@¿U  ¿]¿l  ¿"¿# ¿≥Å¿π  ¿! ¿¿ ¿
¿!   ¿+!¿G   ¿Qo¿b  ¿o¿à  ¿ê¿ü  ¿Q¿R ¿ƒÅï¿  ¿Î&¿Î¿5J ¿5¿U ¿V
¿\  ¿c¿r   ¿É!¿ü  ¿®!¿æ   ¿ŒÄâ¿ﬂ  ¿Ï¿Ô  ¿˜¿  ¿Œ¿œ ¿[Ç¿a ¿á(¿á¿”O ¿”¿¯ ¿˘
¿ˇ  ¿¿   ¿&!¿B  ¿K!¿a   ¿qÄ˜¿Ç  ¿è¿í  ¿ö¿©  ¿q¿r ¿lÅ…¿r ¿õ(¿õ¿Á5 ¿Á¿ ¿
¿   ¿ !¿<   ¿FÄÌ¿W  ¿d¿g  ¿o¿~  ¿F¿G ¿ 7ôç¿ =   ¿ ñ=¿ ¨ ¿ —¿ “¿ ≈¿ –¿ ∆¿ ◊;¿ Ì ¿!¿!¿!¿!¿!¿!*¿!  ¿!E(¿!M   ¿!rÄÆ¿!É  ¿!ä¿!ñ  ¿!r¿!s¿"$Éß¿")    ¿%œÅ∞¿%Î  ¿%˚¿&  ¿%œ¿%–¿'ÉÇ.¿(c/// Selects a word in a [Selectable] at the location
/// [SelectWordSelectionEvent.globalPosition]. ¿(¿(2  ¿'Î¿'Ï¿)µÇG¿*Cm/// Selects a paragraph in a [Selectable] at the location
/// [SelectParagraphSelectionEvent.globalPosition]. ¿*Y#¿*x  ¿*'¿*(¿, ÅL¿,  ¿,1¿,F  ¿, ¿,¿-PÅ[¿-l  ¿-Ü¿-†  ¿-P¿-Q¿.Ø{¿.¿   ¿.Ø¿.∞¿/.ÉÓ¿/J  ¿/h¿/t  ¿/¿/è  ¿/.¿//¿3 Éí¿31  ¿3D¿3P  ¿3 ¿3!¿6∂É¿6«   ¿6∂¿6∑ ¿9∆¿ êo¿;Å9/// A delegate that handles events and updates for multiple [Selectable]
/// children.
///
/// Updates are optimized by tracking which [Selectable]s reside on the edges of
/// a selection. Subclasses should implement [ensureChildUpdated] to describe
/// how a [Selectable] should behave when added to a selection. ¿;tÄÂ ¿;æ¿;ÁG/// Creates an instance of [MultiSelectableSelectionContainerDelegate].  ¿<]m¿<Æ=/// Gets the list of [Selectable]s this delegate is managing.¿<»¿<…¿<º¿<«¿<Ω¿<œÇ&¿>ÀÅ—/// The number of additional pixels added to the selection handle drawable
/// area.
///
/// Selection handles that are outside of the drawable area will be hidden.
/// That logic prevents handles that get scrolled off the viewport from being
/// drawn on the screen.
///
/// The drawable area = current rectangle of [SelectionContainer] +
/// _kSelectionHandleDrawableAreaPadding on each side.
///
/// This was an eyeballed value to create smooth user experiences.¿>Ú¿>˙s¿?PB/// The current [Selectable] that contains the selection end edge.¿??¿?@¿?k¿?l¿?rw¿? D/// The current [Selectable] that contains the selection start edge.¿?π¿?∫¿?Á¿?Ë¿?Ó¿?˘  ¿@"¿@  ¿@4¿@?  ¿@R ¿@^  ¿@w&¿@| ¿@ò¿@°'¿@¶ ¿@√¿@Ã!¿@— ¿@Ë¿@Ò+¿A ¿A¿A¿A¿A¿A¿A!'¿A& ¿AC¿T=|¿TO ¿Td¿Tj¿T{¿T∏¿Tã¿TÅ¿Tç¿Tû¿Tò¿T†¿TØ¿T∞¿S¸>¿T   ¿S¸¿S˝¿W#Äﬁ¿W›Äâ/// The compare function this delegate used for determining the selection
/// order of the selectables.
///
/// Defaults to screen order.  ¿Wµ¿W∂"¿AMÄ°¿A^  ¿Ab¿An  ¿AM¿AN¿AÚÅ¿B  ¿B
¿B  ¿AÚ¿AÛ¿CuÄÉ¿C¡D/// Notifies this delegate that layout of the container has changed.   ¿C¸É®¿D    ¿G®Äü¿G≠    ¿HKâ(¿HP    ¿QwÅŸ¿Q|  ¿Qé¿Qö   ¿STÄ§¿SºB/// Called when this delegate finishes updating the [Selectable]s.  ¿Sô¿Sö¿S¶¿Sß¿TæÅC¿UJ/// Updates the [value] in this class and notifies listeners if necessary.   ¿VÅ¿V  ¿V!¿V-   ¿XÅº¿X  ¿X$¿X0  ¿X2¿X>   ¿Y≈É"¿ZæÄ„/// Compares two rectangles in the screen order solely by their vertical
/// positions.
///
/// Returns positive if a is lower, negative if a is higher, 0 if their
/// order can't be determine solely by their vertical position. ¿Z—¿Z◊  ¿ZŸ¿Zﬂ   ¿\ÎÇ∆¿]”Ä‘/// Compares two rectangles in the screen order by their horizontal positions
/// assuming one of the rectangles enclose the other rect vertically.
///
/// Returns positive if a is lower, negative if a is higher. ¿]Ë¿]Ó  ¿]¿]ˆ   ¿_µÅn¿_∫    ¿a'êà¿aãB/// Gets the combined [SelectionGeometry] for child [Selectable]s.  ¿al¿am¿sßÅT¿s´  ¿sŸ¿sﬁ  ¿sÎ¿s   ¿tˇÅ¿u  ¿u!¿u-  ¿u9¿uE  ¿tˇ¿u ¿v"â™¿w{ÅG/// Pushes both handle layers to the selectables that contain selection edges.
///
/// This method needs to be called every time the selectables that contain the
/// selection edges change, i.e. [currentSelectionStartIndex] or
/// [currentSelectionEndIndex] changes. Otherwise, the handle may be painted
/// in the wrong place.   ¿–ÇX¿Ä&6/// Copies the selected contents of all [Selectable]s.  ¿Ä	¿Ä
¿É{É∫¿ÉÄ    ¿á9Ås¿áá./// Selects all contents of all [Selectable]s. ¿áó¿á∞  ¿áj¿ák¿à∞âÿ¿à¿  ¿à÷¿àÊ   ¿íåÄ‰¿ìc/// Selects a word in a [Selectable] at the location
/// [SelectWordSelectionEvent.globalPosition]. ¿ì"¿ì<  ¿íÙ¿íı¿ìtÄ¯¿îm/// Selects a paragraph in a [Selectable] at the location
/// [SelectParagraphSelectionEvent.globalPosition]. ¿î#¿î8  ¿ìÊ¿ìÁ¿îpÅx¿î’E/// Removes the selection of all [Selectable]s this delegate manages. ¿îÍ¿îˇ  ¿î∏¿îπ¿ïÏÖº¿ñH</// Extend current selection in a certain [TextGranularity]. ¿ñh$¿ñà  ¿ñ+¿ñ,¿õ¨àQ¿ú</// Extend current selection in a certain [TextGranularity]. ¿ú+'¿úN  ¿õÎ¿õÏ¿§Å≥¿§A /// Updates the selection edges. ¿§[¿§u  ¿§$¿§%¿•∏á¿•‘  ¿•Î¿•˚  ¿•∏¿•π¿¨ƒÅ¿¨’   ¿¨ƒ¿¨≈¿≠ÃÅâ¿Ø+Å>/// Ensures the [Selectable] child has received up to date selection event.
///
/// This method is called when a new [Selectable] is added to the delegate,
/// and its screen location falls into the previous selection.
///
/// Subclasses are responsible for updating the selection of this newly added
/// [Selectable]. ¿Ø>¿ØJ  ¿Ø¿Ø¿ØYÅn¿∞BÄ√/// Dispatches a selection event to a specific [Selectable].
///
/// Override this method if subclasses need to generate additional events or
/// treatments prior to sending the [SelectionEvent]. ¿∞`¿∞l  ¿∞w¿∞á  ¿∞%¿∞&¿∞Àâ	¿≥AÇO/// Initializes the selection of the selectable children.
///
/// The goal is to find the selectable child that contains the selection edge.
/// Returns [SelectionResult.end] if the selection edge ends on any of the
/// children. Otherwise, it returns [SelectionResult.previous] if the selection
/// does not reach any of its children. Returns [SelectionResult.next]
/// if the selection reaches the end of its children.
///
/// Ideally, this method should only be called twice at the beginning of the
/// drag selection, once for start edge update event, once for end edge update
/// event. ¿≥P¿≥j  ¿≥q¿≥Ä   ¿πÿê[¿ªZÅe/// Adjusts the selection based on the drag selection update event if there
/// is already a selectable child that contains the selection edge.
///
/// This method starts by sending the selection event to the current
/// selectable that contains the selection edge, and finds forward or backward
/// if that selectable no longer contains the selection edge. ¿ªk¿ªÖ  ¿ªå¿ªõ           ¿ 7Åg¿ÀÄﬂ/// Signature for a widget builder that builds a context menu for the given
/// [SelectableRegionState].
///
/// See also:
///
///  * [EditableTextContextMenuBuilder], which performs the same role for
///    [EditableText].  ¿ÀW¿Àe  ¿Ào+¿ÀÜ    ÑÕÄ¨ÑÍ ÖÖxÖÖÖ	ÖÖ0Ö1Ö:ÖKÖLÖVÖgÖhÜY9Üf Üè   ÄÆ  package:flutter/material.dart  Äﬁ  &package:flutter_test/flutter_test.dart  Å  editable_text.dart  Å@  	text.dart ãS <ÄÜÄ§Ä•Ä’ÅÅÅ7ÅSÅ\Å]ÅrÅÜÅáÅ±ÅŸÇÇ+ÇSÇÖÇÜÇùÇ≤Ç⁄ÇÔÉÉ'É@É`ÉyÉîÉ´É‚ÑÑ)ÑGÑuÑvÑéÑµÑÃÑÕÖÖ8ÖTÖxÖ{Ö|Ö ÜÜYÜîÜïÜœÜ”á ápá¿ààSà£à…àÕââFâJâíâﬁä+äyä}ä©ä≠ä˛ã4ã8ãâãÃãÒãıå6åÄåœççoçΩçÈçÌé>éåé“è"è@èDèèè√êêêêHêLê`êdêpêÅêüêŸëë/ësëçë≥ëÛí3íBíOíZícíiíqíÅíÖíâíÆí”íÙìì9ì]ìÇì®ìÿîî/î[îàîΩîÛî˜î˚ïï!ïqï≥ïÀïœññfñùñ°ñó;óÜó•ó©óΩò	ò&ò*òÖòïòôòØò≥ôôOôçôëô•ôÒö7ö;ööö™öÆöˇõGõjõnõÇõ–õ‘ú<úLúPúöúÌù<ùäùéùõùüùûAûnûrû~û‚ûÍûÓû¸ü ü@ümü∑†
†%†u†√†‹°*°w°ß°’°€¢)¢K¢f¢u¢í¢Ø¢‘¢Ì£4£Q£W£X£ß£≠£˛§I§{§Å§∞§Î§Ï••8•9•p•v•ß•Ω•æ•˝¶=¶>¶á¶ñ¶ú¶Êß%ßVßWßáß√ßƒ®®9®?®è®´®±®¡®«©©Q©¢©‹™-™b™ñ™È´2´r´™´“´ˇ¨)¨0¨Ç¨æ≠≠≠b≠}≠ù≠ª≠€≠ÌÆ;ÆçÆ∏Æ¯ØØ#Ø*ØiØjØØ∞
∞∞\∞¢∞µ∞Ÿ∞Ï±±(±T±_±è±Æ±Ã±˘≤≤≤;≤]≤é≤ô≤ ≤È≥≥4≥?≥F≥J≥K≥W≥ô≥õ≥ú≥¿¥7¥Å¥ƒµµ‡∂ó∑<∑Î∏£πMπÒ∫≠∫≤∫≥ªª@ªwª¨ªﬂºEºïº∞º±ΩΩpΩqΩíΩªΩºæææEæZæôæöæÒø?ø@øâø÷ø◊ø„ø¯¿ @¿ @F¿ @i¿ @å¿ @°¿ A¿ AE¿ Aq¿ AÆ¿ A∑¿ Aæ¿ A›¿ A·¿ A‚¿ B3¿ BX¿ Bâ¿ B™¿ B¯¿ B¸¿ B˝¿ C	¿ C*¿ CM¿ Cr¿ Cï¿ C¥¿ C√¿ CÊ¿ D¿ D(¿ DK¿ D[¿ Da¿ Db¿ D≠¿ DÙ¿ E¿ E>¿ EL¿ ER¿ E}¿ E£¿ EÁ¿ EÌ¿ EÒ¿ EÚ¿ E˛¿ F3¿ FY¿ Få¿ FÀ¿ G¿ GK¿ Gj¿ Gr¿ Gx¿ G|¿ G}¿ G«¿ H¿ H¿ H¿ H=¿ Hc¿ Hw¿ Hø¿ H«¿ I¿ Ii¿ Iµ¿ J¿ JQ¿ J£¿ JÛ¿ K¿ K1¿ K9¿ K?¿ KQ¿ Kó¿ Kù¿ K°¿ K¢¿ Kƒ¿ L¿ LD¿ Lª¿ M¿ M
¿ MU¿ M}¿ Mû¿ M´¿ Mœ¿ MÔ¿ Mı¿ M˘¿ M˙¿ N	¿ N
¿ NZ¿ Nñ¿ N∂¿ N∑¿ N˝¿ O¿ O=¿ O>¿ Oç¿ O§¿ O—¿ O“¿ P¿ P@¿ Pd¿ Py¿ P†¿ P≈¿ PÚ¿ Q¿ Q<¿ QR¿ QX¿ Q\¿ Q]¿ Q≠¿ R ¿ RP¿ Rï¿ Rö¿ RÏ¿ S ¿ S7¿ SV¿ S{¿ Sû¿ S¡¿ T$¿ Tr¿ Tæ¿ TÙ¿ U¿ U¿ Ul¿ U¡¿ V¿ VV¿ V®¿ VÒ¿ WÉ¿ W§¿ WÒ¿ XF¿ Xó¿ X‚¿ Y4¿ Y}¿ Z¿ Z.¿ ZO¿ Zr¿ Zø¿ [¿ [g¿ [å¿ [Ω¿ [√¿ [«¿ [»¿ [Ô¿ \g¿ \ì¿ \∞¿ \˛¿ ]¿ ]=¿ ]N¿ ]}¿ ]¨¿ ]„¿ ^¿ ^;¿ ^m¿ ^ô¿ ^ø¿ ^˜¿ _ ¿ _¿ _¿ _¿ _(¿ _k¿ _‘¿ _È¿ _Ì¿ _Ó¿ `
¿ `'¿ `+¿ `,¿ `S¿ `´¿ a¿ ab¿ a¿ b'¿ bD¿ bû¿ b÷¿ bÓ¿ b˚¿ c8¿ cI¿ cà¿ c—¿ d¿ dL¿ dã¿ d…¿ e¿ eG¿ eÖ¿ eø¿ e¸¿ f9¿ fY¿ f¶¿ f›¿ g¿ g5¿ gg¿ gì¿ gπ¿ gÒ¿ g˙¿ h¿ hy¿ hÊ¿ i¿ i)¿ ic¿ iß¿ iﬁ¿ iÁ¿ iÓ¿ iÚ¿ iÛ¿ j¿ jS¿ j~¿ jÀ¿ jŸ¿ k¿ k+¿ kR¿ ky¿ kú¿ kÏ¿ l ¿ l¿ l8¿ l]¿ lÑ¿ lü¿ lÌ¿ m=¿ mä¿ m≥¿ n)¿ nP¿ nå¿ n¢¿ n∞¿ nÚ¿ n¸¿ o
¿ o3¿ oV¿ o≥¿ p¿ pE¿ pZ¿ ph¿ p£¿ pˆ¿ q¿ q"¿ qI¿ qp¿ qï¿ q∫¿ q·¿ r¿ r&¿ r4¿ r]¿ rÑ¿ r´¿ rŒ¿ s ¿ sg¿ s¢¿ s‰¿ sÚ¿ t¿ t<¿ tc¿ t£¿ t≠¿ t≥¿ tŸ¿ t›¿ tﬁ¿ u¿ ug¿ uu¿ uƒ¿ v¿ v!¿ v+¿ vc¿ vi¿ vè¿ vì¿ vî¿ v“¿ w¿ w-¿ w|¿ w«¿ wŸ¿ w„¿ x+¿ x9¿ xb¿ xâ¿ x∞¿ y¿ y9¿ yñ¿ z¿ z¿ z<¿ zµ¿ {¿ {3¿ {k¿ {í¿ {†¿ |¿ |f¿ |Ñ¿ |í¿ |∑¿ |‹¿ }¿ }v¿ }Ä¿ }é¿ }∑¿ }ﬁ¿ ~¿ ~(¿ ~x¿ ~°¿ ~Û¿ m¿ {¿ †¿ ≈¿ Ï¿ Äd¿ Än¿ Ät¿ Äö¿ Äû¿ Äü¿ Ä◊¿ ÅN¿ Ås¿ Åñ¿ Åπ¿ Å⁄¿ Ç,¿ Ç{¿ Çï¿ ÇØ¿ Çπ¿ Çÿ¿ Ç˘¿ ÉG¿ Éñ¿ É∞¿ É∫¿ É€¿ É¸¿ Ñ¿ Ñr¿ ÑÉ¿ Ñâ¿ Ñ£¿ Ñ…¿ ÑÕ¿ ÑŒ¿ Ö¿ ÖÇ¿ ÖÃ¿ Ü¿ Ü_¿ Ü}¿ Üô¿ Ü®¿ Ü¿¿ Ü»¿ Ü÷¿ Ü‹¿ á)¿ á7¿ á`¿ áá¿ áÆ¿ á—¿ áÏ¿ à.¿ àS¿ àx¿ àü¿ àÂ¿ à¯¿ â¿ â¿ â]¿ âÜ¿ â≠¿ â‘¿ â˘¿ äN¿ ä°¿ äø¿ ä›¿ äÎ¿ ã¿ ã3¿ ãÑ¿ ã◊¿ ãı¿ å¿ å(¿ åM¿ åt¿ åΩ¿ å·¿ åˆ¿ ç ¿ ç¿ ç,¿ ç0¿ ç1¿ ç[¿ ç∂¿ çˆ¿ é3¿ é9¿ é=¿ é>¿ éÅ¿ é¶¿ éÀ¿ é˛¿ èI¿ èõ¿ èÍ¿ ê%¿ ê;¿ êA¿ êg¿ êk¿ êl¿ êπ¿ ë¿ ë8¿ ë<¿ ë=¿ ë|¿ ëñ¿ ëº¿ ë–¿ í¿ í!¿ í'¿ í+¿ í,¿ ít¿ íƒ¿ ì¿ ìZ¿ ìã¿ ì†¿ ì®¿ ìÆ¿ ì¿¿ ìƒ¿ ì≈¿ ì¸¿ îP¿ î†¿ î‹¿ ï¿ ï&¿ ïI¿ ïl¿ ïè¿ ï‡¿ ñ ¿ ñ¨¿ ñÌ¿ ó5¿ ó?¿ óW¿ óñ¿ óµ¿ óÙ¿ ò¿ òK¿ òl¿ ò—¿ òÍ¿ ò¸¿ ô¿ ôE¿ ô]¿ ôú¿ ôΩ¿ ô›¿ ôˆ¿ ö¿ ö¿ öc¿ ö£¿ õ/¿ õp¿ õ∏¿ õ¬¿ õ⁄¿ ú¿ ú¿ úE¿ úI¿ úJ¿ úp¿ úq¿ úí¿ úŸ¿ ù
¿ ù¿ ùQ¿ ùW¿ ù®¿ ù˘¿ û+¿ ûw¿ û√¿ ü¿ ü]¿ ü•¿ üÔ¿ ü˝¿ †¿ †0¿ †Ω¿ †Ï¿ °8¿ °i¿ °{¿ °Ö¿ °∑¿ ¢¿ ¢9¿ ¢G¿ ¢M¿ ¢P¿ ¢Q¿ ¢¿ ¢¬¿ ¢Í¿ £¿ £¿ £E¿ £j¿ £É¿ £∑¿ £Ú¿ £¸¿ §¿ §	¿ §,¿ §M¿ §q¿ §t¿ §u¿ §ú¿ § ¿ §Ï¿ §¿ §Ò¿ •¿ •_¿ •í¿ •ì¿ •€¿ •·¿ ¶2¿ ¶É¿ ¶µ¿ ß¿ ßO¿ ßö¿ ßÈ¿ ®1¿ ®¿ ®ç¿ ®ì¿ ®¿¿ ©Q¿ ©Ç¿ ©Œ¿ ™¿ ™¿ ™¿ ™Q¿ ™ù¿ ™◊¿ ™Â¿ ™Î¿ ™Ô¿ ™¿ ´¿ ´I¿ ´k¿ ´o¿ ´p¿ ´ñ¿ ´ó¿ ´»¿ ´˜¿ ´¯¿ ¨@¿ ¨Ç¿ ¨É¿ ¨·¿ ≠(¿ ≠å¿ ≠ç¿ ≠ ¿ ≠Ë¿ Æ¿ Æ%¿ ÆK¿ ÆO¿ ÆP¿ Æö¿ Æı¿ Ø?¿ Øà¿ ∞¿ ∞;¿ ∞<¿ ∞{¿ ∞ô¿ ∞Œ¿ ∞÷¿ ∞¸¿ ± ¿ ±¿ ±G¿ ±á¿ ±„¿ ≤*¿ ≤å¿ ≤ç¿ ≤ ¿ ≤Ë¿ ≥¿ ≥#¿ ≥I¿ ≥M¿ ≥N¿ ≥ñ¿ ≥Ì¿ ¥7¿ ¥Ä¿ µ¿ µ+¿ µ,¿ µk¿ µâ¿ µº¿ µƒ¿ µÍ¿ µÓ¿ µÔ¿ ∂U¿ ∂Ø¿ ∑
¿ ∑t¿ ∑†¿ ∑…¿ ∏¿ ∏¿ ∏;¿ ∏D¿ ∏E¿ ∏a¿ ∏ó¿ ∏µ¿ ∏˜¿ πC¿ πL¿ πP¿ πQ¿ πt¿ πû¿ π√¿ π—¿ π◊¿ ∫'¿ ∫s¿ ∫ù¿ ∫µ¿ ∫’¿ ª¿ ª^¿ ª¢¿ ªË¿ º¿ ºZ¿ ºó¿ º◊¿ Ω¿ ΩB¿ Ωp¿ Ω£¿ Ω¬¿ Ωﬂ¿ æ¿ æA¿ æl¿ æ®¿ æØ¿ æ≥¿ æ¥¿ æ◊¿ æ¸¿ ø
¿ ø¿ ø:¿ øä¿ ø÷¿ øÌ¿ ¿9¿ ¿z¿ ¿√¿ ¡¿ ¡3¿ ¡7¿ ¡8¿ ¡[¿ ¡a¿ ¡¨¿ ¡π¿ ¡—¿ ¡ˆ¿ ¬¿ ¬1¿ ¬7¿ ¬8¿ ¬a¿ ¬u¿ ¬{¿ ¬|¿ ¬õ¿ ¬¡¿ ¬“¿ ¬÷¿ ¬◊¿ ¬ˇ¿ √¿ √P¿ √†¿ √Ì¿ √˛¿ ƒ¿ ƒU¿ ƒ¿ ƒ≈¿ ƒŸ¿ ƒﬂ¿ ƒ‡¿ ≈1¿ ≈Å¿ ≈—¿ ∆¿ ∆]¿ ∆ç¿ ∆°¿ ∆ß¿ ∆®¿ ∆Õ¿ ∆Ó¿ ∆Ù¿ ∆ı¿ «(¿ «l¿ «î¿ «ß¿ «≠¿ «Æ¿ «‘¿ «’¿ «˘¿ »¿ »D¿ »~¿ »á¿ »é¿ »ü¿ »£¿ »§¿ »Á¿ »Ì¿ …;¿ …ç¿ …’¿ …€¿  ¿  ]¿  c¿  ≠¿  ¸¿ ÀD¿ Àj¿ Àp¿ À£¿ À©¿ À÷¿ À‹¿ Ã0¿ Ãx¿ ÃÆ¿ Ã¥¿ Ãƒ¿ Õ¿ ÕP¿ Õè¿ Õ’¿ Œ'¿ Œw¿ ŒØ¿ œ¿ œ1¿ œ≥¿ œ¡¿ œ«¿ œÚ¿ –¿ –`¿ –f¿ –j¿ –k¿ –∞¿ –∂¿ —¿ —V¿ —û¿ —§¿ —Í¿ “(¿ “.¿ “x¿ “«¿ ”¿ ”5¿ ”;¿ ”n¿ ”t¿ ”°¿ ”ß¿ ”˚¿ ‘C¿ ‘y¿ ‘¿ ‘è¿ ‘“¿ ’¿ ’V¿ ’ú¿ ’Ó¿ ÷>¿ ÷v¿ ÷„¿ ÷˙¿ ◊~¿ ◊å¿ ◊í¿ ◊ø¿ ◊Á¿ ÿ1¿ ÿ7¿ ÿ;¿ ÿ<¿ ÿz¿ ÿÄ¿ ÿ≠¿ ÿ≥¿ ÿ√¿ Ÿ
¿ ŸM¿ Ÿí¿ Ÿ—¿ ⁄¿ ⁄i¿ ⁄°¿ ⁄Ÿ¿ ⁄˝¿ €¿ €#¿ €$¿ €Y¿ €_¿ €å¿ €í¿ €ﬂ¿ ‹*¿ ‹v¿ ‹|¿ ‹Œ¿ ‹ı¿ ‹˚¿ ›¿ ›R¿ ›ï¿ ›⁄¿ ﬁ¿ ﬁi¿ ﬁª¿ ﬁÛ¿ ﬂ$¿ ﬂQ¿ ﬂk¿ ﬂ∆¿ ﬂ ¿ ﬂÀ¿ ‡¿ ‡¿ ‡;¿ ‡A¿ ‡ç¿ ‡ÿ¿ ·)¿ ·/¿ ·Å¿ ·®¿ ·Æ¿ ·æ¿ ‚¿ ‚H¿ ‚ç¿ ‚À¿ „¿ „I¿ „¿ „¨¿ „∆¿ ‰&¿ ‰*¿ ‰+¿ ‰V¿ ‰\¿ ‰©¿ ‰Ï¿ ‰Ú¿ Â@¿ Âê¿ ÂŸ¿ ÂÍ¿ Ê¿ Ê+¿ ÊP¿ ÊT¿ ÊU¿ Êñ¿ Ê∞¿ Ê ¿ Êı¿ Á¿ Á^¿ ÁÑ¿ Áà¿ Áâ¿ Á®¿ ÁÌ¿ Ë¿ Ë¿ Ë¿ Ë[¿ Ë_¿ Ë`¿ ËÄ¿ Ë≈¿ Ë›¿ ËÎ¿ ËÒ¿ ÈA¿ ÈE¿ ÈF¿ È}¿ ÈÉ¿ Èì¿ Èô¿ ÈË¿ Í¿ ÍN¿ Í¿ Í©¿ Í‡¿ ÍÈ¿ ÍÔ¿ Î9¿ Îo¿ Îã¿ Îµ¿ Î€¿ Ï	¿ Ï¿ Ï¿ Ï¿ Ï5¿ Ïn¿ Ïò¿ Ïæ¿ Ïƒ¿ Ïﬂ¿ Ì¿ Ì8¿ ÌÑ¿ ÌΩ¿ Ì÷¿ Ó¿ Ó0¿ Ó=¿ Ó¿ ÓÖ¿ Óœ¿ Ô
¿ Ô¿ Ô¿ Ô^¿ Ôâ¿ Ôª¿ Ô…¿ Ôœ¿ Ô¯¿ ¿ 8¿ s¿ ï¿ û¿ •¿ À¿ œ¿ –¿ ˙¿ ˚¿ Ò0¿ Òb¿ Òp¿ Òv¿ ÒÃ¿ Ú¿ ÚB¿ Úy¿ Ú¿¿ Ûh¿ Ûë¿ Û∫¿ Û‚¿ ÙJ¿ Ùu¿ Ù~¿ ÙÖ¿ Ù´¿ ÙØ¿ Ù∞¿ Ùÿ¿ ÙŸ¿ ı%¿ ıN¿ ıT¿ ıd¿ ıj¿ ıæ¿ ˆ¿ ˆ]¿ ˆ§¿ ˆÛ¿ ˜	¿ ˜Z¿ ˜è¿ ˜√¿ ¯¿ ¯_¿ ¯ö¿ ¯–¿ ˘¿ ˘¿ ˘'¿ ˘(¿ ˘_¿ ˘à¿ ˘Ø¿ ˘÷¿ ˘Ù¿ ˙¿ ˙7¿ ˙\¿ ˙Å¿ ˙®¿ ˙√¿ ˙Õ¿ ˙÷¿ ˙Ó¿ ˚¿ ˚>¿ ˚a¿ ˚à¿ ˚æ¿ ˚„¿ ¸¿ ¸/¿ ¸H¿ ¸c¿ ¸m¿ ¸v¿ ¸ä¿ ¸ú¿ ¸ù¿ ¸÷¿ ¸ˇ¿ ˝&¿ ˝M¿ ˝k¿ ˝é¿ ˝Æ¿ ˝”¿ ˝¯¿ ˛¿ ˛:¿ ˛D¿ ˛M¿ ˛~¿ ˛Ç¿ ˛É¿ ˛»¿ ˇ¿ ˇ\¿ ˇt¿ ˇé¿ ˇî¿ ˇï¿ ˇ◊¿ ¿ !¿ ?¿ u¿ û¿ ˆ¿¿¿(¿2¿8¿P¿T¿U¿í¿≤¿˜¿˚¿¸¿7¿U¿ò¿ú¿ù¿Ï¿ ¿p¿º¿Ê¿8¿à¿ø¿‰¿%¿h¿q¿~¿£¿Ê¿'¿0¿6¿I¿M¿N¿v¿∏¿‰¿¿¿*¿S¿å¿ê¿ú¿º¿Ω¿Ã¿ı¿.¿2¿>¿`¿a¿m¿ù¿√¿⁄¿	¿	¿	¿	¿	¿	L¿	b¿	¨¿	ﬁ¿	Ù¿

¿
¿
6¿
:¿
;¿
J¿
s¿
¨¿
∞¿
º¿
¿
˝¿¿¿¿'¿P¿â¿ç¿ô¿‚¿„¿Ú¿¿T¿X¿d¿»¿…¿ÿ¿¿:¿>¿J¿}¿ê¿î¿ï¿§¿Õ¿¿
¿¿û¿ü¿Æ¿◊¿¿¿ ¿^¿q¿u¿v¿ö¿õ¿ß¿À¿Ï¿
¿@¿è¿ì¿î¿†¿«¿Ó¿'¿V¿n¿r¿s¿¿í¿À¿˙¿¿j¿§¿Ã¿Ó¿¿!¿%¿&¿2¿Y¿Ñ¿¨¿√¿Á¿¿	¿¿O¿f¿o¿u¿õ¿∫¿€¿¿1¿U¿m¿ä¿¢¿«¿¿¿¿#¿,¿3¿7¿9¿:¿à¿å¿⁄¿+¿?¿é¿…¿ ¿÷¿¿-¿Y¿_¿â¿ç¿è¿ê¿Ÿ¿˘¿˙¿¿ ¿,¿w¿¨¿∞¿≤¿≥¿¿(¿)¿N¿O¿[¿™¿Ω¿¡¿√¿ƒ¿3¿Ä¿Å¿¶¿À¿Ã¿ÿ¿¿T¿X¿Z¿[¿—¿#¿$¿I¿n¿o¿{¿¥¿ÿ¿¿¿"¿e¿i¿k¿l¿Â¿¿¿C¿D¿P¿â¿≠¿„¿Ò¿˜¿ 0¿ 4¿ 6¿ 7¿ î¿ ’¿!¿!¿!C¿!o¿!p¿!|¿!£¿!“¿!ˇ¿"¿"!¿""¿"Q¿"ª¿#¿#X¿#†¿$¿$¿$¿$√¿%¿%U¿%¬¿%»¿%Ã¿%Õ¿%Ÿ¿&¿&]¿&î¿&¬¿&Ó¿&Ù¿'>¿'i¿'|¿'Ä¿'Å¿'∏¿'È¿'ı¿(:¿(|¿(®¿(Û¿(˘¿)#¿)j¿)p¿)õ¿)Æ¿)≤¿)≥¿)Ô¿*%¿*1¿*Ä¿*«¿*Û¿+>¿+D¿+n¿+µ¿+ª¿+Ê¿+˘¿+˝¿+˛¿,
¿,N¿,î¿,∏¿,⁄¿-	¿-6¿-I¿-M¿-N¿-Z¿-®¿-‚¿.!¿..¿.o¿.u¿.®¿.¨¿.≠¿.π¿.Ã¿.¿/¿/'¿/+¿/,¿/8¿/ó¿/±¿/‡¿0¿08¿0e¿0ì¿0ª¿0‡¿1¿1D¿1m¿1ó¿1∆¿1’¿2¿2J¿2z¿2®¿2–¿2÷¿3¿3¿3¿3*¿3]¿3π¿4¿4M¿4V¿4Ç¿4∑¿4ø¿4˙¿5 ¿5`¿5ª¿5˙¿6¿61¿6f¿6n¿6©¿6Ø¿6≥¿6¥¿6¿¿6‡¿7¿75¿7^¿7õ¿7¶¿7Ø¿7µ¿7Î¿8¿87¿8v¿8Å¿8ä¿8ê¿8œ¿95¿9ù¿9ø¿9√¿9≈¿9∆¿:¿:¿:!¿:r¿:¿¿; ¿;r¿;º¿;Ï¿<¿<P¿<V¿<Z¿<[¿<õ¿<Ã¿<Õ¿=¿=&¿=,¿=z¿= ¿=Â¿=Î¿>1¿>j¿>p¿>µ¿>˜¿>¯¿?=¿?J¿?o¿?p¿?∑¿?ƒ¿?Î¿?Ï¿@¿@2¿@P¿@t¿@u¿@ü¿@ ¿@Ô¿A¿A¿AJ¿AK¿AW¿A{¿A™¿A ¿AÎ¿AÔ¿A¿A¸¿B#¿BL¿Bî¿B¿¿B…¿C¿C$¿C*¿CM¿Cn¿Cr¿Cs¿C∫¿C’¿Cı¿C˘¿C˙¿D¿DF¿Do¿D£¿DŒ¿D‡¿DÍ¿E¿E4¿E<¿E=¿Eò¿EÈ¿F5¿FÅ¿Fª¿FË¿F˜¿G/¿GK¿Gà¿Gì¿Gõ¿G°¿G•¿G¶¿Gƒ¿GË¿H	¿H"¿H(¿HD¿HH¿HI¿Hd¿HΩ¿H˚¿I¿I7¿IR¿Iå¿I¬¿I·¿JF¿J}¿J∂¿K¿KZ¿Ké¿Kò¿K—¿L¿L¿LJ¿Lf¿Lx¿LÄ¿LÅ¿L“¿L¿M=¿Mî¿MÎ¿N¿N"¿Nh¿Ní¿N´¿N±¿NÈ¿O ¿O]¿O∞¿Oˇ¿PM¿Pú¿PÁ¿Q¿QO¿Qp¿Qt¿Qu¿Qß¿R¿R8¿RY¿RÜ¿R´¿R±¿R‡¿S¿S¿SM¿SQ¿SR¿Só¿S§¿Sµ¿S’¿Sı¿S˘¿S˙¿T¿T;¿T}¿Tî¿T∂¿Tª¿Tº¿U	¿U-¿Ul¿Uñ¿Uª¿U‘¿U⁄¿U˛¿V¿V¿V:¿Vl¿Vª¿W¿W	¿W¿W ¿W!¿Wm¿Wç¿Wì¿W≥¿W¿¿X¿X¿XB¿Xt¿Xí¿X¨¿X≥¿XÂ¿Y¿Y¿Y$¿Y]¿Yt¿Yâ¿Yè¿Yæ¿Y¬¿Y√¿Z¿Z¿Z%¿Zo¿Z±¿Z„¿[$¿[™¿\0¿\@¿\F¿\ê¿\µ¿\ª¿\‰¿\Ë¿\È¿]9¿]Å¿]á¿]∆¿]˙¿^¿^u¿^Ü¿^å¿^°¿_¿_¿_¿_Z¿_Å¿_á¿_Æ¿_≤¿_≥¿_ﬁ¿`/¿`}¿`«¿`Ï¿`˙¿a ¿a ¿a$¿a%¿aj¿aw¿a§¿aŒ¿a˙¿b¿b?¿b_¿bÖ¿b±¿b∫¿b¿¿b¡¿bË¿c:¿c^¿cÄ¿câ¿cŸ¿c˚¿d¿d(¿d.¿d/¿dg¿dº¿e¿eM¿eµ¿eÍ¿f%¿f+¿f,¿fL¿fÅ¿f◊¿gP¿gà¿g§¿g…¿gÈ¿h.¿hs¿h~¿hÜ¿hå¿hç¿h√¿i¿iG¿i´¿iﬁ¿j¿j¿j9¿jj¿jº¿k-¿ke¿k¿k¢¿k¿¿l¿lB¿lM¿lU¿l[¿l\¿l•¿lË¿m¿mF¿mè¿mÓ¿nM¿nø¿o¿o[¿oõ¿o¡¿p¿p¿pT¿pZ¿p[¿py¿p†¿p√¿pÈ¿q¿q:¿qZ¿qç¿q•¿q¨¿q∞¿q±¿q¸¿rI¿ró¿r‰¿s3¿sP¿sU¿s•¿s˛¿t3¿t]¿t±¿tŸ¿tﬂ¿t¯¿t¸¿t˝¿u	¿uQ¿uù¿u´¿u±¿u÷¿u˜¿v¿v¿v ¿vq¿vw¿v»¿w¿wZ¿wt¿wú¿w’¿x
¿xP¿xÄ¿x√¿y¿y§¿z?¿zà¿zÀ¿z—¿{¿{<¿{h¿{¶¿{Õ¿{’¿{ˇ¿|;¿|`¿|h¿|v¿||¿|}¿| ¿}¿}¿}U¿}è¿}ï¿}ñ¿}‹¿}›¿~¿~S¿~à¿~‚¿~¿~ˆ¿~˜¿A¿É¿…¿Õ¿Œ¿Ä¿Ä¿Ä=¿Ä}¿Ä¥¿Å¿Å¿Å,¿Å?¿ÅE¿Åu¿ÅØ¿Åÿ¿Åﬁ¿Å˙¿Ç¿Ç%¿Ç)¿Ç*¿Çk¿Ç¶¿Ç´¿Ç˛¿É0¿É5¿Éy¿Éù¿ÉÎ¿É˘¿Éˇ¿ÑM¿Ñ√¿Ñ’¿Ö¿Öä¿Öò¿Öû¿ÖÛ¿ÜF¿Üà¿Üº¿ÜŒ¿Ü÷¿á,¿á2¿á6¿á7¿áh¿áu¿á∏¿áÔ¿à'¿à-¿àQ¿àà¿à©¿à≠¿àÆ¿àÓ¿âô¿â»¿âˇ¿äS¿äñ¿äÔ¿äı¿ã¿ãa¿ãê¿ã…¿å¿åy¿å∑¿åÊ¿å˘¿ç¿ç¿ç¿ç?¿çå¿ç‰¿éB¿éi¿és¿éÆ¿é¬¿éÃ¿è¿èD¿èN¿èä¿è⁄¿ê!¿ê7¿ê¿ê¿ë9¿ëC¿ëg¿ëv¿ë±¿ë˛¿í$¿í.¿í6¿í<¿íe¿íÖ¿íâ¿íä¿í¡¿íÚ¿íˇ¿ìD¿ìm¿ìq¿ìr¿ìÆ¿ì‰¿ìÒ¿î@¿îi¿îm¿în¿î∂¿î√¿ï¿ï>¿ïv¿ï|¿ïü¿ïƒ¿ïÂ¿ïÈ¿ïÍ¿ñ)¿ñ6¿ñê¿ñ‰¿ó¿ó+¿ón¿ó}¿ó—¿óŸ¿óﬂ¿ò:¿òó¿ò∞¿ò‚¿ô9¿ôS¿ô§¿ôÿ¿ô‡¿ôÌ¿ö¿öa¿ö{¿öÃ¿ö¸¿õ¿õ
¿õ!¿õO¿õ\¿õå¿õí¿õ•¿õ©¿õ™¿õÈ¿õˆ¿úV¿ú™¿ú÷¿ù/¿ùù¿ùÒ¿ù˙¿û ¿û[¿û∏¿û◊¿ü	¿ü^¿üê¿ü±¿üœ¿†¿†+¿†w¿†Ü¿†π¿†≈¿†œ¿†˝¿°N¿°|¿°≤¿°–¿¢¿¢,¿¢w¿¢Ü¿¢π¿¢≈¿¢œ¿¢¸¿£*¿£Y¿£_¿£v¿£§¿£±¿£·¿£Á¿£˙¿£˛¿£ˇ¿§"¿§/¿§}¿§∑¿•0¿•6¿•±¿•µ¿•∂¿•¬¿¶¿¶M¿¶ã¿¶∆¿¶Ï¿¶Ú¿ß(¿ßN¿ßo¿ßâ¿ß∏¿ßÂ¿®¿®`¿®Ö¿®±¿®ˆ¿©¿©K¿©è¿©π¿©Â¿™+¿™Z¿™Ü¿™÷¿´¿´:¿´ï¿´—¿´¸¿¨]¿¨c¿¨ä¿¨™¿¨Ω¿¨¡¿¨¬¿¨Œ¿¨·¿≠¿≠Z¿≠`¿≠à¿≠∞¿≠≈¿≠…¿≠ ¿Æ¿Æ¿Æl¿Æ≠¿Æ≥¿Ø¿Ø¿Ø$¿ØV¿ØW¿Øñ¿Øú¿ØÎ¿∞#¿∞0¿∞è¿∞ƒ¿∞»¿∞…¿±¿±¿±\¿±©¿±˚¿≤D¿≤|¿≤Ç¿≤—¿≥"¿≥/¿≥â¿≥¿¥¿¥+¿¥H¿¥†¿¥”¿µ*¿µG¿µj¿µç¿µ©¿µÀ¿µÁ¿∂¿∂3¿∂Z¿∂~¿∂ö¿∂¥¿∂„¿∂Ô¿∑¿∑?¿∑[¿∑á¿∑´¿∑≥¿∑π¿∑∫¿∑‘¿∑˜¿∏¿∏ ¿∏1¿∏\¿∏i¿∏ñ¿∏ú¿∏º¿π¿πX¿π¶¿π—¿π’¿π÷¿∫$¿∫j¿∫p¿∫∑¿ª¿ªH¿ª§¿ª¥¿ª«¿º'¿º<¿ºD¿º¶¿ºπ¿º√¿ºÂ¿Ω2¿ΩÇ¿Ω¡¿æ¿æ)¿æv¿æ•¿æ¨¿ø ¿ø&¿ø∫¿¿O¿¿∞¿¿Ê¿¡¿¡V¿¡w¿¡∞¿¡Í¿¬"¿¬D¿¬K¿¬^¿¬ê¿¬‡¿√¿√V¿√|¿√“¿ƒ¿ƒ¿ƒ`¿ƒÑ¿ƒã¿ƒØ¿ƒ‰¿≈$¿≈a¿≈µ¿∆¿∆;¿∆]¿∆É¿∆¶¿∆◊¿∆˙¿«¿«7¿«f¿«°¿«‘¿«Á¿»¿»¿»*¿»Q¿»s¿»é¿»Ω¿»„¿…¿…)¿…F¿…a¿…m¿…u¿…{¿…å¿…∑¿…ƒ¿…Ò¿…˜¿ ¿ 0¿ 4¿ 6¿ 7¿ É¿ †¿ §¿ ≤¿ ∂¿À ¿À¿ÀU¿Àm¿Àú¿Àü    _kLongPressSelectionDevices&_kSelectableVerticalComparingThresholdSelectableRegionSelectableRegionState_NonOverrideAction_SelectAllAction_CopySelectionAction _GranularlyExtendSelectionAction%_GranularlyExtendCaretSelectionAction(_DirectionallyExtendCaretSelectionAction"_SelectableRegionContainerDelegate)MultiSelectableSelectionContainerDelegate 5Î