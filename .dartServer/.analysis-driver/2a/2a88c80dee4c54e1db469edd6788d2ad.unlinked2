Ал
controllerchildFocusNodestylealignmentOffset	layerLinkclipBehavioranchorTapClosesMenuconsumeOutsideTaponOpenonClosecrossAxisUnconstrainedmenuChildrenbuilderchildcreateStatedebugDescribeChildrendebugFillProperties
_anchorKey_parent_menuScopeNode_internalMenuController_anchorChildren_scrollPosition	_viewSize_overlayController_menuPosition_orientation_isOpen_isRoot_menuController	initStatedisposedidChangeDependenciesdidUpdateWidgetbuild_buildContents_firstItemFocusNode_lastItemFocusNode	_addChild_removeChild_root_childChangedOpenState_focusButton_handleScroll_open_close_closeChildren_maybeOftoString_anchorisOpencloseopen_attach_detachchildren	onPressedonHoverrequestFocusOnHoveronFocusChange	focusNode	autofocusshortcutsemanticsLabelstatesControllerleadingIcontrailingIconcloseOnActivateoverflowAxisenableddefaultStyleOfthemeStyleOf	styleFrom_internalFocusNode
_focusNode
_isHovered_handleFocusChange_handlePointerExit_handlePointerHover_handleSelect _createInternalFocusNodeIfNeededvaluetristateisError	onChanged
groupValue
toggleable	menuStyleactions_waitingToFocusMenu_isOpenOnFocusEnabled_buttonFocusNode_enabled_onClose_onOpen_computeMenuPaddingsubmenu_isParentRoot	isSubmenuinvoke	isEnabled	_instance_shortcutGraphicEquivalents
_modifiersinstance_cachedShortcutKeysgetShortcutLabel_getLocalizedName_getModifierLabel	anchorKeyanchorupdateShouldNotifyonInvoke
hasSubmenumaybeOfoflabeldisplayLabelhasAcceleratordefaultLabelBuilderstripAcceleratorMarkers_displayLabel_acceleratorIndex_binding_shortcutRegistry_shortcutRegistryEntry_showAccelerators_altIsPressed_listenToKeyEvent_updateAcceleratorShortcut_updateDisplayLabelshowDecoration
anchorRecttextDirection	alignmentmenuPositionmenuPaddingavoidBoundsorientationparentOrientationgetConstraintsForChildgetPositionForChildshouldRelayout_closestScreenscrollController_intrinsicCrossSizeresolveCallbackresolvedebugDescription_defaultMenuBordercontext_colorsbackgroundColorshadowColorsurfaceTintColorpaddingvisualDensity
_textTheme	elevationforegroundColor	iconColoriconSizemaximumSizeminimumSizemouseCursoroverlayColorshapesplashFactorytapTargetSize	textStyle_scaledPadding*_kDebugMenus_kDefaultSubmenuIconSize_kLabelItemDefaultSpacing_kLabelItemMinSpacing_kMenuTraversalShortcuts_kMenuVerticalMinPadding_kMenuViewPadding"_kTopLevelMenuHorizontalMinPaddingMenuAnchorChildBuilder
MenuAnchor_MenuAnchorStateMenuControllerMenuBarMenuItemButton_MenuItemButtonStateCheckboxMenuButtonRadioMenuButtonSubmenuButton_SubmenuButtonState_SubmenuDirectionalFocusActionDismissMenuAction_LocalizedShortcutLabeler_MenuAnchorScope_MenuBarAnchor_MenuBarAnchorStateMenuAcceleratorCallbackBindingMenuAcceleratorChildBuilderMenuAcceleratorLabel_MenuAcceleratorLabelState_MenuItemLabel_MenuLayout
_MenuPanel_MenuPanelState_Submenu_MouseCursor_debugMenuInfo_isCupertino_usesSymbolicModifiers_platformSupportsAccelerators_MenuBarDefaultsM3_MenuButtonDefaultsM3_MenuDefaultsM3ВxbooldoubleMapShortcutActivatorIntentSingleActivatorLogicalKeyboardKeygameButtonAActivateIntentescapeDismissIntenttabNextFocusIntentshiftPreviousFocusIntent	arrowDownDirectionalFocusIntentTraversalDirectiondownarrowUpup	arrowLeftleft
arrowRightrightbuilderchildWidgetBuildContextStatefulWidgetOffsetzeroCliphardEdge
Deprecated	FocusNode	MenuStyleMenuThemeDatastyle	alignmentDirectionalitydyAlignmentDirectional	AlignmentdxTextDirectionrtl	LayerLinkcloseopenVoidCallbackUnconstrainedBoxDropdownMenuListoverrideStateDiagnosticsNodemaptoDiagnosticsNodetoListvoidDiagnosticPropertiesBuilderdebugFillPropertiesaddFlagPropertyvalueifTrueDiagnosticsPropertyEnumProperty	GlobalKey
debugLabelkReleaseModeFocusScopeNodeScrollPositionSizeOverlayPortalControllerAxisvertical	isShowingwidget
controller	initStatedescribeIdentity_attach	inDispose_removeChildclear_detachdisposedidChangeDependencies_maybeOfcontext	_addChildisScrollingNotifierremoveListener
ScrollablemaybeOfpositionaddListener
MediaQuerysizeOf_closedidUpdateWidget_anchor	layerLinkCompositedTransformTargetlinkOverlayPortaltargetsRootOverlayoverlayChildBuilderanchor	menuStylealignmentOffsetmenuPositionclipBehaviormenuChildrencrossAxisUnconstrainedanchorTapClosesMenu	TapRegiongroupIdconsumeOutsideTaps_isOpenconsumeOutsideTaponTapOutsidePointerDownEvent	Shortcuts	shortcutsincludeSemantics	anchorKeyisOpenActionsactionsTypeActionBuilderkeycallSizedBoxFocusTraversalPolicyFocusTraversalGroupReadingOrderTraversalPolicyfindFirstFocusignoreCurrentFocusfindLastFocuscontainstoStringDeepremove_parent_childChangedOpenStatemountedSchedulerBindinginstanceschedulerPhaseSchedulerPhasepersistentCallbackssetStateaddPostFrameCallbackDurationchildFocusNoderequestFocus_closeChildrenshowonOpenhideonClosefrom"dependOnInheritedWidgetOfExactTypeStringDiagnosticLeveldebug_openCharacterActivatorshortcutShortcutRegistry
WidgetsAppMaterialAppCupertinoAppPlatformMenuBarVoidCallbackIntentCallbackShortcutsStatelessWidgetnonedebugCheckHasOverlayitemdefaultValue
horizontalValueChangedMenuSerializableShortcut	SemanticsWidgetStatePropertyButtonStyleMaterialStatesControllerTextMenuButtonThemeDataMenuButtonThemeofforegroundColorbackgroundColordisabledForegroundColordisabledBackgroundColorenabledMouseCursordisabledMouseCursormouseCursor	iconColordisabledIconColoriconSizeColor	TextStyleEdgeInsetsGeometryMouseCursor
BorderSideOutlinedBorderVisualDensityMaterialTapTargetSizeAlignmentGeometryInteractiveInkFeatureFactory
TextButton	styleFromshadowColorsurfaceTintColor	textStyleoverlayColor	elevationpaddingminimumSize	fixedSizemaximumSizesideshapevisualDensitytapTargetSizeanimationDurationenableFeedbacksplashFactoryifFalse	focusNodethemeStyleOfmergedefaultStyleOf	onPressedenabledonFocusChange	autofocusstatesControllerisSemanticButtonleadingIconsemanticsLabeltrailingIcon
hasSubmenuoverflowAxis_orientationonInvokeonHoverrequestFocusOnHoverMouseRegiononExitMergeSemanticshasPrimaryFocusPointerExitEventPointerHoverEventinvalidateScopeData
FocusScopecloseOnActivate_rootFocusManagerapplyFocusChangesIfNeededCheckboxCheckboxTheme	ThemeDatauseMaterial3ExcludeFocusIgnorePointerConstrainedBoxconstraintsBoxConstraints	maxHeightwidthmaxWidthtristate	onChangedisErrorRadio
RadioTheme
groupValue
toggleablePlatformMenuItem	MenuThemesubmenu
isNotEmpty
EdgeInsetsltrtop_focusButtonexpandedshowDecorationhasFocusMaterialStatePropertyresolveMaterialState_menuScopeNodeDirectionalFocusAction_menuController_buttonFocusNode_isRoot	directionpreviousFocus	nextFocus_firstItemFocusNodecanRequestFocus_lastItemFocusNodemaybeInvokeDismissActionruntimeTypeenterSetaltcontrolmetaaltLeftcontrolLeftmetaLeft	shiftLeftaltRightcontrolRight	metaRight
shiftRight_MaterialLocalizationsdefaultTargetPlatformTargetPlatformmacOSiOSShortcutSerializationserializeForMenutriggerintkeyIdcontainsKey	planeMaskfromCharCode	valueMasktoUpperCasekeyLabeljoin	characterUnimplementedErroraltGraphkeyboardKeyAltGraph	backspacekeyboardKeyBackspacecapsLockkeyboardKeyCapsLockchannelDownkeyboardKeyChannelDown	channelUpkeyboardKeyChannelUpdeletekeyboardKeyDeleteejectkeyboardKeyEjectendkeyboardKeyEndkeyboardKeyEscapefnkeyboardKeyFnhomekeyboardKeyHomeinsertkeyboardKeyInsertnumLockkeyboardKeyNumLocknumpad1keyboardKeyNumpad1numpad2keyboardKeyNumpad2numpad3keyboardKeyNumpad3numpad4keyboardKeyNumpad4numpad5keyboardKeyNumpad5numpad6keyboardKeyNumpad6numpad7keyboardKeyNumpad7numpad8keyboardKeyNumpad8numpad9keyboardKeyNumpad9numpad0keyboardKeyNumpad0	numpadAddkeyboardKeyNumpadAddnumpadCommakeyboardKeyNumpadCommanumpadDecimalkeyboardKeyNumpadDecimalnumpadDividekeyboardKeyNumpadDividenumpadEnterkeyboardKeyNumpadEnternumpadEqualkeyboardKeyNumpadEqualnumpadMultiplykeyboardKeyNumpadMultiplynumpadParenLeftkeyboardKeyNumpadParenLeftnumpadParenRightkeyboardKeyNumpadParenRightnumpadSubtractkeyboardKeyNumpadSubtractpageDownkeyboardKeyPageDownpageUpkeyboardKeyPageUppowerkeyboardKeyPowerpowerOffkeyboardKeyPowerOffprintScreenkeyboardKeyPrintScreen
scrollLockkeyboardKeyScrollLockselectkeyboardKeySelectspacekeyboardKeySpaceandroidfuchsialinuxkeyboardKeyMetawindowskeyboardKeyMetaWindowskeyboardKeyAltkeyboardKeyControlkeyboardKeyShiftArgumentErrorInheritedWidget_anchorChildrennodeskipTraversaldescendantsAreFocusable	excludingorientationchildrenFlutterErrorlabel
CharactersdefaultLabelBuilderprimaryFocusRichTextTextSpanRegExphasMatchDefaultTextStyle
characterstextgetRangetoStringcopyWith
decorationTextDecoration	underlinelengthsetIndexStringBuffericharacterAtwritetriminfoStringPropertyShortcutRegistryEntryHardwareKeyboard
addHandlerremoveHandlerlogicalKeysPressedintersectionKeyEventtoLowerCaseaddAllstripAcceleratorMarkersindexThememaxExpandedClipRectRowmainAxisSizeMainAxisSizeminPaddingEdgeInsetsDirectionalonlystartmainAxisAlignmentMainAxisAlignmentspaceBetweengetShortcutLabelIconIconsarrow_rightsizeexcludeSemanticsSingleChildLayoutDelegateRectloosebiggestdeflateall
withinRecttopLeftIterableDisplayFeatureSubScreensubScreensInBoundscenterheightbottom
anchorRecttextDirectionmenuPaddingparentOrientation	setEqualsavoidBoundsfirstscreendistanceScrollControllerMenuBarTheme
themeStyledefaultStylestandardbaseSizeAdjustment	symmetricclampinfinityeffectiveConstraintsminWidth	minHeight	constrainisFiniteIntrinsicWidthMaterialcolortypeMaterialTypetransparencycanvasScrollConfigurationbehavior
scrollbars
overscrollphysicsClampingScrollPhysicsPrimaryScrollController	ScrollbarthumbVisibilitySingleChildScrollViewscrollDirectionFlexcrossAxisAlignmentCrossAxisAlignmentconstrainedAxiscenterStartIntrinsicHeightMaterialStateMouseCursorstatesfromLTRB
_anchorKeycurrentContext	RenderBoxOverlayfindRenderObjectlocalToGlobalancestorpaintBoundsbottomRight
fromPointsdataCustomSingleChildLayoutdelegatetoSetcursorhitTestBehaviorHitTestBehaviordeferToChildCompositedTransformFollowertargetAnchor
bottomLeftWidgetStateMouseCursoruncontrolledMaterialPropertyResolver
debugPrintdetailsdetailMaterialStatePropertyAllbottomStartRoundedRectangleBorderborderRadiusBorderRadiusRadiuscircularColorSchemecolorSchemesurfaceContainershadowColorstransparentkThemeChangeDuration	TextTheme	textThemeButtonStyleButton	allOrNullresolveWithdisabled	onSurfacewithOpacitypressedhoveredfocusedonSurfaceVariantinfiniteSystemMouseCursorsbasicclickmaterialTapTargetSize
labelLargefontSizetextScalerOfscalescaledPaddingtopEndStatefulWidgetStateStatelessWidgetDirectionalFocusActionDismissActionInheritedWidget
MenuAnchor_MenuAnchorStateSingleChildLayoutDelegateMaterialStateMouseCursor	MenuStyleButtonStyleO№ш·ы7кЬkV┼·╗#    Бn   БАmathБГ	dart:math  БЛ   package:flutter/foundation.dart  Б╡   package:flutter/rendering.dart  Б▐   package:flutter/scheduler.dart  В   package:flutter/services.dart  В/   package:flutter/widgets.dart  ВW   button_style.dart  Вs   button_style_button.dart  ВЦ   checkbox.dart  Во   color_scheme.dart  В╩   colors.dart  Вр   constants.dart  В∙   
icons.dart  Г   ink_well.dart  Г&   material.dart  Г>   material_localizations.dart  Гd   material_state.dart  ГВ   menu_bar_theme.dart  Га   menu_button_theme.dart  Г┴   menu_style.dart  Г█   menu_theme.dart  Гї   
radio.dart  Д
   scrollbar.dart  Д#   text_button.dart  Д>   text_theme.dart  ДX   
theme.dart  Дm   theme_data.dart└m └<ТП░ <АЖАдАеА╓А┌АїББ@БcБlБmБЙБКБ┤Б▌ВВ.ВUВVВrВХВнВ╔В▀В°ГГ%Г=ГcГБГЯГ└Г┌ГЇД	Д"Д=ДWДlДЖДЗДЯД┐Д▌ЕЕ*ЕHЕIЕГЕдЕеЕєЖЖ1Ж2Ж}ЖдЖ╤Ж╥ЗЗDЗlЗmЗ╣З┬ИИdИгИсЙ0ЙТЙЁКRК╢К╣К║КєЛЛЛbЛЖЛЗЛ╧МММPМ|МАМ─М╚НН+Н/НwН─Н╥ООО9ОJОMОNОЩОуПППdПЭПбПыР8РtРxРМР┘Р¤ССPС`СdСxС╟ТТaТнТ▒У УУУ(УyУЕУЙУ╪УшФФ6Ф<ФkФАФПФдФ╜Ф═ФїХ	Х0ХAХiХеХлХ╤ХїЦЦЦ@Ц`ЦrЦВЦИЦЙЦ╫ЦьЧЧЧbЧаЧжЧЎШDШVШ\ШеШсЩЩЩOЩUЩЯЩеЩ┌ЩЇЩїЪ3ЪЪ─Ъ▄ЪтЫЫЫnЫzЫАЫ╤ЬЬNЬTЬвЬяЭ;ЭЖЭ┬Э╚ЭщЭ■ЮЮ ЮiЮЗЮНЮ┘ЯЯ3Я4ЯjЯpЯУЯоЯпЯЇЯ·аJаРа╙б#бmб╝ввUвевєг<гBгПгрд/д|дВдЫдкд╨е
ее0е1е|едеке∙жIжСжбжзж└жржсзз9з:зtзУзФзъии!иpи╚йй>й?йПй╗й┴й°кккOкUкЧк▐кфл2лJлsлtлмл▓л№мMмЭм╠мумфмЁн)н*н6нhн╠н╨н╤н▌о"оMо╕п
пOпХпыпяпёпЄ░%░s░╝▒
▒▒Ы▒╕▒ф▓▓V▓y▓М││.│X│М││┤
┤┤┤,┤C┤░┤╒╡╡╡0╡4╡5╡A╡T╡Ж╡Щ╡╕╡╛╡┐╡р╡Ї╢╢4╢X╢v╢Л╢П╢Р╢Ь╢╜╢р╖,╖L╖o╖К╖к╖░╖°╕5╕z╕п╕ф╣╣-╣3╣L╣P╣Q╣]╣М╣▓╣ч║║9║i║С║╗║╩║√╗>╗F╗L╗y╗}╗~╗К╗▒╗р╝╝0╝Q╝j╝s╝y╝z╝п╝╒╜	╜"╜:╜a╜Д╜╞╜э╛╛G╛И╛У╛Ь╛│╛║╛╗╛т╛√┐┐Z┐Л┐╘┐Ё┐√└ @└ @└ @ └ @!└ @o└ @╜└ @╥└ @▌└ @ь└ A└ Ab└ AК└ Aй└ A╢└ A╬└ Aэ└ B└ B└ B2└ B;└ BB└ BF└ BG└ Bw└ BЛ└ B▓└ B∙└ C└ C└ C2└ C\└ Cк└ C▌└ Cш└ Cё└ C°└ C№└ C¤└ DD└ Ds└ DЪ└ D─└ D╫└ D▌└ E└ Ed└ E░└ E┤└ E╡└ E█└ F└ F└ F└ FF└ Fе└ Fё└ Fї└ FЎ└ G!└ Gd└ GТ└ G▓└ G°└ H7└ H;└ H<└ Hj└ Hп└ H▄└ I%└ IH└ IЗ└ IЛ└ IМ└ Iл└ I╧└ IЇ└ J└ J└ J-└ J1└ J2└ JT└ J{└ JР└ Jъ└ J■└ K5└ K?└ KL└ KР└ Kж└ Kш└ KЇ└ K■└ L└ L└ L	└ L!└ LJ└ LX└ L^└ Lл└ L╓└ L┌└ L█└ LЇ└ MB└ MС└ M╩└ M▌└ Mэ└ Mє└ Mў└ M°└ ND└ NJ└ NЕ└ NЛ└ N█└ O└ Oc└ Ot└ OЧ└ O─└ Oы└ P8└ PF└ PL└ Ps└ P┬└ P█└ Pы└ Pё└ Q└ QД└ Q║└ Qх└ Qц└ R└ R+└ RJ└ RK└ R^└ Rt└ Rz└ R{└ RЦ└ RЪ└ RЫ└ R▒└ R╖└ S└ S└ SD└ Sq└ SЕ└ SУ└ SЩ└ S├└ S°└ TR└ Ts└ TР└ T╦└ Tю└ U└ U└ U3└ Ut└ UТ└ U╗└ U┘└ V@└ VV└ VЧ└ Vг└ Vл└ V▒└ V╡└ V╢└ Vш└ WA└ WЪ└ W─└ W╩└ W╬└ W╧└ X└ Xc└ Xq└ Xн└ Y └ Y└ Y└ Y└ YY└ Y|└ YА└ YВ└ YГ└ Y═└ Y╤└ Z└ Zn└ ZБ└ ZЕ└ ZУ└ ZЧ└ Z▄└ [)└ [A└ [Л└ [в└ [╥└ [╪└ \'└ \:└ \W└ \X└ \Ф└ \и└ \┼└ \т└ \ц└ \ч└ ]*└ ]0└ ]y└ ]╗└ ]ф└ ]ъ└ ^5└ ^Ж└ ^б└ ^▓└ ^╧└ ^ц└ ^ъ└ ^ы└ _.└ _4└ _Д└ _╙└ _┘└ `'└ `H└ `N└ `Щ└ `ъ└ a└ a'└ aD└ al└ ap└ aq└ aЯ└ a╔└ a▀└ aу└ aф└ b└ b+└ bA└ bG└ bK└ bM└ bN└ bБ└ bЕ└ b╥└ c"└ cg└ ck└ c║└ d└ dY└ dй└ d∙└ eD└ eT└ eX└ eи└ e°└ fF└ fА└ f╩└ g└ g└ g?└ gА└ g╬└ h└ hk└ h╝└ h╫└ h█└ i)└ ip└ i╛└ j└ j[└ jЪ└ jЮ└ jь└ k6└ kЖ└ k╤└ k╒└ l!└ l1└ lD└ lH└ lО└ lТ└ lа└ lд└ lє└ m	└ mE└ mФ└ m╙└ n"└ n`└ nм└ n┐└ o└ oG└ oУ└ oо└ o╓└ oў└ o¤└ p(└ p:└ pI└ pY└ p|└ pС└ pн└ p│└ p┤└ p■└ q└ qN└ qT└ qЙ└ qг└ qд└ q┌└ qр└ q └ r└ r└ rP└ rt└ ru└ r─└ r╩└ s└ sh└ s│└ s╥└ s╪└ t└ t.└ t/└ t;└ tb└ tН└ tи└ t╞└ tш└ t№└ u└ u!└ u%└ u&└ u2└ ud└ uВ└ uк└ u▌└ uц└ uэ└ uё└ uЄ└ u■└ vC└ vn└ v╟└ w(└ w,└ w.└ w/└ w└ w├└ w╟└ x└ xb└ xГ└ xЗ└ x╝└ x└└ x╬└ x╥└ y"└ y/└ y~└ yФ└ yф└ z3└ zq└ z╜└ z╨└ {"└ {X└ {г└ {╛└ {ь└ |└ |└ |C└ |\└ |k└ |└ |С└ |╢└ |╬└ |т└ |■└ }└ }*└ }:└ }U└ }x└ }О└ }е└ }╞└ }я└ } └ ~└ ~└ ~E└ ~K└ ~Н└ ~У└ ~г└ ~й└ ~х└ └ └ M└ S└ в└ ╨└ ї└ Ў└ А%└ А+└ АC└ Аe└ Аf└ АУ└ АЩ└ Ащ└ АЎ└ Б!└ Б"└ БQ└ Бo└ Бp└ БЯ└ Б╖└ Б╕└ Б°└ Б■└ В5└ Вa└ Вb└ Вн└ В│└ В∙└ Г@└ Г└ Г░└ Г╢└ Д└ ДH└ ДС└ Дв└ Ди└ Д┐└ Д▀└ Др└ Е└ Е└ Еb└ Е▒└ ЕЇ└ Ж9└ Ж?└ ЖV└ Жr└ Жs└ Жм└ Жр└ Жс└ З└ З└ З<└ ЗW└ ЗX└ ЗФ└ З▒└ З▓└ Зэ└ И└ И└ ИK└ ИП└ Иб└ Из└ И┐└ И╘└ ИЄ└ Иє└ Й'└ Й-└ Й~└ ЙЮ└ Йд└ ЙЎ└ К:└ КW└ К]└ КВ└ КЭ└ КЮ└ К╫└ К▌└ Л └ Л&└ ЛW└ Лn└ Лo└ Ла└ Лж└ ЛЄ└ М└ М└ М(└ Мi└ Мj└ МЩ└ МЯ└ М▄└ Мт└ Н!└ НV└ НБ└ НЕ└ НЖ└ Н├└ Нх└ О└ ОG└ ОK└ ОL└ ОУ└ О╝└ О┬└ П└ П_└ Пп└ Пў└ РF└ РS└ РY└ РЭ└ Р▀└ Рх└ С&└ Сh└ СЖ└ СМ└ С█└ Т└ Т!└ Тh└ ТЬ└ Тв└ Тф└ У3└ У└ УТ└ УШ└ Уж└ У╝└ Ущ└ Ф1└ ФI└ ФZ└ Фe└ ФР└ ФЩ└ Фг└ Ф─└ Фр└ Ф№└ Х └ ХD└ Х\└ Хy└ ХП└ Хе└ Х├└ Х▌└ ХЎ└ Ц└ Ц.└ ЦE└ ЦZ└ Цq└ ЦЦ└ Ц╝└ Ц╥└ Цэ└ Ч└ Ч9└ ЧZ└ Чt└ ЧЦ└ Ч╟└ Ч╬└ Чя└ Ш└ Ш?└ Шw└ Шп└ Ш╧└ Ш∙└ Щ└ Щ/└ Щ[└ Щw└ ЩЩ└ Щ╡└ Щ═└ Щэ└ Ъ	└ Ъ)└ ЪW└ ЪЗ└ ЪЩ└ Ън└ Ъ╤└ Ъї└ Ы!└ ЫG└ Ыc└ ЫЗ└ ЫО└ ЫТ└ ЫУ└ ЫЯ└ Ыф└ Ь└ Ьk└ Ь╞└ Э4└ ЭХ└ ЭЇ└ Юr└ Юv└ Юx└ Юy└ Ю┤└ Я└ Я%└ Яl└ Я│└ Я╬└ Я╧└ Я█└ ЯЁ└ а└ а/└ а_└ аc└ аd└ аp└ аГ└ а╢└ а┘└ а°└ б└ б└ б└ б└ бQ└ бД└ б█└ в└ в(└ вK└ вS└ в}└ вп└ в╡└ в█└ в▀└ вр└ вь└ г└ г_└ гм└ г№└ д^└ дЗ└ дз└ д▌└ ду└ дф└ е└ е;└ е~└ еЫ└ е╡└ еъ└ ж└ жD└ жb└ ж└ жи└ ж╦└ ж·└ з%└ з@└ зД└ зб└ зк└ з▒└ з▓└ зэ└ и└ и<└ иR└ и[└ иa└ иb└ ив└ и╜└ иу└ й└ й└ й&└ й,└ й-└ йV└ йZ└ й[└ йy└ йа└ й╓└ к└ к└ к└ к└ кQ└ кg└ кК└ кд└ кк└ ко└ кп└ л └ л└ лL└ лc└ л|└ лЮ└ л╞└ м└ м8└ м9└ мК└ м╡└ мЄ└ н└ н└ н'└ н-└ н1└ н2└ нK└ нИ└ нк└ нф└ нъ└ о3└ оВ└ оУ└ о╒└ п└ п.└ пZ└ п^└ п_└ пЛ└ пп└ п╫└ пщ└ ░6└ ░K└ ░W└ ░]└ ░a└ ░c└ ░d└ ░п└ ░│└ ░ └ ▒└ ▒└ ▒%└ ▒t└ ▒П└ ▒У└ ▒ы└ ▒√└ ▒ └ ▓└ ▓└ ▓\└ ▓к└ ▓╢└ ▓щ└ │└ │└ │`└ │}└ │М└ │е└ │└└ │┌└ │ў└ ┤	└ ┤!└ ┤5└ ┤H└ ┤X└ ┤s└ ┤Ц└ ┤н└ ┤╬└ ┤ч└ ┤э└ ┤ю└ ╡└ ╡└ ╡k└ ╡и└ ╡╜└ ╡╛└ ╢└ ╢└ ╢O└ ╢U└ ╢е└ ╢Ў└ ╖G└ ╖t└ ╖z└ ╖╛└ ╖╒└ ╖╓└ ╕└ ╕└ ╕j└ ╕╛└ ╕─└ ╕▌└ ╕є└ ╕Ї└ ╣/└ ╣5└ ╣Г└ ╣╤└ ╣▐└ ╣ф└ ║0└ ║^└ ║d└ ║╡└ ╗└ ╗O└ ╗\└ ╗b└ ╗│└ ╝ └ ╝!└ ╝'└ ╝5└ ╝O└ ╝n└ ╝Т└ ╝╕└ ╝╨└ ╝°└ ╜└ ╜└ ╜└ ╜#└ ╜K└ ╜L└ ╜Т└ ╜Ш└ ╜ч└ ╛└ ╛:└ ╛;└ ╛h└ ╛n└ ╛╛└ ╛╦└ ╛Ў└ ╛ў└ ┐&└ ┐D└ ┐E└ ┐Е└ ┐Л└ ┐┬└ ┐ю└ ┐я└ └└ └ └ └q└ └║└ ┴└ ┴A└ ┴К└ ┴Р└ ┴з└ ┴├└ ┴─└ ┴¤└ ┬1└ ┬2└ ┬h└ ┬n└ ┬Н└ ┬и└ ┬й└ ┬ф└ ├└ ├└ ├?└ ├]└ ├^└ ├Ч└ ├Э└ ├р└ ├ц└ ─└ ─.└ ─/└ ─`└ ─f└ ─▓└ ─█└ ─▄└ ─ш└ ┼└ ┼*└ ┼:└ ┼k└ ┼Д└ ┼Ъ└ ┼╕└ ┼═└ ┼■└ ╞└ ╞2└ ╞<└ ╞E└ ╞]└ ╞Б└ ╞Э└ ╞▒└ ╞╦└ ╞ї└ ╟└ ╟4└ ╟U└ ╟Д└ ╟н└ ╟╒└ ╟ф└ ╚└ ╚#└ ╚?└ ╚c└ ╚Г└ ╚Т└ ╚Я└ ╚к└ ╚│└ ╚╒└ ╚ў└ ╔└ ╔3└ ╔:└ ╔>└ ╔@└ ╔A└ ╔Й└ ╔Н└ ╔╒└ ╔Ё└ ╔Ї└ ╩└ ╩S└ ╩Я└ ╩г└ ╩°└ ╦└ ╦└ ╦└ ╦└ ╦i└ ╦╖└ ╦├└ ╦Ў└ ╠└ ╠%└ ╠N└ ╠h└ ╠w└ ╠Р└ ╠о└ ╠╦└ ╠ш└ ╠·└ ═└ ═&└ ═9└ ═I└ ═d└ ═З└ ═Ю└ ═┐└ ═╪└ ═▐└ ═▀└ ╬└ ╬└ ╬a└ ╬u└ ╬Ж└ ╬З└ ╬╚└ ╬╬└ ╧└ ╧,└ ╧C└ ╧D└ ╧Л└ ╧╩└ ╧╨└ ╨└ ╨3└ ╨9└ ╨Г└ ╨╔└ ╨ш└ ╨ю└ ╤:└ ╤К└ ╤╓└ ╤Є└ ╤°└ ╥└ ╥-└ ╥.└ ╥d└ ╥j└ ╥╗└ ╙└ ╙:└ ╙@└ ╙└ ╙Е└ ╙╒└ ╙х└ ╙ы└ ╘<└ ╘Й└ ╘к└ ╘░└ ╘╛└ ╘ч└ ╒└ ╒2└ ╒d└ ╒|└ ╒Я└ ╒н└ ╒╕└ ╒р└ ╒ш└ ╒Є└ ╓└ ╓└ ╓^└ ╓d└ ╓│└ ╓с└ ╫└ ╫└ ╫4└ ╫:└ ╫К└ ╫Ч└ ╫┬└ ╫├└ ╫Є└ ╪└ ╪└ ╪Q└ ╪W└ ╪О└ ╪║└ ╪╗└ ╪ц└ ╪ь└ ┘=└ ┘Ж└ ┘╥└ ┌└ ┌V└ ┌\└ ┌s└ ┌П└ ┌Р└ ┌╔└ ┌¤└ ┌■└ █4└ █:└ █Y└ █t└ █u└ █░└ █╬└ █╧└ ▄└ ▄)└ ▄*└ ▄c└ ▄i└ ▄м└ ▄▓└ ▄у└ ▄·└ ▄√└ ▌,└ ▌2└ ▌~└ ▌з└ ▌и└ ▌┤└ ▌█└ ▌Ў└ ▐└ ▐7└ ▐h└ ▐Л└ ▐Х└ ▐░└ ▐╣└ ▐╤└ ▐ї└ ▀└ ▀%└ ▀?└ ▀i└ ▀К└ ▀и└ ▀╔└ ▀°└ р!└ рI└ рX└ рu└ рС└ р╖└ р█└ с└ с└ с└ с(└ с1└ сS└ сu└ сЭ└ с▒└ с╕└ с╝└ с╛└ с┐└ сё└ сї└ т;└ т?└ тИ└ т╘└ у"└ у&└ уt└ у╜└ ф
└ ф└ ф └ фj└ фм└ ф└└ ф─└ х└ х└ х └ х$└ хt└ хК└ х┌└ хч└ ц6└ цL└ цЩ└ цс└ ч└ ч5└ ч;└ чy└ чС└ ча└ ч▓└ ч╩└ ч█└ чэ└ ш└ ш└ ш&└ ш@└ шg└ ш{└ шЦ└ шм└ ш├└ шу└ ш№└ щ└ щ└ щI└ щO└ щЬ└ щ╪└ щ¤└ щ■└ ъ+└ ъ1└ ъВ└ ъХ└ ъ└└ ъ┴└ ъ√└ ы└ ы└ ыT└ ыs└ ыt└ ый└ ы═└ ы╬└ ы∙└ ы └ ьP└ ьЯ└ ьт└ э'└ э-└ эD└ э`└ эa└ эа└ эж└ эў└ ю└ ю└ юb└ юШ└ юЮ└ ю┘└ ю▀└ я.└ я|└ яв└ я├└ я─└ я·└ Ё └ Ё#└ Ё>└ Ё?└ Ёn└ ЁМ└ ЁН└ Ё╞└ Ё·└ Ё√└ ё1└ ёN└ ёO└ ёД└ ёв└ ёг└ ёш└ ёю└ Є:└ ЄY└ Є_└ Єм└ Є╝└ Є▀└ Єр└ є!└ є'└ єj└ єp└ єб└ є╕└ є╣└ є┼└ Ї└ Ї└ Ї4└ Ї:└ Їw└ Ї}└ Ї╝└ Їё└ ї└ ї └ ї!└ їp└ їА└ ї┤└ їт└ їц└ їч└ Ў-└ ЎV└ Ў\└ Ўи└ Ў∙└ ўI└ ўС└ ўр└ ўэ└ ўє└ °7└ °y└ °└ °└└ ∙└ ∙ └ ∙&└ ∙u└ ∙╡└ ∙╗└ ·└ ·6└ ·<└ ·~└ ·╠└ √└ √+└ √1└ √?└ √T└ √Б└ √╚└ √√└ №&└ №/└ №9└ №Z└ №v└ №Т└ №╢└ №┌└ №Є└ ¤└ ¤%└ ¤;└ ¤Y└ ¤s└ ¤М└ ¤г└ ¤─└ ¤█└ ¤Ё└ ■└ ■,└ ■R└ ■h└ ■Г└ ■е└ ■╧└ ■Ё└  
└  ,└  ]└  d└  Е└  н└  ╒└ └ E└ e└ П└ л└ ╫└ ё└└/└K└c└Г└Я└┐└э└└/└C└g└Л└╖└▌└∙└└$└(└)└5└g└Е└┴└ы└Ї└√└ └ └└Q└|└╔└)└~└─└╚└╩└╦└└M└Ч└Ь└└└х└└g└о└╧└└S└n└o└{└Р└з└╦└є└	└	Q└	f└	r└	x└	Э└	╧└	╒└
└
└
└
└
/└
h└
Л└
к└
┐└
├└
─└
╨└└(└[└Д└─└ы└└└^└f└М└╕└╠└└1└?└G└└Е└║└└└└└+└R└Ш└┘└└d└н└√└G└У└▐└)└0└1└E└]└v└Ы└┼└ё└└7└P└q└┼└└j└║└═└5└d└н└о└╨└■└└"└G└i└~└Я└н└╣└║└ї└└>└`└n└z└{└╛└└U└n└л└╩└ы└└h└╣└└#└Ш└░└└└┴└т└└"└.└/└Q└o└ж└╟└ы└└_└Ь└─└ы└└S└w└ъ└
└└.└=└J└K└f└А└М└Н└м└╒└№└└#└$└S└Ж└о└╬└ъ└∙└└└└)└T└q└y└А└Д└Е└Щ└х└ 3└ В└ ╬└  └!%└!J└!Ц└!╤└!ў└".└"4└"P└"T└"U└"h└"И└"├└"Ї└#└#C└#e└#k└#▓└#═└#╤└#╥└$└$I└$l└$Ъ└$├└$╒└% └%L└%P└%Q└%o└%Ы└%┘└%∙└&└&└&g└&И└&Р└&Ц└&Ъ└&Ь└&Э└&у└'└'!└''└'(└'M└'N└'Т└'╨└(└(;└(<└(Б└(┤└(╡└)	└)K└)L└)X└)З└)▐└*+└*k└*╡└+ └+D└+Ы└+┤└+═└+ш└,└,└,`└,к└,ъ└-=└-V└-o└-К└-г└-│└-э└.└.V└.И└.╠└/└/(└/4└/F└/P└/И└/б└/ё└0=└0s└0╡└0щ└1└1└1-└17└1└1╚└2	└2$└2O└2o└2Р└2г└2┌└3└3f└3У└3Я└3░└3╦└3ь└40└4~└4Щ└4п└4╜└4╤└4ё└5└5└5o└5╗└5┘└5х└6└6$└64└6М└6у└7└76└7m└7~└7Щ└7щ└8└8G└8U└8c└8m└8}└8М└8Ы└8б└8в└8╘└8╪└8┌└8█└9└93└97└9E└9I└9З└9╙└:└:(└:Y└:Z└:ж└:╔└:╩└:╓└:№└;D└;l└;p└;q└;}└;ж└;─└;╚└;╩└;╦└<└<C└<]└<a└<е└<Є└<Ў└=E└=Q└=U└=б└=ё└>2└>T└>u└>v└>е└>ж└?└?8└?`└?Е└?м└?╧└?╘└?╒└@└@;└@[└@x└@Ц└@╢└@┌└@√└A└A>└Ac└AЕ└Aи└Aн└Aо└A▄└B└BF└BJ└BK└BЩ└Bу└C=└C└CА└C┴└D└D└DH└DШ└Dч└E!└Ep└E╖└E╜└F└F└F|└F╞└Fх└G└G4└GN└G[└G~└GШ└GЮ└G─└H└H1└Hb└H╡└I└Is└I╥└J0└JL└JЗ└Jф└KE└Kг└L└L└L└L5└Lc└Lб└Lс└LЁ└M=└Mi└Mо└N└NZ└Nr└N▐└Nш└O!└OO└OW└On└OД└O╪└OЇ└P#└PR└PТ└P├└Q└Qw└Q╘└R2└RN└RЙ└Rц└SG└Sе└S░└S╣└S╨└Sц└T└T!└T'└TД└T▀└U└U└U└Ud└UП└Uъ└V5└VВ└V╥└Vы└W4└Wz└W┬└X└XT└XЬ└X▐└Y└YZ└YЬ└Y╓└Z└ZV└ZЪ└Z▐└["└[f└[к└[ю└\2└\v└\║└\■└]B└]К└]╓└^&└^t└^└└_└_^└_▓└`└`Z└`а└`т└a"└ah└a┤└a■└b@└bА└bЗ└b╝└b└└b┴└c └cy└cи└c█└d└d6└d[└dА└dг└d╙└d°└e/└eP└es└eЙ└eС└eЧ└e┼└eў└f*└fQ└fv└fЫ└f╛└fу└g└g3└gV└gl└gt└gz└gм└gт└h└hf└h│└i └iQ└iК└i▒└i╓└i√└j└jC└jv└jЧ└j║└j╨└j╪└j▐└k└kB└kw└kЮ└k├└kш└l└l0└la└lВ└lе└l╗└l├└l╔└m└m└m └m!└mR└mm└mЗ└mд└m╛└m╪└m▐└m▀└m№└n└n2└n3└n?└nw└nг└n╔└nЁ└nЇ└nЎ└nў└oF└oЦ└o└└o┘└o·└p└p(└p9└p?└p@└pL└pИ└pК└pЛ└p└└q	└qL└qQ└qR└q^└qs└q╗└qў└r└r'└r/└r5└rG└rK└rL└rX└rД└rЕ└rС└r┴└rт└r∙└s└s3└sR└sw└sТ└sо└s╚└sў└t└t/└tN└tu└tж└t╥└t └u└u└u&└u/└u6└u:└u;└uG└uj└uЧ└u▐└uъ└uю└uЁ└uё└vA└v}└vБ└v╟└w└wS└wТ└w╔└w╧└w°└x!└x0└xC└x`└xz└xА└xБ└x╩└xЇ└x·└y7└yW└yX└yд└yк└y∙└zI└zU└zn└zo└z{└z┴└{└{└{└{o└{╛└{╪└{▐└|#└|)└|9└|?└|Т└|д└|э└}F└}J└}K└}Я└}ъ└~└~
└~c└~С└~Ч└~з└~н└~щ└└_└д└┤└╨└ь└А=└АВ└А╒└Б%└Бq└Б├└Бч└Б └В
└В└В%└В/└ВC└ВG└ВI└ВJ└ВШ└В┼└В╔└Г└ГL└ГP└ГИ└Г┘└Д'└Дn└Д┐└Е└ЕX└Ев└Еы└Ж7└Жr└ЖЕ└ЖЙ└ЖЧ└ЖЫ└Жщ└З-└Зd└З|└ЗМ└ЗЩ└ЗЬ└ЗЭ└Зс└И1└Иf└Иj└И╣└Й└ЙR└ЙХ└Йх└К"└К&└Кs└К╜└Л└Л8└Л<└ЛН└Л╘└М└М3└М7└МИ└М┘└Н'└НI└НM└НЦ└Н▀└О-└О{└О╠└П└ПS└ПW└П▒└П┴└П╘└Р└Р6└Р<└Рe└РГ└РХ└Рд└Р╠└Р╥└Р╙└С└С
└СR└СЫ└Сб└Сэ└Т>└ТК└Т█└У+└Уy└У╔└Ф└Ф└Ф └Ф0└Ф6└ФГ└Ф╬└Х└Хm└Х╖└Х▄└ХЄ└Хє└Ц3└Ц9└ЦВ└Ц┐└Ц└└Ч└Ч9└Ч?└ЧИ└Ч╒└Ш%└Шl└Шr└Ш┬└Ш╚└Щ└Щi└Щ╖└Щы└Ъ└Ъ└ЪS└ЪY└Ъв└Ъъ└Ъы└Ы5└ЫВ└Ы╤└Ь"└Ь(└Ьx└ЬЭ└Ь╖└Ь╔└Ь╪└Ь▐└Ьє└Э└Э└ЭZ└ЭО└Эг└Э╣└Э╫└ЭЁ└ЮK└Ю_└Юг└Ює└Я └Я-└ЯЙ└ЯФ└ЯЭ└Яд└Яи└Яй└Я°└а└а└аl└а╢└а╝└б└бc└бБ└б╖└б╓└в$└в=└вq└вв└в┼└в·└гK└гx└г╢└г╘└гЎ└д└д/└д7└д[└дВ└дФ└дЬ└д─└д¤└е└е└е3└еА└е╔└ж└жU└жo└жа└жи└жї└зD└зa└зg└зН└з▒└з╡└з╢└з┬└и└и└и└иc└иС└иХ└иЦ└ив└ич└й└йF└йJ└йL└йM└йФ└й▒└й╧└й√└к└к?└кp└кТ└кУ└кЯ└к┤└к╦└кЇ└л└л^└лd└л└лГ└лД└лР└лг└лЁ└м└м1└мZ└м└мЯ└м╡└мў└м¤└н└н└н└н#└нD└нg└нС└нЯ└не└нх└о└оR└оt└оx└оy└оЕ└о╛└оф└п└п,└п2└п6└п7└пW└пЭ└п╣└п▌└░└░"└░+└░=└░A└░B└░m└░Ш└░к└░╒└░∙└▒└▒9└▒K└▒O└▒P└▒v└▒б└▒╚└▒ы└▓7└▓J└▓Q└▓Л└▓╜└│└│,└│z└│╩└│№└┤Н└┤ч└╡!└╡F└╡о└╡╣└╡┬└╡╚└╡╠└╡═└╡ь└╢.└╢B└╢`└╢Г└╢М└╢У└╢Ч└╢Ш└╢д└╢╦└╖└╖G└╖K└╖M└╖N└╖Х└╖к└╖о└╕ └╕P└╕Ю└╕┼└╕Ї└╣└╣"└╣]└╣v└╣Ф└╣┤└╣╩└╣с└╣Ї└║└║4└║D└║J└║K└║y└║└║╗└║╘└║╒└╗$└╗q└╗Ч└╗┤└╗╡└╗ь└╝	└╝
└╝@└╝^└╝_└╝о└╝┬└╝ю└╝я└╜;└╜Z└╜z└╜{└╜п└╜╩└╜╦└╛
└╛!└╛"└╛.└╛U└╛Ш└╛╟└╛ф└┐└┐%└┐:└┐c└┐~└┐Ч└┐н└┐┘└┐∙└└.└└O└└i└└М└└░└┴-└┴Q└┴h└┴}└┴Р└┴Я└┴м└┴╖└┴└└┴═└┴у└┬└┬'└┬X└┬u└┬К└┬ └├└├*└├5└├>└├D└├E└├e└├Ю└├╕└├╩└├ь└├ └─J└─k└─x└─и└─╗└┼└┼└┼b└┼}└┼░└┼┴└┼╨└┼▌└╞└╞└╞e└╞Д└╞╘└╟└╟└╟└╟'└╟.└╟P└╟╢└╟╝└╟╓└╟┌└╟█└╟ч└╚,└╚W└╚─└╔└╔^└╔b└╔d└╔e└╔░└╔╚└╔■└╩└╩2└╩S└╩p└╩У└╩│└╩╥└╩ё└╦└╦5└╦;└╦<└╦З└╦а└╦б└╦█└╠ └╠└╠I└╠n└╠o└╠╛└╠╔└╠щ└╠ъ└═└═=└═>└═К└═Ь└═─└═┼└╬└╬4└╬5└╬X└╬r└╬s└╬Я└╬┐└╬└└╬╠└╧└╧a└╧В└╧└└╧я└╧Ў└╧·└╧√└╨└╨A└╨g└╨▒└╨╨└╤└╤└╤└╤=└╤Х└╤╗└╤ъ└╥└╥o└╥Я└╥к└╥╣└╥ц└╥ю└╙└╙8└╙V└╙u└╙Х└╙╡└╙╒└╙ц└╙ю└╙√└╘E└╘d└╘Г└╘Й└╘К└╘Ў└╒B└╒z└╒╞└╒°└╓C└╓П└╓т└╫-└╫{└╫З└╫╖└╫ └╪└╪(└╪D└╪У└╪╥└┘└┘"└┘3└┘x└┘Э└┘│└┘╞└┘ш└┘Ї└┘■└┌"└┌R└┌Е└┌Ц└┌ь└█└█&└█9└█n└█z└█Д└█М└█Т└█─└█·└▄└▄"└▄9└▄h└▄И└▄Ь└▄н└▄╠└▄╓└▄ў└▌6└▌S└▌и└▌▐└▐	└▐└▐2└▐>└▐O└▐Д└▐О└▐Ц└▐Ь└▐╡└▐╣└▐║└▐╞└▐ў└▀'└▀]└▀Л└▀┼└▀∙└р+└р]└рЫ└р╪└р▄└р▌└с└с=└сf└с╕└с╥└с┌└ср└сЇ└с°└с·└с√└т7└т;└тК└тк└т╘└тщ└у└у)└уH└уp└уМ└уТ└уУ└у┘└уў└у°└ф.└ф4└фS└фn└фo└ф╬└фы└фё└хH└хЩ└х╛└х┐└хы└ц└ц└цE└цK└ц{└цЪ└цЫ└цз└ц▀└цс└цт└ч└чN└чO└ч[└чn└чО└чг└чз└чи└ч┤└ч█└ш5└шН└ш▌└шф└щ└щ└щ`└щ┐└щ┼└щ╞└ъ└ъ9└ъV└ъЧ└ъв└ъл└ъ▒└ъ▓└ы└ыn└ы╥└ь.└ьЖ└ь┌└э2└эИ└э¤└ю%└юГ└юк└я	└яP└яУ└я┌└Ё └ЁN└Ёz└Ё│└Ёъ└ё+└ёi└ёj└ё╕└ё╬└ё∙└Є&└Є_└ЄЪ└Єг└Єк└Є╟└є
└є+└єi└єЙ└єй└є┤└є╝└є▐└Ї└Ї>└Ї`└Їk└Їs└Їy└Їz└Ї╔└ї└ї-└їZ└їЛ└ї┬└їя└Ў└Ў└Ў	└Ў5└ЎL└Ўj└ЎА└Ўа└Ў┬└Ўю└ўG└ўr└ўК└ўо└ў╘└°└°5└°V└°М└°Ы└°╟└°є└∙└∙:└∙h└∙Ш└∙╧└∙ю└·0└·o└·в└·╓└·■└√└√&└√7└√F└√S└√^└√g└√n└√o└√Ш└√╝└√щ└№└№C└№]└№f└№l└№m└№И└№▒└№╔└№╨└№╘└№╒└¤└¤6└¤n└¤е└¤м└¤░└¤▓└¤│└¤ы└■└■'└■A└■^└■{└■Ы└■╛└■▐└ └ &└ ,└ -└ N└ l└ К└ и└ ╚└ у└ └ +└ ,└ 8└ _└ б└ х└J└к└·└└G└д└к└ └└:└{└Ж└П└Х└Ц└╒└E└L└M└u└▄└=└d└├└
└M└Ф└┌└└4└m└д└╓└└^└└└┴└х└	└	(└	z└	╔└
,└
2└
w└
x└
Т└
║└
р└
щ└└K└s└Ф└╕└т└@└j└М└║└т└└`└m└Й└м└└:└Y└h└И└л└ш└	└6└[└{└о└└└A└z└б└═└ └7└}└л└┬└╫└ъ└√└
└└"└+└2└3└P└{└Х└┴└╫└р└ц└ч└∙└¤└ └ └A└p└ж└╥└╙└└└ └Й└К└Ц└╦└═└╬└└%└)└X└\└Ш└Ь└ъ└Ї└7└E└]└Б└┤└у└└└└ └1└9└}└М└О└П└╓└ю└└.└M└`└Б└в└┴└т└Ў└·└№└¤└F└J└Ш└с└)└K└b└d└e└f└П└▄└)└t└Д└Ь└Ю└Я└╩└╦└└R└z└н└о└█└■└└J└Ы└╬└╒└╓└└c└d└В└Г└┼└╞└╥└└O└S└T└`└У└╨└╘└╒└с└ └ `└ d└ e└ q└ н└ ь└!└!J└!S└!Z└!^└!_└!k└!▒└!│└!┤└!ц└"└"└"H└"d└"Ч└"Ю└"Я└"╜└"╛└# └#A└#B└#N└#Е└#╚└#╠└#═└#ъ└#ы└$└$└$└$L└$Б└$Е└$Ж└$Т└$╔└%└%I└%}└%Е└%╣└%█└%у└&└&9└&A└&u└&Ч└&Я└&┐└&╟└&╦└&╠└&╪└'	└'T└'Й└'╜└'┼└'∙└("└(*└(^└(З└(П└(├└(ь└(Ї└)└)#└)'└)(└)B└)C└)O└)└)╕└)╝└)╜└)╔└)·└*7└*;└*<└*H└*y└*┐└*├└*─└*╨└+	└+7└+[└+Т└+╜└+╟└+Ё└+∙└, └,└,└,└,E└,s└,Ч└,═└-└-└-B└-x└-В└-╕└-э└-ў└.└.#└.*└..└./└.;└.v└.╦└.╧└.╨└.х└.ц└.Є└/'└/└/Г└/Д└/Р└/ц└/ч└/є└0J└0K└0W└0Л└0х└1└1]└1a└1b└1n└1╡└1╢└1ю└2*└2m└2╖└3└3h└3╛└4└4*└4q└4w└4╞└5└5$└5z└5╘└6 └61└6L└6Х└6Я└6╨└6ы└7└7&└7g└7|└7Г└7З└7Й└7К└7┤└7╘└7с└8 └8q└8Я└8ж└8з└8т└94└95└9S└9T└9Ц└9Ч└9г└9┘└: └:$└:%└:1└:i└:░└:┤└:╡└:┴└:Ї└;1└;5└;6└;B└;~└;╜└<└<└<└<└< └<f└<h└<i└<Т   А╜/// @docImport 'package:flutter/cupertino.dart';
///
/// @docImport 'app.dart';
/// @docImport 'checkbox_theme.dart';
/// @docImport 'dropdown_menu.dart';
/// @docImport 'radio_theme.dart';БmБД БК  Б┤  Б▌  В  В.  ВV  Вr  ВХ  Вн  В╔  В▀  В°  Г  Г%  Г=  Гc  ГБ  ГЯ  Г└  Г┌  ГЇ  Д	  Д"  Д=  ДW  Дl    ОNбвУюЕЩ/// A widget used to mark the "anchor" for a set of submenus, defining the
/// rectangle used to position the menu, which can be done either with an
/// explicit location, or with an alignment.
///
/// When creating a menu with [MenuBar] or a [SubmenuButton], a [MenuAnchor] is
/// not needed, since they provide their own internally.
///
/// The [MenuAnchor] is meant to be a slightly lower level interface than
/// [MenuBar], used in situations where a [MenuBar] isn't appropriate, or to
/// construct widgets or screen regions that have submenus.
///
/// {@tool dartpad}
/// This example shows how to use a [MenuAnchor] to wrap a button and open a
/// cascading menu from the button.
///
/// ** See code in examples/api/lib/material/menu_anchor/menu_anchor.0.dart **
/// {@end-tool}
///
/// {@tool dartpad}
/// This example shows how to use a [MenuAnchor] to create a cascading context
/// menu in a region of the view, positioned where the user clicks the mouse
/// with Ctrl pressed. The [anchorTapClosesMenu] attribute is set to true so
/// that clicks on the [MenuAnchor] area will cause the menus to be closed.
///
/// ** See code in examples/api/lib/material/menu_anchor/menu_anchor.1.dart **
/// {@end-tool}
///
/// {@tool dartpad}
/// This example demonstrates a simplified cascading menu using the [MenuAnchor]
/// widget.
///
/// ** See code in examples/api/lib/material/menu_anchor/menu_anchor.3.dart **
/// {@end-tool} ФВs ФsФ}R/// Creates a const [MenuAnchor].
///
/// The [menuChildren] argument is required.ФД	ФЛ  ФУФЩ  ФиФо  Ф┴
Ф╟  Ф╤"Ф╫  Ф∙Ф   Х!Х  Х4АЫХ╡  Х╒Х█  Х∙Х   Ц
Ц  Ц"Ц"  ЦDЦS  ЦdЦj  Цv
Ц|  ФшФюФяХ!Х%Х&Х4Х5Х?ХйХGХoХ╩ХюЦ:ЦЛАГЧ^/// An optional controller that allows opening and closing of the menu from
/// other widgets. ЧБяШЇБ╜/// The [childFocusNode] attribute is the optional [FocusNode] also associated
/// to the [child] or [builder] widget that opens the menu.
///
/// The focus node should be attached to the widget that should receive focus
/// if keyboard focus traversal moves the focus off of the submenu with the
/// arrow keys.
///
/// If not supplied, then keyboard traversal from the menu back to the
/// controlling button when the menu is open is disabled. ЩАыЩэА╩/// The [MenuStyle] that defines the visual attributes of the menu bar.
///
/// Colors and sizing of the menus is controllable via the [MenuStyle].
///
/// Defaults to the ambient [MenuThemeData.style]. ЩўД&ЮГ▄/// {@template flutter.material.MenuAnchor.alignmentOffset}
/// The offset of the menu relative to the alignment origin determined by
/// [MenuStyle.alignment] on the [style] attribute and the ambient
/// [Directionality].
///
/// Use this for adjustments of the menu placement.
///
/// Increasing [Offset.dy] values of [alignmentOffset] move the menu position
/// down.
///
/// If the [MenuStyle.alignment] from [style] is not an [AlignmentDirectional]
/// (e.g. [Alignment]), then increasing [Offset.dx] values of
/// [alignmentOffset] move the menu position to the right.
///
/// If the [MenuStyle.alignment] from [style] is an [AlignmentDirectional],
/// then in a [TextDirection.ltr] [Directionality], increasing [Offset.dx]
/// values of [alignmentOffset] move the menu position to the right. In a
/// [TextDirection.rtl] directionality, increasing [Offset.dx] values of
/// [alignmentOffset] move the menu position to the left.
///
/// Defaults to [Offset.zero].
/// {@endtemplate} Ю"БЯ(Аъ/// An optional [LayerLink] to attach the menu to the widget that this
/// [MenuAnchor] surrounds.
///
/// When provided, the menu will follow the widget that this [MenuAnchor]
/// surrounds if it moves because of view insets changes. Я6vЯаX/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.hardEdge]. Я▒Е}еД├/// Whether the menus will be closed if the anchor area is tapped.
///
/// For menus opened by buttons that toggle the menu, if the button is tapped
/// when the menu is open, the button should close the menu. But if
/// [anchorTapClosesMenu] is true, then the menu will close, and
/// (surprisingly) immediately re-open. This is because tapping on the button
/// closes the menu before the `onPressed` or `onTap` handler is called
/// because of it being considered to be "outside" the menu system, and then
/// the button (seeing that the menu is closed) immediately reopens the menu.
/// The result is that the user thinks that tapping on the button does
/// nothing. So, for button-initiated menus, this value is typically false so
/// that the menu anchor area is considered "inside" of the menu system and
/// doesn't cause it to close unless [MenuController.close] is called.
///
/// For menus that are positioned using [MenuController.open]'s `position`
/// parameter, it is often desirable that clicking on the anchor always closes
/// the menu since the anchor area isn't usually considered part of the menu
/// system by the user. In this case [anchorTapClosesMenu] should be true.
///
/// Defaults to false.дЭдЮдиедод╘е3Блж═Б|/// Whether or not a tap event that closes the menu will be permitted to
/// continue on to the gesture arena.
///
/// If false, then tapping outside of a menu when the menu is open will both
/// close the menu, and allow the tap to participate in the gesture arena. If
/// true, then it will only close the menu, and the tap event will be
/// consumed.
///
/// Defaults to false. жуTз17/// A callback that is invoked when the menu is opened. з<UзК7/// A callback that is invoked when the menu is closed. зЦБжй&Бx/// Determine if the menu panel can be wrapped by a [UnconstrainedBox] which allows
/// the panel to render at its "natural" size.
///
/// Defaults to true as it allows developers to render the menu panel at the
/// size it should be. When it is set to false, it can be useful when the menu should
/// be constrained in both main axis and cross axis, such as a [DropdownMenu]. йAА╪кА░/// A list of children containing the menu items that are the contents of the
/// menu surrounded by this [MenuAnchor].
///
/// {@macro flutter.material.MenuBar.shortcuts_note} кБSлjБ/// The widget that this [MenuAnchor] surrounds.
///
/// Typically this is a button used to open the menu by calling
/// [MenuController.open] on the `controller` passed to the builder.
///
/// If not supplied, then the [MenuAnchor] will be the size that its parent
/// allocates for it. лvБkм▄БK/// The optional child to be passed to the [builder].
///
/// Supply this child if there is a portion of the widget tree built in
/// [builder] that doesn't depend on the `controller` or `context` supplied to
/// the [builder]. It will be more efficient, since Flutter doesn't then need
/// to rebuild this child when those change.  мцBн   мцмчн,АгнN   н,н-н╙Внф  н°&о  н╙н╘ пЄйПп°   	▒z▒A ▒N▒W▒h▒X▒i▒Ш▒t▒j▒Г▒К▒v▒Е▒М▒Э▒п  ▒║(▒╘  ▒ц'▒Ў  ▓C▓. ▓R▓S▓@▓Q▓A▓X▓h  ▓{▓Б  ▓ОАЕ▓м 
▓┴▓╪│▓у▓┘▓Є▓∙▓х▓Ї▓√││  │0'│9    │Z1│c    │О$│Ч    │╡T│╚    └ DuБ>└ DД    └ E╖Б=└ E╞    └ IОАв└ Iг    ┤Б&┤   ┤┤╡7БW╡H   ╡7╡8╢ТВ╜╢г   ╢Т╢У╣SВ)╣d  ╣t╣А  ╣S╣T╗АЖ┼╗У  ╗Щ╗з  ╗А╗Б└ BIБ▓└ BP  └ B_└ Bm   └ F°БB└ F¤  └ G└ G   └ H>БL└ HC  └ HP└ Hb   └ J4Б╙└ J9    └ LА╬└ L    └ L▌Б└ Lт    └ M·ДЯ└ O{Бk/// Open the menu, optionally at a position relative to the [MenuAnchor].
///
/// Call this when the menu should be shown to the user.
///
/// The optional `position` argument will specify the location of the menu in
/// the local coordinates of the [MenuAnchor], ignoring any
/// [MenuStyle.alignment] and/or [MenuAnchor.alignmentOffset] that were
/// specified. └ OВ└ OЛ   └ RЭД└ S!v/// Close the menu.
///
/// Call this when the menu should be closed. Has no effect if the menu is
/// already closed. └ S)└ S/  └ S:└ V╕Б└ V╜  └ V═└ V╙  └ V▐└ XsАР└ XМ  └ XХ└ Xг   └ Yx└ Y  └ Y$0└ Y5  └ Y└ Y└ Y?└ YN└ YO └ YГИ╔└ [СВ/// A controller to manage a menu created by a [MenuBar] or [MenuAnchor].
///
/// A [MenuController] is used to control and interrogate a menu after it has
/// been created, with methods such as [open] and [close], and state accessors
/// like [isOpen].
///
/// See also:
///
/// * [MenuAnchor], a widget that defines a region that has submenu.
/// * [MenuBar], a widget that creates a menu bar, that can take an optional
///   [MenuController].
/// * [SubmenuButton], a widget that has a button that manages a submenu.  └ [дА▒└ \NАП/// The anchor that this controller controls.
///
/// This is set automatically when a [MenuController] is given to the anchor
/// it controls. └ \ZАЛ└ \Я9/// Whether or not the associated menu is currently open.   └ \щВ └ ^иБз/// Close the menu that this menu controller is associated with.
///
/// Associating with a menu is done by passing a [MenuController] to a
/// [MenuAnchor]. A [MenuController] is also be received by the
/// [MenuAnchor.builder] when invoked.
///
/// If the menu's anchor point (either a [MenuBar] or a [MenuAnchor]) is
/// scrolled by an ancestor, or the view changes size, then any open menu will
/// automatically close.   └ ^эВВ└ aВ/// Opens the menu that this menu controller is associated with.
///
/// If `position` is given, then the menu will open at the position given, in
/// the coordinate space of the [MenuAnchor] this controller is attached to.
///
/// If given, the `position` will override the [MenuAnchor.alignmentOffset]
/// given to the [MenuAnchor].
///
/// If the menu's anchor point (either a [MenuBar] or a [MenuAnchor]) is
/// scrolled by an ancestor, or the view changes size, then any open menu will
/// automatically close. └ a└ a   └ aбA└ aж  └ aо└ a└   └ aцd└ aы  └ aє└ b    └ bNФ▀└ o┤Н_/// A menu bar that manages cascading child menus.
///
/// This is a Material Design menu bar that typically resides above the main
/// body of an application (but can go anywhere) that defines a menu system for
/// invoking callbacks in response to user selection of a menu item.
///
/// The menus can be opened with a click or tap. Once a menu is opened, it can
/// be navigated by using the arrow and tab keys or via mouse hover. Selecting a
/// menu item can be done by pressing enter, or by clicking or tapping on the
/// menu item. Clicking or tapping on any part of the user interface that isn't
/// part of the menu system controlled by the same controller will cause all of
/// the menus controlled by that controller to close, as will pressing the
/// escape key.
///
/// When a menu item with a submenu is clicked on, it toggles the visibility of
/// the submenu. When the menu item is hovered over, the submenu will open, and
/// hovering over other items will close the previous menu and open the newly
/// hovered one. When those open/close transitions occur,
/// [SubmenuButton.onOpen], and [SubmenuButton.onClose] are called on the
/// corresponding [SubmenuButton] child of the menu bar.
///
/// {@template flutter.material.MenuBar.shortcuts_note}
/// Menus using [MenuItemButton] can have a [SingleActivator] or
/// [CharacterActivator] assigned to them as their [MenuItemButton.shortcut],
/// which will display an appropriate shortcut hint. Even though the shortcut
/// labels are displayed in the menu, shortcuts are not automatically handled.
/// They must be available in whatever context they are appropriate, and handled
/// via another mechanism.
///
/// If shortcuts should be generally enabled, but are not easily defined in a
/// context surrounding the menu bar, consider registering them with a
/// [ShortcutRegistry] (one is already included in the [WidgetsApp], and thus
/// also [MaterialApp] and [CupertinoApp]), as shown in the example below. To be
/// sure that selecting a menu item and triggering the shortcut do the same
/// thing, it is recommended that they call the same callback.
///
/// {@tool dartpad} This example shows a [MenuBar] that contains a single top
/// level menu, containing three items: "About", a checkbox menu item for
/// showing a message, and "Quit". The items are identified with an enum value,
/// and the shortcuts are registered globally with the [ShortcutRegistry].
///
/// ** See code in examples/api/lib/material/menu_anchor/menu_bar.0.dart **
/// {@end-tool}
/// {@endtemplate}
///
/// {@macro flutter.material.MenuAcceleratorLabel.accelerator_sample}
///
/// See also:
///
/// * [MenuAnchor], a widget that creates a region with a submenu and shows it
///   when requested.
/// * [SubmenuButton], a menu item which manages a submenu.
/// * [MenuItemButton], a leaf menu item which displays the label, an optional
///   shortcut label, and optional leading and trailing icons.
/// * [PlatformMenuBar], which creates a menu bar that is rendered by the host
///   platform instead of by Flutter (on macOS, for example).
/// * [ShortcutRegistry], a registry of shortcuts that apply for the entire
///   application.
/// * [VoidCallbackIntent], to define intents that will call a [VoidCallback] and
///   work with the [Actions] and [Shortcuts] system.
/// * [CallbackShortcuts], to define shortcuts that call a callback without
///   involving [Actions]. └ o╪А┌ └ p0└ p7K/// Creates a const [MenuBar].
///
/// The [children] argument is required.└ p>	└ pE  └ pM
└ pS  └ p]└ pc  └ pА└ pЖ  └ pХ└ pд  └ pq└ pu└ pv└ p╢Аы└ qЬА╩/// The [MenuStyle] that defines the visual attributes of the menu bar.
///
/// Colors and sizing of the menus is controllable via the [MenuStyle].
///
/// Defaults to the ambient [MenuThemeData.style]. └ qжr└ rT/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.none]. └ rU└ rh2/// The [MenuController] to use for this menu bar. └ rwБ╡└ t$БЙ/// The list of menu items that are the top level children of the [MenuBar].
///
/// A Widget in Flutter is immutable, so directly modifying the [children]
/// with [List] APIs such as `someMenuBarWidget.menus.add(...)` will result in
/// incorrect behaviors. Whenever the menus list is modified, a new list
/// object must be provided.
///
/// {@macro flutter.material.MenuBar.shortcuts_note}  └ t1Ає└ tD  └ tJ└ tX  └ t1└ t2└ u(А╚└ uJ   └ u(└ u)└ uЇБ7└ v  └ v&└ v6  └ uЇ└ uї └ w/зH└ {─ДО/// A button for use in a [MenuBar], in a menu created with [MenuAnchor], or on
/// its own, that can be activated by click or keyboard navigation.
///
/// This widget represents a leaf entry in a menu hierarchy that is typically
/// part of a [MenuBar], but may be used independently, or as part of a menu
/// created with a [MenuAnchor].
///
/// {@macro flutter.material.MenuBar.shortcuts_note}
///
/// See also:
///
/// * [MenuBar], a class that creates a top level menu bar in a Material Design
///   style.
/// * [MenuAnchor], a widget that creates a region with a submenu and shows it
///   when requested.
/// * [SubmenuButton], a menu item similar to this one which manages a submenu.
/// * [PlatformMenuBar], which creates a menu bar that is rendered by the host
///   platform instead of by Flutter (on macOS, for example).
/// * [ShortcutRegistry], a registry of shortcuts that apply for the entire
///   application.
/// * [VoidCallbackIntent], to define intents that will call a [VoidCallback] and
///   work with the [Actions] and [Shortcuts] system.
/// * [CallbackShortcuts] to define shortcuts that call a callback without
///   involving [Actions]. └ {юВ └ |K└ |YP/// Creates a const [MenuItemButton].
///
/// The [child] attribute is required.└ |`	└ |g  └ |o└ |u  └ |Г└ |Й  └ |Х└ |Ы  └ |║└ |└  └ |╥└ |╪  └ |ц└ |ь  └ }└ }  └ }└ }  └ }.
└ }4  └ }>└ }D  └ }Y└ }_  └ }|└ }В  └ }Т└ }Ш  └ }й└ }п  └ }╩#└ }╨  └ }є
└ }∙  	└ |░└ |ў└ }m└ }q└ }r└ }└└ }▐└ }т└ }у└ ~А№└ ~√А╨/// Called when the button is tapped or otherwise activated.
///
/// If this callback is null, then the button will be disabled.
///
/// See also:
///
///  * [enabled], which is true if the button is enabled. └ 	Аъ└ ьА└/// Called when a pointer enters or exits the button response area.
///
/// The value passed to the callback is true if a pointer has entered button
/// area and false if a pointer has exited. └ °k└ АPF/// Determine if hovering can request focus.
///
/// Defaults to true. └ АhА╖└ БАЗ/// Handler called when the focus changes.
///
/// Called with true if this widget's node gains focus, and false if it loses
/// focus. └ Б$I└ Бd,/// {@macro flutter.widgets.Focus.focusNode} └ БrC└ Бм,/// {@macro flutter.widgets.Focus.autofocus} └ Б║Ае└ ВWv/// The optional shortcut that selects this [MenuItemButton].
///
/// {@macro flutter.material.MenuBar.shortcuts_note} └ ВdВy└ Д╧ВB/// An optional Semantics label, applied to the entire [MenuItemButton].
///
/// A screen reader will default to reading the derived text on the
/// [MenuItemButton] itself, which is not guaranteed to be readable.
/// (For some shortcuts, such as comma, semicolon, and other
/// punctuation, screen readers read silence).
///
/// Setting this label overwrites the semantics properties of the entire
/// Widget, including its children. Consider wrapping this widget in
/// [Semantics] if you want to customize other properties besides just
/// the label.
///
/// Null by default. └ ДтБО└ ЖkБe/// Customizes this button's appearance.
///
/// Non-null properties of this style override the corresponding properties in
/// [themeStyleOf] and [defaultStyleOf]. [WidgetStateProperty]s that resolve
/// to non-null values will similarly override the corresponding
/// [WidgetStateProperty]s in [themeStyleOf] and [defaultStyleOf].
///
/// Null by default. └ Жui└ Ж╬6/// {@macro flutter.material.inkwell.statesController} └ Жуr└ ЗIT/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.none]. └ ЗZU└ Зд9/// An optional icon to display before the [child] label. └ З┤U└ З¤8/// An optional icon to display after the [child] label. └ ИАт└ ИсА╗/// {@template flutter.material.menu_anchor.closeOnActivate}
/// Determines if the menu will be closed when a [MenuItemButton]
/// is pressed.
///
/// Defaults to true.
/// {@endtemplate} └ ИїБж└ КПБz/// The direction in which the menu item expands.
///
/// If the menu item button is a descendent of [MenuAnchor] or [MenuBar], then
/// this property is ignored.
///
/// If [overflowAxis] is [Axis.vertical], the menu will be expanded vertically.
/// If [overflowAxis] is [Axis.horizontal], then the menu will be
/// expanded horizontally.
///
/// Defaults to [Axis.horizontal]. └ КаА╠└ ЛgАо/// The widget displayed in the center of this button.
///
/// Typically this is the button's label, using a [Text] widget.
///
/// {@macro flutter.widgets.ProxyWidget.child} └ ЛqАй└ Л¤|/// Whether the button is enabled or disabled.
///
/// To enable a button, set its [onPressed] property to a non-null value.   └ МJ└ М@   └ М└ М└ МlБ└ Н/Ам/// Defines the button's default appearance.
///
/// {@macro flutter.material.text_button.default_style_of}
///
/// {@macro flutter.material.text_button.material3_defaults} └ Н>└ НL   └ НИА┬└ НЇZ/// Returns the [MenuButtonThemeData.style] of the closest
/// [MenuButtonTheme] ancestor. └ О└ О   └ ОNНC└ Ф╕Ж
/// A static convenience method that constructs a [MenuItemButton]'s
/// [ButtonStyle] given simple values.
///
/// The [foregroundColor] color is used to create a [WidgetStateProperty]
/// [ButtonStyle.foregroundColor] value. Specify a value for [foregroundColor]
/// to specify the color of the button's icons. Use [backgroundColor] for the
/// button's background fill color. Use [disabledForegroundColor] and
/// [disabledBackgroundColor] to specify the button's disabled icon and fill
/// color.
///
/// Similarly, the [enabledMouseCursor] and [disabledMouseCursor]
/// parameters are used to construct [ButtonStyle.mouseCursor].
///
/// The [iconColor], [disabledIconColor] are used to construct
/// [ButtonStyle.iconColor] and [iconSize] is used to construct
/// [ButtonStyle.iconSize].
///
/// All of the other parameters are either used directly or used to create a
/// [WidgetStateProperty] with a single value for all states.
///
/// All parameters default to null, by default this method returns a
/// [ButtonStyle] that doesn't override anything.
///
/// For example, to override the default foreground color for a
/// [MenuItemButton], as well as its overlay color, with all of the standard
/// opacity adjustments for the pressed, focused, and hovered states, one
/// could write:
///
/// ```dart
/// MenuItemButton(
///   leadingIcon: const Icon(Icons.pets),
///   style: MenuItemButton.styleFrom(foregroundColor: Colors.green),
///   onPressed: () {
///     // ...
///   },
///   child: const Text('Button Label'),
/// ),
/// ``` └ Ф╚└ Ф╨  └ Фф└ Фь  └ Х └ Х  └ Х$└ Х,  └ ХH└ ХP  └ Х`└ Хh  └ Х}└ ХЕ  └ ХУ└ ХЬ  └ Хй└ Х▒  └ Х╟└ Х╙  └ Хс└ Хщ  └ Х·└ Ц  └ Ц└ Ц&  └ Ц2└ Ц9  └ ЦI└ ЦP  └ Ц^└ Цe  └ Цu└ ЦГ  └ ЦЪ └ Ци  └ Ц└└ Ц═  └ Ц╓└ Цч  └ Цё└ Ч  └ Ч$└ Ч+  └ Ч=└ ЧH  └ Ч^└ Чe  └ Чx└ ЧМ  └ ЧЪ+└ Ч╣   └ ЫХВр└ Ыж  └ Ы║&└ Ы╫  └ ЫХ└ ЫЦ └ ЮyСщ└ Ю   └ Я└ Я  └ Я╡└ Я║ └ Я╟└ Я'D└ Я5    └ ЯnD└ ЯД    	└ Я╤АС└ Ят   └ Я╤└ Я╥└ аfАк└ аw   └ аf└ аg└ бБ╩└ б%  └ б5└ бE  └ б└ б└ втЖw└ вї  └ в√└ г	  └ вт└ ву└ й]А╛└ йb    └ кАО└ к$  └ к7└ кI   └ лВ└ л  └ л1└ лD   └ н4В)└ н9    └ пaА └ пf     └ ░dШ█└ ▓╝ВQ/// A menu item that combines a [Checkbox] widget with a [MenuItemButton].
///
/// To style the checkbox separately from the button, add a [CheckboxTheme]
/// ancestor.
///
/// {@tool dartpad}
/// This example shows a menu with a checkbox that shows a message in the body
/// of the app if checked.
///
/// ** See code in examples/api/lib/material/menu_anchor/checkbox_menu_button.0.dart **
/// {@end-tool}
///
/// See also:
///
/// - [MenuBar], a widget that creates a menu bar of cascading menu items.
/// - [MenuAnchor], a widget that defines a region which can host a cascading
///   menu. └ ▓ыВ └ │h└ │zp/// Creates a const [CheckboxMenuButton].
///
/// The [child], [value], and [onChanged] attributes are required.└ │Б	└ │И  └ │Р└ │Я  └ │й└ │п  └ │─└ │╩  └ │▐└ │э  └ │√└ ┤  └ ┤└ ┤  └ ┤%└ ┤+  └ ┤9└ ┤?  └ ┤L
└ ┤R  └ ┤\└ ┤b  └ ┤w└ ┤}  └ ┤Ъ└ ┤а  └ ┤▒└ ┤╖  └ ┤╥└ ┤с  └ │╣└ │╙└ ┤Л└ ┤П└ ┤Р└ ┤╚└ ┤ЁА╦└ ╡╢А▒/// Whether this checkbox is checked.
///
/// When [tristate] is true, a value of null corresponds to the mixed state.
/// When [tristate] is false, this value must not be null. └ ╡└В└ ╖╦Бы/// If true, then the checkbox's [value] can be true, false, or null.
///
/// [CheckboxMenuButton] displays a dash when its value is null.
///
/// When a tri-state checkbox ([tristate] is true) is tapped, its [onChanged]
/// callback will be applied to true if the current value is false, to null if
/// value is true, and to false if value is null (i.e. it cycles through false
/// => true => null => false when tapped).
///
/// If tristate is false (the default), [value] must not be null. └ ╖╪Б└ ╕ъА·/// True if this checkbox wants to show an error state.
///
/// The checkbox will have different default container color and check color when
/// this is true. This is only used when [ThemeData.useMaterial3] is set to true.
///
/// Defaults to false. └ ╕ЎДS└ ╜@ГЇ/// Called when the value of the checkbox should change.
///
/// The checkbox passes the new value to the callback but does not actually
/// change state until the parent widget rebuilds the checkbox with the new
/// value.
///
/// If this callback is null, the menu item will be displayed as disabled
/// and will not respond to input gestures.
///
/// When the checkbox is tapped, if [tristate] is false (the default) then the
/// [onChanged] callback will be applied to `!value`. If [tristate] is true
/// this callback cycle from false to true to null and then back to false
/// again.
///
/// The callback provided to [onChanged] should update the state of the parent
/// [StatefulWidget] using the [State.setState] method, so that the parent
/// gets rebuilt; for example:
///
/// ```dart
/// CheckboxMenuButton(
///   value: _throwShotAway,
///   child: const Text('THROW'),
///   onChanged: (bool? newValue) {
///     setState(() {
///       _throwShotAway = newValue!;
///     });
///   },
/// )
/// ``` └ ╜NАъ└ ╛1А└/// Called when a pointer enters or exits the button response area.
///
/// The value passed to the callback is true if a pointer has entered button
/// area and false if a pointer has exited. └ ╛=А╖└ ╛чАЗ/// Handler called when the focus changes.
///
/// Called with true if this widget's node gains focus, and false if it loses
/// focus. └ ╛∙I└ ┐9,/// {@macro flutter.widgets.Focus.focusNode} └ ┐GАе└ ┐фv/// The optional shortcut that selects this [MenuItemButton].
///
/// {@macro flutter.material.MenuBar.shortcuts_note} └ ┐ёБ╨└ ┴╝Бе/// Customizes this button's appearance.
///
/// Non-null properties of this style override the corresponding properties in
/// [MenuItemButton.themeStyleOf] and [MenuItemButton.defaultStyleOf].
/// [WidgetStateProperty]s that resolve to non-null values will similarly
/// override the corresponding [WidgetStateProperty]s in
/// [MenuItemButton.themeStyleOf] and [MenuItemButton.defaultStyleOf].
///
/// Null by default. └ ┴╞i└ ┬6/// {@macro flutter.material.inkwell.statesController} └ ┬4r└ ┬ЪT/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.none]. └ ┬лU└ ┬Ї8/// An optional icon to display after the [child] label. └ ├V└ ├L9/// {@macro flutter.material.menu_anchor.closeOnActivate} └ ├`А╠└ ─'Ао/// The widget displayed in the center of this button.
///
/// Typically this is the button's label, using a [Text] widget.
///
/// {@macro flutter.widgets.ProxyWidget.child} └ ─1Ай└ ─╜|/// Whether the button is enabled or disabled.
///
/// To enable a button, set its [onChanged] property to a non-null value.   └ ─▐Д_└ ─ё  └ ─ў└ ┼  └ ─▐└ ─▀ └ ╔AШ|└ ╦╔ВБ/// A menu item that combines a [Radio] widget with a [MenuItemButton].
///
/// To style the radio button separately from the overall button, add a
/// [RadioTheme] ancestor.
///
/// {@tool dartpad}
/// This example shows a menu with three radio buttons with shortcuts that
/// changes the background color of the body when the buttons are selected.
///
/// ** See code in examples/api/lib/material/menu_anchor/radio_menu_button.0.dart **
/// {@end-tool}
///
/// See also:
///
/// - [MenuBar], a widget that creates a menu bar of cascading menu items.
/// - [MenuAnchor], a widget that defines a region which can host a cascading
///   menu.└ ╦┘└ ╦┘└ ╦°Бх └ ╠V└ ╠eQ/// Creates a const [RadioMenuButton].
///
/// The [child] attribute is required.└ ╠l	└ ╠s  └ ╠{└ ╠К  └ ╠Ф└ ╠г  └ ╠▓└ ╠┴  └ ╠╧└ ╠╒  └ ╠ь└ ╠Є  └ ╠■└ ═  └ ═└ ═  └ ═*└ ═0  └ ═=
└ ═C  └ ═M└ ═S  └ ═h└ ═n  └ ═Л└ ═С  └ ═в└ ═и  └ ═├└ ═╥  └ ╠с└ ═|└ ═А└ ═Б└ ═╣└ ═сАг└ ╬АН/// The value represented by this radio button.
///
/// This radio button is considered selected if its [value] matches the
/// [groupValue]. └ ╬ЙА╕└ ╧7АЬ/// The currently selected value for a group of radio buttons.
///
/// This radio button is considered selected if its [value] matches the
/// [groupValue]. └ ╧FВх└ ╥!Вп/// Set to true if this radio button is allowed to be returned to an
/// indeterminate state by selecting it again when selected.
///
/// To indicate returning to an indeterminate state, [onChanged] will be
/// called with null.
///
/// If true, [onChanged] can be called with [value] when selected while
/// [groupValue] != [value], or with null when selected again while
/// [groupValue] == [value].
///
/// If false, [onChanged] will be called with [value] when it is selected
/// while [groupValue] != [value], and only by selecting another radio button
/// in the group (i.e. changing the value of [groupValue]) can this radio
/// button be unselected.
///
/// The default is false. └ ╥0Гх└ ╓ГН/// Called when the user selects this radio button.
///
/// The radio button passes [value] as a parameter to this callback. The radio
/// button does not actually change state until the parent widget rebuilds the
/// radio button with the new [groupValue].
///
/// If null, the radio button will be displayed as disabled.
///
/// The provided callback will not be invoked if this radio button is already
/// selected.
///
/// The callback provided to [onChanged] should update the state of the parent
/// [StatefulWidget] using the [State.setState] method, so that the parent
/// gets rebuilt; for example:
///
/// ```dart
/// RadioMenuButton<SingingCharacter>(
///   value: SingingCharacter.lafayette,
///   groupValue: _character,
///   onChanged: (SingingCharacter? newValue) {
///     setState(() {
///       _character = newValue;
///     });
///   },
///   child: const Text('Lafayette'),
/// )
/// ``` └ ╓Аъ└ ╓¤А└/// Called when a pointer enters or exits the button response area.
///
/// The value passed to the callback is true if a pointer has entered button
/// area and false if a pointer has exited. └ ╫	А╖└ ╫│АЗ/// Handler called when the focus changes.
///
/// Called with true if this widget's node gains focus, and false if it loses
/// focus. └ ╫┼I└ ╪,/// {@macro flutter.widgets.Focus.focusNode} └ ╪Ае└ ╪░v/// The optional shortcut that selects this [MenuItemButton].
///
/// {@macro flutter.material.MenuBar.shortcuts_note} └ ╪╜Б╨└ ┌ИБе/// Customizes this button's appearance.
///
/// Non-null properties of this style override the corresponding properties in
/// [MenuItemButton.themeStyleOf] and [MenuItemButton.defaultStyleOf].
/// [WidgetStateProperty]s that resolve to non-null values will similarly
/// override the corresponding [WidgetStateProperty]s in
/// [MenuItemButton.themeStyleOf] and [MenuItemButton.defaultStyleOf].
///
/// Null by default. └ ┌Тi└ ┌ы6/// {@macro flutter.material.inkwell.statesController} └ █ r└ █fT/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.none]. └ █wU└ █└8/// An optional icon to display after the [child] label. └ █╤V└ ▄9/// {@macro flutter.material.menu_anchor.closeOnActivate} └ ▄,А╠└ ▄єАо/// The widget displayed in the center of this button.
///
/// Typically this is the button's label, using a [Text] widget.
///
/// {@macro flutter.widgets.ProxyWidget.child} └ ▄¤Ай└ ▌Й|/// Whether the button is enabled or disabled.
///
/// To enable a button, set its [onChanged] property to a non-null value.   └ ▌кД└ ▌╜  └ ▌├└ ▌╤  └ ▌к└ ▌л └ с┐д
└ цчЕ!/// A menu button that displays a cascading menu.
///
/// It can be used as part of a [MenuBar], or as a standalone widget.
///
/// This widget represents a menu item that has a submenu. Like the leaf
/// [MenuItemButton], it shows a label with an optional leading or trailing
/// icon, but additionally shows an arrow icon showing that it has a submenu.
///
/// By default the submenu will appear to the side of the controlling button.
/// The alignment and offset of the submenu can be controlled by setting
/// [MenuStyle.alignment] on the [style] and the [alignmentOffset] argument,
/// respectively.
///
/// When activated (by being clicked, through keyboard navigation, or via
/// hovering with a mouse), it will open a submenu containing the
/// [menuChildren].
///
/// If [menuChildren] is empty, then this menu item will appear disabled.
///
/// See also:
///
/// * [MenuItemButton], a widget that represents a leaf menu item that does not
///   host a submenu.
/// * [MenuBar], a widget that renders menu items in a row in a Material Design
///   style.
/// * [MenuAnchor], a widget that creates a region with a submenu and shows it
///   when requested.
/// * [PlatformMenuBar], a widget that renders similar menu bar items from a
///   [PlatformMenuItem] using platform-native APIs instead of Flutter. └ чБё └ чБ└ чОd/// Creates a const [SubmenuButton].
///
/// The [child] and [menuChildren] attributes are required.└ чХ	└ чЬ  └ чд└ чк  └ ч╢└ ч╝  └ ч╬└ ч╘  └ ч▀└ чх  └ чё└ чў  └ ш
└ ш  └ ш└ ш  └ ш*└ ш0  └ шD!└ шJ  └ шk└ шq  └ ш└ шЕ  └ шЪ└ ша  └ ш░└ ш╢  └ ш╟└ ш╓  └ шч└ шЎ  └ шX└ ш\└ ш]└ щАЎ└ щЇА╠/// Called when a pointer enters or exits the button response area.
///
/// The value passed to the callback is true if a pointer has entered this
/// part of the button and false if a pointer has exited. └ ъ А╛└ ъ▒АО/// Handler called when the focus changes.
///
/// Called with true if this widget's [focusNode] gains focus, and false if it
/// loses focus. └ ъ├T└ ы7/// A callback that is invoked when the menu is opened. └ ыU└ ыj7/// A callback that is invoked when the menu is closed. └ ыvU└ ы┴2/// An optional [MenuController] for this submenu. └ ы╨БО└ эYБe/// Customizes this button's appearance.
///
/// Non-null properties of this style override the corresponding properties in
/// [themeStyleOf] and [defaultStyleOf]. [WidgetStateProperty]s that resolve
/// to non-null values will similarly override the corresponding
/// [WidgetStateProperty]s in [themeStyleOf] and [defaultStyleOf].
///
/// Null by default. └ эcА░└ ю
АП/// The [MenuStyle] of the menu specified by [menuChildren].
///
/// Defaults to the value of [MenuThemeData.style] of the ambient [MenuTheme]. └ юБй└ я▓Б{/// The offset of the menu relative to the alignment origin determined by
/// [MenuStyle.alignment] on the [style] attribute.
///
/// Use this for fine adjustments of the menu placement.
///
/// Defaults to an offset that takes into account the padding of the menu so
/// that the top starting corner of the first menu item is aligned with the
/// top of the [MenuAnchor] region. └ я╞v└ Ё0X/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.hardEdge]. └ ЁAI└ ЁБ,/// {@macro flutter.widgets.Focus.focusNode} └ ЁПi└ Ёш6/// {@macro flutter.material.inkwell.statesController} └ Ё¤O└ ёA3/// An optional icon to display before the [child]. └ ёQO└ ёФ2/// An optional icon to display after the [child]. └ ёеБ8└ Є╤Б
/// The list of widgets that appear in the menu when it is opened.
///
/// These can be any widget, but are typically either [MenuItemButton] or
/// [SubmenuButton] widgets.
///
/// If [menuChildren] is empty, then the button for this menu item will be
/// disabled. └ ЄтА╘└ є▒А╢/// The widget displayed in the middle portion of this button.
///
/// Typically this is the button's label, using a [Text] widget.
///
/// {@macro flutter.widgets.ProxyWidget.child}  └ є╗H└ є▄   └ є╗└ є╝└ ЇБ└ Ї╩Ам/// Defines the button's default appearance.
///
/// {@macro flutter.material.text_button.default_style_of}
///
/// {@macro flutter.material.text_button.material3_defaults} └ Ї┘└ Їч   └ ї#А┬└ їПZ/// Returns the [MenuButtonThemeData.style] of the closest [MenuButtonTheme]
/// ancestor. └ їЬ└ їк   └ їщН>└ №NЖ	/// A static convenience method that constructs a [SubmenuButton]'s
/// [ButtonStyle] given simple values.
///
/// The [foregroundColor] color is used to create a [WidgetStateProperty]
/// [ButtonStyle.foregroundColor] value. Specify a value for [foregroundColor]
/// to specify the color of the button's icons. Use [backgroundColor] for the
/// button's background fill color. Use [disabledForegroundColor] and
/// [disabledBackgroundColor] to specify the button's disabled icon and fill
/// color.
///
/// Similarly, the [enabledMouseCursor] and [disabledMouseCursor]
/// parameters are used to construct [ButtonStyle.mouseCursor].
///
/// The [iconColor], [disabledIconColor] are used to construct
/// [ButtonStyle.iconColor] and [iconSize] is used to construct
/// [ButtonStyle.iconSize].
///
/// All of the other parameters are either used directly or used to create a
/// [WidgetStateProperty] with a single value for all states.
///
/// All parameters default to null, by default this method returns a
/// [ButtonStyle] that doesn't override anything.
///
/// For example, to override the default foreground color for a
/// [SubmenuButton], as well as its overlay color, with all of the standard
/// opacity adjustments for the pressed, focused, and hovered states, one
/// could write:
///
/// ```dart
/// SubmenuButton(
///   leadingIcon: const Icon(Icons.pets),
///   style: SubmenuButton.styleFrom(foregroundColor: Colors.green),
///   menuChildren: const <Widget>[ /* ... */ ],
///   child: const Text('Button Label'),
/// ),
/// ``` └ №^└ №f  └ №z└ №В  └ №Ц└ №Ю  └ №║└ №┬  └ №▐└ №ц  └ №Ў└ №■  └ ¤└ ¤  └ ¤)└ ¤2  └ ¤?└ ¤G  └ ¤]└ ¤i  └ ¤w└ ¤  └ ¤Р└ ¤Щ  └ ¤з└ ¤╝  └ ¤╚└ ¤╧  └ ¤▀└ ¤ц  └ ¤Ї└ ¤√  └ ■└ ■  └ ■0 └ ■>  └ ■V└ ■c  └ ■l└ ■}  └ ■З└ ■Ч  └ ■й$└ ■┴  └ ■╙└ ■▐  └ ■Ї└ ■√  └  └  "  └  0+└  O   └+А╙└M   └+└,└Б┼└  └'&└D  └└ └╦а╨└╤   └АФ└+ └K└Щ└5└J└6└<└B└I└C└g└Q└i└З└Х└П└И└С└Ю └г └╣└┬!└╟ └▀└ч'└ў  └░└╗  └U└Z └g└T└%    └iD└    └╤J└▀    └4└'    └qБЭ└В   └q└r└
А░└
#   └
└
└
╞ГW└
╫  └
ч└
Ў  └
╞└
╟└!Сb└4  └:└H  └!└"└ЗВ╠└М    └"WБy└"\    └#╘Б{└#▀  └#є└$   └%SБF└%X     └&ЭТ<└&г  └&хA └&х└' └'
└'   └'*!└'D  └'PA└'e    └'Ф;└'в    └'╥1└'ш    └(4└(    └(>u└(НB/// The orientation of the menu that contains this submenu button.   └(╖АУ└)Q/// Whether the anchor that intercepted this DirectionalFocusAction is a submenu.   └)NПЙ└)_  └)f└)~  └)N└)O └8█Вю└9┘Аў/// An action that closes all the menus associated with the given
/// [MenuController].
///
/// See also:
///
///  * [MenuAnchor], a widget that hosts a cascading submenu.
///  * [MenuBar], a widget that defines a menu bar with cascading submenus. └:S └:*└:;"/// Creates a [DismissMenuAction].└:=└:L   └:\k└:╜I/// The [MenuController] associated with the menus that should be closed.  └:╠Аг└:▌  └:ф└:є  └:╠└:═└;sT└;Д  └;О└;Э  └;s└;t └;╦▒T└>8Вh/// A helper class used to generate shortcut labels for a
/// [MenuSerializableShortcut] (a subset of the subclasses of
/// [ShortcutActivator]).
///
/// This helper class is typically used by the [MenuItemButton] and
/// [SubmenuButton] classes to display a label for their assigned shortcuts.
///
/// Call [getShortcutLabel] with the [MenuSerializableShortcut] to get a label
/// for it.
///
/// For instance, calling [getShortcutLabel] with `SingleActivator(trigger:
/// LogicalKeyboardKey.keyA, control: true)` would return "тМГ A" on macOS, "Ctrl
/// A" in an US English locale, and "Strg A" in a German locale. └>V└>o└>p└>q   └>x+└>Ъ  └>иБ*└>╒ └?└?╤└>є└?└>Ї└?└?1└?└?'└?(└?3└?Y└?<└?N└?O└?[└?~└?d└?v└?w└?А└?е└?Й└?Ы└?Ь└?з└?╚└?░└?┬└?├└?╩└?╫Б╘└?№ )└@└Aк└@	└@└@
└@#└@5└@6└@?└@Q└@R└@_└@q└@r└@|└@О└@П└@Ъ└@м└@н└@║└@╠└@═└@▐└@Ё└@ё└@ └A└A└A!└A3└A4└AB└AT└AU└Ag└Ay└Az└AЙ└AЫ└AЬ└BхАШ└C' 
└C{└C|└CC└Cz└CD└C[└C^└Cy└C_└Cs└A░АЩ└B+/// Return the instance for this singleton.   └CВСУ└F!ВЖ/// Returns the label to be shown to the user in the UI when a
/// [MenuSerializableShortcut] is used as a keyboard shortcut.
///
/// When [defaultTargetPlatform] is [TargetPlatform.macOS] or
/// [TargetPlatform.iOS], this will return graphical key representations when
/// it can. For instance, the default [LogicalKeyboardKey.shift] will return
/// 'тЗз', and the arrow keys will return arrows. The key
/// [LogicalKeyboardKey.meta] will show as 'тМШ', [LogicalKeyboardKey.control]
/// will show as '╦Д', and [LogicalKeyboardKey.alt] will show as 'тМе'.
///
/// The keys are joined by spaces on macOS and iOS, and by "+" on other
/// platforms. └F2!└FL  └FU#└Fl   └UСН.└UЩ  └Uл└U┐  └U├#└U┌   └b├КZ└b╩  └b▄└bЁ  └b∙#└c    └m!Б╘└m'  └mTАЙ └mZ└mj └mq└mБ  └mЛ└mЪ  └mи└m╖  └m┬└m╤   └mс└mё  └m■└n  └n└n*   └n5А╛└nF  └nY└nk  └n5└n6 └nўБТ└oЬАЮ/// MenuBar-specific private specialization of [MenuAnchor] so that it can act
/// differently in regards to orientation, how open works, and what gets built. └o┬| └o╚└o╓ └o▌└oэ  └o■└p  └p└p  └p,└p3     └pBE└p`   └pB└pC └pЛЕd└pС   └p┬АН└pч └q└qN└pё└q└pЄ└p°└p■└q└p └q└q└q└q-└qI└q8└q.└q:└qTАЎ└qi   └qT└qU└rN5└rc   └rN└rO└rЗВ▓└rЪ  └rй└r╖  └rЗ└rИ└u=А░└uN  └uU└u^  └u=└u> └uёМW└wYБa/// An [InheritedWidget] that provides a descendant [MenuAcceleratorLabel] with
/// the function to invoke when the accelerator is pressed.
///
/// This is used when creating your own custom menu item for use with
/// [MenuAnchor] or [MenuBar]. Provided menu items such as [MenuItemButton] and
/// [SubmenuButton] already supply this wrapper internally. └wФАы └x └x_/// Create a const [MenuAcceleratorCallbackBinding].
///
/// The [child] parameter is required.└x%	└x,  └x4└x:  └xG└xM  └xd└xt  └xY└xГА╥└yMАн/// The function that pressing the accelerator defined in a descendant
/// [MenuAcceleratorLabel] will invoke.
///
/// If set to null, then the accelerator won't be enabled. └yZБ└zbАЄ/// Whether or not the associated label will host its own submenu or not.
///
/// This setting determines when accelerators are active, since accelerators
/// for menu items that open submenus shouldn't be active when the submenu is
/// open.  └zqАд└zВ  └zХ(└z╡  └zq└zr└{В0└|═Бx/// Returns the active [MenuAcceleratorCallbackBinding] in the given context, if any,
/// and creates a dependency relationship that will rebuild the context when
/// [onInvoke] changes.
///
/// If no [MenuAcceleratorCallbackBinding] is found, returns null.
///
/// See also:
///
/// * [of], which is similar, but asserts if no [MenuAcceleratorCallbackBinding]
///   is found. └|╒└|у   └}MД∙└DБ║/// Returns the active [MenuAcceleratorCallbackBinding] in the given context, and
/// creates a dependency relationship that will rebuild the context when
/// [onInvoke] changes.
///
/// If no [MenuAcceleratorCallbackBinding] is found, returns will assert in debug mode
/// and throw an exception in release mode.
///
/// See also:
///
/// * [maybeOf], which is similar, but returns null if no
///   [MenuAcceleratorCallbackBinding] is found. └G└U    └ЗЭбо└П┌И6/// A widget that draws the label text for a menu item (typically a
/// [MenuItemButton] or [SubmenuButton]) and renders its child with information
/// about the currently active keyboard accelerator.
///
/// On platforms other than macOS and iOS, this widget listens for the Alt key
/// to be pressed, and when it is down, will update the label by calling the
/// builder again with the position of the accelerator in the label string.
/// While the Alt key is pressed, it registers a shortcut with the
/// [ShortcutRegistry] mapped to a [VoidCallbackIntent] containing the callback
/// defined by the nearest [MenuAcceleratorCallbackBinding].
///
/// Because the accelerators are registered with the [ShortcutRegistry], any
/// other shortcuts in the widget tree between the [primaryFocus] and the
/// [ShortcutRegistry] that define Alt-based shortcuts using the same keys will
/// take precedence over the accelerators.
///
/// Because accelerators aren't used on macOS and iOS, the label ignores the Alt
/// key on those platforms, and the [builder] is always given -1 as an
/// accelerator index. Accelerator labels are still stripped of their
/// accelerator markers.
///
/// The built-in menu items [MenuItemButton] and [SubmenuButton] already provide
/// the appropriate [MenuAcceleratorCallbackBinding], so unless you are creating
/// your own custom menu item type that takes a [MenuAcceleratorLabel], it is
/// not necessary to provide one.
///
/// {@template flutter.material.MenuAcceleratorLabel.accelerator_sample}
/// {@tool dartpad} This example shows a [MenuBar] that handles keyboard
/// accelerators using [MenuAcceleratorLabel]. To use the accelerators, press
/// the Alt key to see which letters are underlined in the menu bar, and then
/// press the appropriate letter. Accelerators are not supported on macOS or iOS
/// since those platforms don't support them natively, so this demo will only
/// show a regular Material menu bar on those platforms.
///
/// ** See code in examples/api/lib/material/menu_anchor/menu_accelerator_label.0.dart **
/// {@end-tool}
/// {@endtemplate} └Р
А╟ └Рm└РБV/// Creates a const [MenuAcceleratorLabel].
///
/// The [label] parameter is required.└РЗ
└РН  └РЩ	└Ра  └Ри"└Ро  └Р╖└Р╒Е└ХыД┌/// The label string that should be displayed.
///
/// The label string provides the label text, as well as the possible
/// characters which could be used as accelerators in the menu system.
///
/// {@template flutter.material.menu_anchor.menu_accelerator_label.label}
/// To indicate which letters in the label are to be used as accelerators, add
/// an "&" character before the character in the string. If more than one
/// character has an "&" in front of it, then the characters appearing earlier
/// in the string are preferred. To represent a literal "&", insert "&&" into
/// the string. All other ampersands will be removed from the string before
/// calling [MenuAcceleratorLabel.builder]. Bare ampersands at the end of the
/// string or before whitespace are stripped and ignored.
/// {@endtemplate}
///
/// See also:
///
/// * [displayLabel], which returns the [label] with all of the ampersands
///   stripped out of it, and double ampersands converted to ampersands.
/// * [stripAcceleratorMarkers], which returns the supplied string with all of
///   the ampersands stripped out of it, and double ampersands converted to
///   ampersands, and optionally calls a callback with the index of the
///   accelerator character found. └Ц┬ГT└ЪГ/// The optional [MenuAcceleratorChildBuilder] which is used to build the
/// widget that displays the label itself.
///
/// The [defaultLabelBuilder] function serves as the default value for
/// [builder], rendering the label as a [RichText] widget with appropriate
/// [TextSpan]s for rendering the label with an underscore under the selected
/// accelerator for the label when accelerators have been activated.
///
/// {@macro flutter.material.menu_anchor.menu_accelerator_child_builder.args}
///
/// When writing the builder function, it's not necessary to take the current
/// platform into account. On platforms which don't support accelerators (e.g.
/// macOS and iOS), the passed accelerator index will always be -1, and the
/// accelerator markers will already be stripped. └ХїА╔└ЦПАИ/// Returns the [label] with any accelerator markers removed.
///
/// This getter just calls [stripAcceleratorMarkers] with the [label].   └ЪА╬└ЪнАВ/// Whether [label] contains an accelerator definition.
///
/// {@macro flutter.material.menu_anchor.menu_accelerator_label.label}   └ЪэД║└ЬИБА/// Serves as the default value for [builder], rendering the label as a
/// [RichText] widget with appropriate [TextSpan]s for rendering the label
/// with an underscore under the selected accelerator for the label when the
/// [index] is non-negative, and a [Text] widget when the [index] is negative.
///
/// {@macro flutter.material.menu_anchor.menu_accelerator_child_builder.args} └Ьб└Ьп  └Ь╗└Ь├  └Ь═	└Ь╥   └ЯлИ	└бБM/// Strips out any accelerator markers from the given [label], and unescapes
/// any escaped ampersands.
///
/// If [setIndex] is supplied, it will be called before this function returns
/// with the index in the returned string of the accelerator character.
///
/// {@macro flutter.material.menu_anchor.menu_accelerator_label.label} └б-└б5  └б<"└бW   └з╕V└зр   └з╕└з╣└иАВ└и%  └и//└и@  └и└и└иJ└иY└иZ└иША▒└ий  └и╜&└и┌  └иШ└иЩ └йMН └йS   └йЦ└йв  └й│└й╖ └й╦└й╠└й╤(└йё  └й¤└к  └к#└к,  └кA-└кX  └кr└кw └кЛ 	└кХАэ└кж   └кХ└кЦ└лЖБП└лЧ   └лЖ└лЗ└нБ^└н*   └н└н└о{А║└оМ  └оЬ└о▓  └о{└о|└п9Б└пE    └░DБ
└░I  └░[└░e   └▒RДy└▒W    └╡╧А╟└╡╘    └╢ЪА░└╢н  └╢│└╢┴  └╢Ъ└╢Ы └╖NТ└╕╦Бv/// A label widget that is used as the label for a [MenuItemButton] or
/// [SubmenuButton].
///
/// It not only shows the [SubmenuButton.child] or [MenuItemButton.child], but if
/// there is a shortcut associated with the [MenuItemButton], it will display a
/// mnemonic for the shortcut. For [SubmenuButton]s, it will display a visual
/// indicator that there is a submenu. └╕ЎБS └╣e└╣sb/// Creates a const [_MenuItemLabel].
///
/// The [child] and [hasSubmenu] arguments are required.└╣z└╣Й  └╣Ш└╣Ю  └╣╕└╣╛  └╣╬└╣╘  └╣х└╣ы  └╣°└╣■  └║!└║  └║8
└║>  └╣о└║%└║)└║*└║MАЕ└║╚i/// Whether or not this menu has a submenu.
///
/// Determines whether the submenu arrow is shown or not. └║╫А█└╗дА╗/// Whether or not this item should show decorations like shortcut labels or
/// submenu arrows. Items in a [MenuBar] don't show these decorations when
/// they are laid out horizontally. └╗╖P└╗№4/// The optional icon that comes before the [child]. └╝P└╝P3/// The optional icon that comes after the [child]. └╝aАЛ└╝ф^/// The shortcut for this label, so that it can generate a string describing
/// the shortcut. └╝ёАЗ└╜jf/// An optional Semantics label, which replaces the generated string when
/// read by a screen reader. └╜}K└╜╝1/// The direction in which the menu item expands. └╜═R└╛</// An optional child widget that is displayed in the label.  └╛$Й╡└╛7  └╛=└╛K  └╛$└╛%└╟▌БД└╟ю  └╚&└╚  └╟▌└╟▐ └╔╚Ш1└╔╬  └╩ Б: └╩└╩ 	└╩└╩'  └╩6└╩E  └╩W└╩f  └╩t└╩Г  └╩Ч└╩ж  └╩╖└╩╞  └╩╓└╩х  └╩ї└╦  └╦└╦#   	└╦Й└╦Ф  └╦▌!└╦ё  └╠K!└╠c  └╠╦└╠╪  └═!└═/  └═Ю$└═╖  └╬└╬'  └╬Z└╬e  └╬б└╬м   └╬┬Б7└╬▌  └╬Ї└╧  └╬┬└╬├└╧¤О╗└╨  └╨$	└╨*  └╨/└╨5  └╧¤└╧■└▐╝В└▐═  └▐▄└▐щ  └▐╝└▐╜└р▀Б└рф  └рє└с  └с└с    └с√Дх└т░Ао/// A widget that manages a list of menu buttons in a menu.
///
/// It sizes itself to the widest/tallest item it contains, and then sizes all
/// the other entries to match. └т╓А╗ └т▄└тц └тэ└т№  └у
└у  └у-└у<  └уL"└уR  └уt└уГ  └у└у"└у#└уj└уХ`└уьC/// The menu style that has all the attributes for this menu panel. └у·r└ф`T/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.none]. └фqБK└хжБ/// Determine if a [UnconstrainedBox] can be applied to the menu panel to allow it to render
/// at its "natural" size.
///
/// Defaults to true. When it is set to false, it can be useful when the menu should
/// be constrained in both main-axis and cross-axis, such as a [DropdownMenu]. └х┴B└х°)/// The layout orientation of this panel. └цАР└цРn/// The list of widgets to use as children of this menu bar.
///
/// These are the top level [SubmenuButton]s.  └цЭA└ц╗   └цЭ└цЮ └цтЦ╧└цш   └ч6└ч' └ч:└чJ└чK └чQU└чb   └чQ└чR└чкХ)└ч╜  └ч├└ч╤  └чк└чл└№╫А╪└№▐  └№є└¤    └¤ыХ└¤ё  └■Б └■└■$ └■+└■:  └■E└■T  └■b└■q  └■└■О  └■Я└■о  └■┬└■╤  └■т"└■ш  └ 
└   └  └ /└ F  └ P└ a  └ n└   └ М└ Ъ  └ к└ ╖  └ ╩└ ╒  └ х!└ Ё  └ 
└    └ .Т╬└ A  └ G└ U  └ .└ / └ Б╠└vo/// Wraps the [WidgetStateMouseCursor] so that it can default to
/// [MouseCursor.uncontrolled] if none is set. └и) └о└║ └╗└┴   └╒<└  └М>└г   └М└Н└r└.  └6└J  └└ └оЕ└┤  └▌Аў └▌└я └Ё└Ў  └└	└╥└└└└"└:└B└;└A└C└G└D└U└P└W└]└u└Д└v└Е└Ш└Ж└к└б└м└└└┴└╪АЙ└№ └└+└`└8└,└:└F└G└J└_└K└Q└R└Z└^└[└f└y  └Е>└Ь └ж└л└м└о└╢└п└╖└╕└╚АК└Ў   └╚└╔└V}└Е   └V└W└╫АМ└    └╫└╪└ gАЎ└ г   └ g└ h└!aO└!   └!a└!b  └!┤Х╘└!║  └!шА╡ └!ш└!¤ └!■└"  └"└"└"Ы└"0└"└"2└"\└"N└"^└"s└"j└"u└"Й└"К└"б└"┤  └"└>└"╫ └"с└"ц└"ч└"щ└"ё└"ъ└"Є└"є└#=└# └#$└#)└#*└#,└#4└#-└#5└#6└#DАЗ└#s   └#D└#E└$s└$@   └$└$└$ИВB└$╖   └$И└$Й└&╬ВX└&¤   └&╬└&╧└)Ev└)t   └)E└)F└)┐{└)ь   └)┐└)└└*>АД└*k   └*>└*?└*╞Б=└*√   └*╞└*╟└,В&└,6   └,└,└.1АЭ└.l   └.1└.2└.шАЪ└/   └.ш└.щ└/Ж_└/┤   └/Ж└/З└/щ`└0   └/щ└/ъ└0MБ└0   └0M└0N└1dP└1Г   └1d└1e└1ЁЕЦ└2  └2└2     └7КД▌└7Р  └7╢Ая └7╢└7┼ └7╞└7╠  └7┌└7▀└8г└7Ё└7ч└7Є└7°└8└8└8└8└8└8└8└8+└8&└8-└83└8K└8Z└8L└8[└8n└8\└8А└8w└8В└8Ц└8Ч└8йАЙ└8═ └8ц└8№└91└9	└8¤└9└9└9└9└90└9└9"└9#└9+└9/└9,└97└9J  └9V>└9m └9w└9|└9}└9└9З└9А└9И└9Й└9ЩАК└9╟   └9Щ└9Ъ└:'АМ└:V   └:'└:(└:╖}└:ц   └:╖└:╕└;8А┌└;t   └;8└;9└<O└<4   └<└<      └ПБl└▀F/// Whether [defaultTargetPlatform] is an Apple platform (Mac or iOS).   └¤Бf└2Б+/// Whether [defaultTargetPlatform] is one that uses symbolic shortcuts.
///
/// Mac and iOS use special symbols for modifier keys instead of their names,
/// render them in a particular order defined by Apple's human interface
/// guidelines, and format them so that the modifier keys always align.   └fБ7└o    └╬В┐└∙Б%/// A debug print function, which should only be called within an assert, like
/// so:
///
///   assert(_debugMenuInfo('Debug Message'));
///
/// so that the call is entirely removed in release builds.
///
/// Enable debug printing by setting [_kDebugMenus] to true at the top of the
/// file. └└  └└,    МВGН┌Б╠/// The type of builder function used by [MenuAnchor.builder] to build the
/// widget that the [MenuAnchor] surrounds.
///
/// The `context` is the context that the widget is being built in.
///
/// The `controller` is the [MenuController] that can be used to open and close
/// the menu with.
///
/// The `child` is an optional child supplied as the [MenuAnchor.child]
/// attribute. The child is intended to be incorporated in the result of the
/// function.  ОО  ОО.  О;ОD   └ВJЕQ└З5Дт/// The type of builder function used for building a [MenuAcceleratorLabel]'s
/// [MenuAcceleratorLabel.builder] function.
///
/// {@template flutter.material.menu_anchor.menu_accelerator_child_builder.args}
/// The arguments to the function are as follows:
///
/// * The `context` supplies the [BuildContext] to use.
/// * The `label` is the [MenuAcceleratorLabel.label] attribute for the relevant
///   [MenuAcceleratorLabel] with the accelerator markers stripped out of it.
/// * The `index` is the index of the accelerator character within the
///   `label.characters` that applies to this accelerator. If it is -1, then the
///   accelerator should not be highlighted. Otherwise, the given character
///   should be highlighted somehow in the rendered label (typically with an
///   underscore). Importantly, `index` is not an index into the [String]
///   `label`, it is an index into the [Characters] iterable returned by
///   `label.characters`, so that it is in terms of user-visible characters
///   (a.k.a. grapheme clusters), not Unicode code points.
/// {@endtemplate}
///
/// See also:
///
/// * [MenuAcceleratorLabel.defaultLabelBuilder], which is the implementation
///   used as the default value for [MenuAcceleratorLabel.builder].  └Зf└Зt  └З~└ЗЖ  └ЗО	└ЗУ    ЕГЕО ЕЭЖ*Ж Ж-Жд+Ж▒ Ж═ЗD&ЗQ ЗiЗ┬ВїЗч eИК╢ИИИИИPИ!И0ИOИ1ИCИDИRИ`ИaИРИfИuИПИvИИИЙИТИЯИаИ╠ИеИ┤И╦И╡И╟И╚И╬И▌И▐ЙИуИЄЙИєЙЙЙЙЙЙЙ,Й-Й_Й2ЙAЙ^ЙBЙTЙUЙaЙwЙПЙxЙКЙЛЙ┐ЙФЙгЙ╛ЙдЙ╢Й╖Й┴Й╫ЙэЙ╪ЙъЙыКЙЄКККККК!К7КOК8КJКKКВКTКcКБКdКvКwКДКЪК│КЫКнКоКє)Л  ЛЛb"Лo ЛГЛ╧3Л▄ М   Ао  package:flutter/cupertino.dart  Ау  app.dart  А■  checkbox_theme.dart  Б$  dropdown_menu.dart  БI  radio_theme.dart П░ <АЖАдАеА╓А┌АїББ@БcБlБmБЙБКБ┤Б▌ВВ.ВUВVВrВХВнВ╔В▀В°ГГ%Г=ГcГБГЯГ└Г┌ГЇД	Д"Д=ДWДlДЖДЗДЯД┐Д▌ЕЕ*ЕHЕIЕГЕдЕеЕєЖЖ1Ж2Ж}ЖдЖ╤Ж╥ЗЗDЗlЗmЗ╣З┬ИИdИгИсЙ0ЙТЙЁКRК╢К╣К║КєЛЛЛbЛЖЛЗЛ╧МММPМ|МАМ─М╚НН+Н/НwН─Н╥ООО9ОJОMОNОЩОуПППdПЭПбПыР8РtРxРМР┘Р¤ССPС`СdСxС╟ТТaТнТ▒У УУУ(УyУЕУЙУ╪УшФФ6Ф<ФkФАФПФдФ╜Ф═ФїХ	Х0ХAХiХеХлХ╤ХїЦЦЦ@Ц`ЦrЦВЦИЦЙЦ╫ЦьЧЧЧbЧаЧжЧЎШDШVШ\ШеШсЩЩЩOЩUЩЯЩеЩ┌ЩЇЩїЪ3ЪЪ─Ъ▄ЪтЫЫЫnЫzЫАЫ╤ЬЬNЬTЬвЬяЭ;ЭЖЭ┬Э╚ЭщЭ■ЮЮ ЮiЮЗЮНЮ┘ЯЯ3Я4ЯjЯpЯУЯоЯпЯЇЯ·аJаРа╙б#бmб╝ввUвевєг<гBгПгрд/д|дВдЫдкд╨е
ее0е1е|едеке∙жIжСжбжзж└жржсзз9з:зtзУзФзъии!иpи╚йй>й?йПй╗й┴й°кккOкUкЧк▐кфл2лJлsлtлмл▓л№мMмЭм╠мумфмЁн)н*н6нhн╠н╨н╤н▌о"оMо╕п
пOпХпыпяпёпЄ░%░s░╝▒
▒▒Ы▒╕▒ф▓▓V▓y▓М││.│X│М││┤
┤┤┤,┤C┤░┤╒╡╡╡0╡4╡5╡A╡T╡Ж╡Щ╡╕╡╛╡┐╡р╡Ї╢╢4╢X╢v╢Л╢П╢Р╢Ь╢╜╢р╖,╖L╖o╖К╖к╖░╖°╕5╕z╕п╕ф╣╣-╣3╣L╣P╣Q╣]╣М╣▓╣ч║║9║i║С║╗║╩║√╗>╗F╗L╗y╗}╗~╗К╗▒╗р╝╝0╝Q╝j╝s╝y╝z╝п╝╒╜	╜"╜:╜a╜Д╜╞╜э╛╛G╛И╛У╛Ь╛│╛║╛╗╛т╛√┐┐Z┐Л┐╘┐Ё┐√└ @└ @└ @ └ @!└ @o└ @╜└ @╥└ @▌└ @ь└ A└ Ab└ AК└ Aй└ A╢└ A╬└ Aэ└ B└ B└ B2└ B;└ BB└ BF└ BG└ Bw└ BЛ└ B▓└ B∙└ C└ C└ C2└ C\└ Cк└ C▌└ Cш└ Cё└ C°└ C№└ C¤└ DD└ Ds└ DЪ└ D─└ D╫└ D▌└ E└ Ed└ E░└ E┤└ E╡└ E█└ F└ F└ F└ FF└ Fе└ Fё└ Fї└ FЎ└ G!└ Gd└ GТ└ G▓└ G°└ H7└ H;└ H<└ Hj└ Hп└ H▄└ I%└ IH└ IЗ└ IЛ└ IМ└ Iл└ I╧└ IЇ└ J└ J└ J-└ J1└ J2└ JT└ J{└ JР└ Jъ└ J■└ K5└ K?└ KL└ KР└ Kж└ Kш└ KЇ└ K■└ L└ L└ L	└ L!└ LJ└ LX└ L^└ Lл└ L╓└ L┌└ L█└ LЇ└ MB└ MС└ M╩└ M▌└ Mэ└ Mє└ Mў└ M°└ ND└ NJ└ NЕ└ NЛ└ N█└ O└ Oc└ Ot└ OЧ└ O─└ Oы└ P8└ PF└ PL└ Ps└ P┬└ P█└ Pы└ Pё└ Q└ QД└ Q║└ Qх└ Qц└ R└ R+└ RJ└ RK└ R^└ Rt└ Rz└ R{└ RЦ└ RЪ└ RЫ└ R▒└ R╖└ S└ S└ SD└ Sq└ SЕ└ SУ└ SЩ└ S├└ S°└ TR└ Ts└ TР└ T╦└ Tю└ U└ U└ U3└ Ut└ UТ└ U╗└ U┘└ V@└ VV└ VЧ└ Vг└ Vл└ V▒└ V╡└ V╢└ Vш└ WA└ WЪ└ W─└ W╩└ W╬└ W╧└ X└ Xc└ Xq└ Xн└ Y └ Y└ Y└ Y└ YY└ Y|└ YА└ YВ└ YГ└ Y═└ Y╤└ Z└ Zn└ ZБ└ ZЕ└ ZУ└ ZЧ└ Z▄└ [)└ [A└ [Л└ [в└ [╥└ [╪└ \'└ \:└ \W└ \X└ \Ф└ \и└ \┼└ \т└ \ц└ \ч└ ]*└ ]0└ ]y└ ]╗└ ]ф└ ]ъ└ ^5└ ^Ж└ ^б└ ^▓└ ^╧└ ^ц└ ^ъ└ ^ы└ _.└ _4└ _Д└ _╙└ _┘└ `'└ `H└ `N└ `Щ└ `ъ└ a└ a'└ aD└ al└ ap└ aq└ aЯ└ a╔└ a▀└ aу└ aф└ b└ b+└ bA└ bG└ bK└ bM└ bN└ bБ└ bЕ└ b╥└ c"└ cg└ ck└ c║└ d└ dY└ dй└ d∙└ eD└ eT└ eX└ eи└ e°└ fF└ fА└ f╩└ g└ g└ g?└ gА└ g╬└ h└ hk└ h╝└ h╫└ h█└ i)└ ip└ i╛└ j└ j[└ jЪ└ jЮ└ jь└ k6└ kЖ└ k╤└ k╒└ l!└ l1└ lD└ lH└ lО└ lТ└ lа└ lд└ lє└ m	└ mE└ mФ└ m╙└ n"└ n`└ nм└ n┐└ o└ oG└ oУ└ oо└ o╓└ oў└ o¤└ p(└ p:└ pI└ pY└ p|└ pС└ pн└ p│└ p┤└ p■└ q└ qN└ qT└ qЙ└ qг└ qд└ q┌└ qр└ q └ r└ r└ rP└ rt└ ru└ r─└ r╩└ s└ sh└ s│└ s╥└ s╪└ t└ t.└ t/└ t;└ tb└ tН└ tи└ t╞└ tш└ t№└ u└ u!└ u%└ u&└ u2└ ud└ uВ└ uк└ u▌└ uц└ uэ└ uё└ uЄ└ u■└ vC└ vn└ v╟└ w(└ w,└ w.└ w/└ w└ w├└ w╟└ x└ xb└ xГ└ xЗ└ x╝└ x└└ x╬└ x╥└ y"└ y/└ y~└ yФ└ yф└ z3└ zq└ z╜└ z╨└ {"└ {X└ {г└ {╛└ {ь└ |└ |└ |C└ |\└ |k└ |└ |С└ |╢└ |╬└ |т└ |■└ }└ }*└ }:└ }U└ }x└ }О└ }е└ }╞└ }я└ } └ ~└ ~└ ~E└ ~K└ ~Н└ ~У└ ~г└ ~й└ ~х└ └ └ M└ S└ в└ ╨└ ї└ Ў└ А%└ А+└ АC└ Аe└ Аf└ АУ└ АЩ└ Ащ└ АЎ└ Б!└ Б"└ БQ└ Бo└ Бp└ БЯ└ Б╖└ Б╕└ Б°└ Б■└ В5└ Вa└ Вb└ Вн└ В│└ В∙└ Г@└ Г└ Г░└ Г╢└ Д└ ДH└ ДС└ Дв└ Ди└ Д┐└ Д▀└ Др└ Е└ Е└ Еb└ Е▒└ ЕЇ└ Ж9└ Ж?└ ЖV└ Жr└ Жs└ Жм└ Жр└ Жс└ З└ З└ З<└ ЗW└ ЗX└ ЗФ└ З▒└ З▓└ Зэ└ И└ И└ ИK└ ИП└ Иб└ Из└ И┐└ И╘└ ИЄ└ Иє└ Й'└ Й-└ Й~└ ЙЮ└ Йд└ ЙЎ└ К:└ КW└ К]└ КВ└ КЭ└ КЮ└ К╫└ К▌└ Л └ Л&└ ЛW└ Лn└ Лo└ Ла└ Лж└ ЛЄ└ М└ М└ М(└ Мi└ Мj└ МЩ└ МЯ└ М▄└ Мт└ Н!└ НV└ НБ└ НЕ└ НЖ└ Н├└ Нх└ О└ ОG└ ОK└ ОL└ ОУ└ О╝└ О┬└ П└ П_└ Пп└ Пў└ РF└ РS└ РY└ РЭ└ Р▀└ Рх└ С&└ Сh└ СЖ└ СМ└ С█└ Т└ Т!└ Тh└ ТЬ└ Тв└ Тф└ У3└ У└ УТ└ УШ└ Уж└ У╝└ Ущ└ Ф1└ ФI└ ФZ└ Фe└ ФР└ ФЩ└ Фг└ Ф─└ Фр└ Ф№└ Х └ ХD└ Х\└ Хy└ ХП└ Хе└ Х├└ Х▌└ ХЎ└ Ц└ Ц.└ ЦE└ ЦZ└ Цq└ ЦЦ└ Ц╝└ Ц╥└ Цэ└ Ч└ Ч9└ ЧZ└ Чt└ ЧЦ└ Ч╟└ Ч╬└ Чя└ Ш└ Ш?└ Шw└ Шп└ Ш╧└ Ш∙└ Щ└ Щ/└ Щ[└ Щw└ ЩЩ└ Щ╡└ Щ═└ Щэ└ Ъ	└ Ъ)└ ЪW└ ЪЗ└ ЪЩ└ Ън└ Ъ╤└ Ъї└ Ы!└ ЫG└ Ыc└ ЫЗ└ ЫО└ ЫТ└ ЫУ└ ЫЯ└ Ыф└ Ь└ Ьk└ Ь╞└ Э4└ ЭХ└ ЭЇ└ Юr└ Юv└ Юx└ Юy└ Ю┤└ Я└ Я%└ Яl└ Я│└ Я╬└ Я╧└ Я█└ ЯЁ└ а└ а/└ а_└ аc└ аd└ аp└ аГ└ а╢└ а┘└ а°└ б└ б└ б└ б└ бQ└ бД└ б█└ в└ в(└ вK└ вS└ в}└ вп└ в╡└ в█└ в▀└ вр└ вь└ г└ г_└ гм└ г№└ д^└ дЗ└ дз└ д▌└ ду└ дф└ е└ е;└ е~└ еЫ└ е╡└ еъ└ ж└ жD└ жb└ ж└ жи└ ж╦└ ж·└ з%└ з@└ зД└ зб└ зк└ з▒└ з▓└ зэ└ и└ и<└ иR└ и[└ иa└ иb└ ив└ и╜└ иу└ й└ й└ й&└ й,└ й-└ йV└ йZ└ й[└ йy└ йа└ й╓└ к└ к└ к└ к└ кQ└ кg└ кК└ кд└ кк└ ко└ кп└ л └ л└ лL└ лc└ л|└ лЮ└ л╞└ м└ м8└ м9└ мК└ м╡└ мЄ└ н└ н└ н'└ н-└ н1└ н2└ нK└ нИ└ нк└ нф└ нъ└ о3└ оВ└ оУ└ о╒└ п└ п.└ пZ└ п^└ п_└ пЛ└ пп└ п╫└ пщ└ ░6└ ░K└ ░W└ ░]└ ░a└ ░c└ ░d└ ░п└ ░│└ ░ └ ▒└ ▒└ ▒%└ ▒t└ ▒П└ ▒У└ ▒ы└ ▒√└ ▒ └ ▓└ ▓└ ▓\└ ▓к└ ▓╢└ ▓щ└ │└ │└ │`└ │}└ │М└ │е└ │└└ │┌└ │ў└ ┤	└ ┤!└ ┤5└ ┤H└ ┤X└ ┤s└ ┤Ц└ ┤н└ ┤╬└ ┤ч└ ┤э└ ┤ю└ ╡└ ╡└ ╡k└ ╡и└ ╡╜└ ╡╛└ ╢└ ╢└ ╢O└ ╢U└ ╢е└ ╢Ў└ ╖G└ ╖t└ ╖z└ ╖╛└ ╖╒└ ╖╓└ ╕└ ╕└ ╕j└ ╕╛└ ╕─└ ╕▌└ ╕є└ ╕Ї└ ╣/└ ╣5└ ╣Г└ ╣╤└ ╣▐└ ╣ф└ ║0└ ║^└ ║d└ ║╡└ ╗└ ╗O└ ╗\└ ╗b└ ╗│└ ╝ └ ╝!└ ╝'└ ╝5└ ╝O└ ╝n└ ╝Т└ ╝╕└ ╝╨└ ╝°└ ╜└ ╜└ ╜└ ╜#└ ╜K└ ╜L└ ╜Т└ ╜Ш└ ╜ч└ ╛└ ╛:└ ╛;└ ╛h└ ╛n└ ╛╛└ ╛╦└ ╛Ў└ ╛ў└ ┐&└ ┐D└ ┐E└ ┐Е└ ┐Л└ ┐┬└ ┐ю└ ┐я└ └└ └ └ └q└ └║└ ┴└ ┴A└ ┴К└ ┴Р└ ┴з└ ┴├└ ┴─└ ┴¤└ ┬1└ ┬2└ ┬h└ ┬n└ ┬Н└ ┬и└ ┬й└ ┬ф└ ├└ ├└ ├?└ ├]└ ├^└ ├Ч└ ├Э└ ├р└ ├ц└ ─└ ─.└ ─/└ ─`└ ─f└ ─▓└ ─█└ ─▄└ ─ш└ ┼└ ┼*└ ┼:└ ┼k└ ┼Д└ ┼Ъ└ ┼╕└ ┼═└ ┼■└ ╞└ ╞2└ ╞<└ ╞E└ ╞]└ ╞Б└ ╞Э└ ╞▒└ ╞╦└ ╞ї└ ╟└ ╟4└ ╟U└ ╟Д└ ╟н└ ╟╒└ ╟ф└ ╚└ ╚#└ ╚?└ ╚c└ ╚Г└ ╚Т└ ╚Я└ ╚к└ ╚│└ ╚╒└ ╚ў└ ╔└ ╔3└ ╔:└ ╔>└ ╔@└ ╔A└ ╔Й└ ╔Н└ ╔╒└ ╔Ё└ ╔Ї└ ╩└ ╩S└ ╩Я└ ╩г└ ╩°└ ╦└ ╦└ ╦└ ╦└ ╦i└ ╦╖└ ╦├└ ╦Ў└ ╠└ ╠%└ ╠N└ ╠h└ ╠w└ ╠Р└ ╠о└ ╠╦└ ╠ш└ ╠·└ ═└ ═&└ ═9└ ═I└ ═d└ ═З└ ═Ю└ ═┐└ ═╪└ ═▐└ ═▀└ ╬└ ╬└ ╬a└ ╬u└ ╬Ж└ ╬З└ ╬╚└ ╬╬└ ╧└ ╧,└ ╧C└ ╧D└ ╧Л└ ╧╩└ ╧╨└ ╨└ ╨3└ ╨9└ ╨Г└ ╨╔└ ╨ш└ ╨ю└ ╤:└ ╤К└ ╤╓└ ╤Є└ ╤°└ ╥└ ╥-└ ╥.└ ╥d└ ╥j└ ╥╗└ ╙└ ╙:└ ╙@└ ╙└ ╙Е└ ╙╒└ ╙х└ ╙ы└ ╘<└ ╘Й└ ╘к└ ╘░└ ╘╛└ ╘ч└ ╒└ ╒2└ ╒d└ ╒|└ ╒Я└ ╒н└ ╒╕└ ╒р└ ╒ш└ ╒Є└ ╓└ ╓└ ╓^└ ╓d└ ╓│└ ╓с└ ╫└ ╫└ ╫4└ ╫:└ ╫К└ ╫Ч└ ╫┬└ ╫├└ ╫Є└ ╪└ ╪└ ╪Q└ ╪W└ ╪О└ ╪║└ ╪╗└ ╪ц└ ╪ь└ ┘=└ ┘Ж└ ┘╥└ ┌└ ┌V└ ┌\└ ┌s└ ┌П└ ┌Р└ ┌╔└ ┌¤└ ┌■└ █4└ █:└ █Y└ █t└ █u└ █░└ █╬└ █╧└ ▄└ ▄)└ ▄*└ ▄c└ ▄i└ ▄м└ ▄▓└ ▄у└ ▄·└ ▄√└ ▌,└ ▌2└ ▌~└ ▌з└ ▌и└ ▌┤└ ▌█└ ▌Ў└ ▐└ ▐7└ ▐h└ ▐Л└ ▐Х└ ▐░└ ▐╣└ ▐╤└ ▐ї└ ▀└ ▀%└ ▀?└ ▀i└ ▀К└ ▀и└ ▀╔└ ▀°└ р!└ рI└ рX└ рu└ рС└ р╖└ р█└ с└ с└ с└ с(└ с1└ сS└ сu└ сЭ└ с▒└ с╕└ с╝└ с╛└ с┐└ сё└ сї└ т;└ т?└ тИ└ т╘└ у"└ у&└ уt└ у╜└ ф
└ ф└ ф └ фj└ фм└ ф└└ ф─└ х└ х└ х └ х$└ хt└ хК└ х┌└ хч└ ц6└ цL└ цЩ└ цс└ ч└ ч5└ ч;└ чy└ чС└ ча└ ч▓└ ч╩└ ч█└ чэ└ ш└ ш└ ш&└ ш@└ шg└ ш{└ шЦ└ шм└ ш├└ шу└ ш№└ щ└ щ└ щI└ щO└ щЬ└ щ╪└ щ¤└ щ■└ ъ+└ ъ1└ ъВ└ ъХ└ ъ└└ ъ┴└ ъ√└ ы└ ы└ ыT└ ыs└ ыt└ ый└ ы═└ ы╬└ ы∙└ ы └ ьP└ ьЯ└ ьт└ э'└ э-└ эD└ э`└ эa└ эа└ эж└ эў└ ю└ ю└ юb└ юШ└ юЮ└ ю┘└ ю▀└ я.└ я|└ яв└ я├└ я─└ я·└ Ё └ Ё#└ Ё>└ Ё?└ Ёn└ ЁМ└ ЁН└ Ё╞└ Ё·└ Ё√└ ё1└ ёN└ ёO└ ёД└ ёв└ ёг└ ёш└ ёю└ Є:└ ЄY└ Є_└ Єм└ Є╝└ Є▀└ Єр└ є!└ є'└ єj└ єp└ єб└ є╕└ є╣└ є┼└ Ї└ Ї└ Ї4└ Ї:└ Їw└ Ї}└ Ї╝└ Їё└ ї└ ї └ ї!└ їp└ їА└ ї┤└ їт└ їц└ їч└ Ў-└ ЎV└ Ў\└ Ўи└ Ў∙└ ўI└ ўС└ ўр└ ўэ└ ўє└ °7└ °y└ °└ °└└ ∙└ ∙ └ ∙&└ ∙u└ ∙╡└ ∙╗└ ·└ ·6└ ·<└ ·~└ ·╠└ √└ √+└ √1└ √?└ √T└ √Б└ √╚└ √√└ №&└ №/└ №9└ №Z└ №v└ №Т└ №╢└ №┌└ №Є└ ¤└ ¤%└ ¤;└ ¤Y└ ¤s└ ¤М└ ¤г└ ¤─└ ¤█└ ¤Ё└ ■└ ■,└ ■R└ ■h└ ■Г└ ■е└ ■╧└ ■Ё└  
└  ,└  ]└  d└  Е└  н└  ╒└ └ E└ e└ П└ л└ ╫└ ё└└/└K└c└Г└Я└┐└э└└/└C└g└Л└╖└▌└∙└└$└(└)└5└g└Е└┴└ы└Ї└√└ └ └└Q└|└╔└)└~└─└╚└╩└╦└└M└Ч└Ь└└└х└└g└о└╧└└S└n└o└{└Р└з└╦└є└	└	Q└	f└	r└	x└	Э└	╧└	╒└
└
└
└
└
/└
h└
Л└
к└
┐└
├└
─└
╨└└(└[└Д└─└ы└└└^└f└М└╕└╠└└1└?└G└└Е└║└└└└└+└R└Ш└┘└└d└н└√└G└У└▐└)└0└1└E└]└v└Ы└┼└ё└└7└P└q└┼└└j└║└═└5└d└н└о└╨└■└└"└G└i└~└Я└н└╣└║└ї└└>└`└n└z└{└╛└└U└n└л└╩└ы└└h└╣└└#└Ш└░└└└┴└т└└"└.└/└Q└o└ж└╟└ы└└_└Ь└─└ы└└S└w└ъ└
└└.└=└J└K└f└А└М└Н└м└╒└№└└#└$└S└Ж└о└╬└ъ└∙└└└└)└T└q└y└А└Д└Е└Щ└х└ 3└ В└ ╬└  └!%└!J└!Ц└!╤└!ў└".└"4└"P└"T└"U└"h└"И└"├└"Ї└#└#C└#e└#k└#▓└#═└#╤└#╥└$└$I└$l└$Ъ└$├└$╒└% └%L└%P└%Q└%o└%Ы└%┘└%∙└&└&└&g└&И└&Р└&Ц└&Ъ└&Ь└&Э└&у└'└'!└''└'(└'M└'N└'Т└'╨└(└(;└(<└(Б└(┤└(╡└)	└)K└)L└)X└)З└)▐└*+└*k└*╡└+ └+D└+Ы└+┤└+═└+ш└,└,└,`└,к└,ъ└-=└-V└-o└-К└-г└-│└-э└.└.V└.И└.╠└/└/(└/4└/F└/P└/И└/б└/ё└0=└0s└0╡└0щ└1└1└1-└17└1└1╚└2	└2$└2O└2o└2Р└2г└2┌└3└3f└3У└3Я└3░└3╦└3ь└40└4~└4Щ└4п└4╜└4╤└4ё└5└5└5o└5╗└5┘└5х└6└6$└64└6М└6у└7└76└7m└7~└7Щ└7щ└8└8G└8U└8c└8m└8}└8М└8Ы└8б└8в└8╘└8╪└8┌└8█└9└93└97└9E└9I└9З└9╙└:└:(└:Y└:Z└:ж└:╔└:╩└:╓└:№└;D└;l└;p└;q└;}└;ж└;─└;╚└;╩└;╦└<└<C└<]└<a└<е└<Є└<Ў└=E└=Q└=U└=б└=ё└>2└>T└>u└>v└>е└>ж└?└?8└?`└?Е└?м└?╧└?╘└?╒└@└@;└@[└@x└@Ц└@╢└@┌└@√└A└A>└Ac└AЕ└Aи└Aн└Aо└A▄└B└BF└BJ└BK└BЩ└Bу└C=└C└CА└C┴└D└D└DH└DШ└Dч└E!└Ep└E╖└E╜└F└F└F|└F╞└Fх└G└G4└GN└G[└G~└GШ└GЮ└G─└H└H1└Hb└H╡└I└Is└I╥└J0└JL└JЗ└Jф└KE└Kг└L└L└L└L5└Lc└Lб└Lс└LЁ└M=└Mi└Mо└N└NZ└Nr└N▐└Nш└O!└OO└OW└On└OД└O╪└OЇ└P#└PR└PТ└P├└Q└Qw└Q╘└R2└RN└RЙ└Rц└SG└Sе└S░└S╣└S╨└Sц└T└T!└T'└TД└T▀└U└U└U└Ud└UП└Uъ└V5└VВ└V╥└Vы└W4└Wz└W┬└X└XT└XЬ└X▐└Y└YZ└YЬ└Y╓└Z└ZV└ZЪ└Z▐└["└[f└[к└[ю└\2└\v└\║└\■└]B└]К└]╓└^&└^t└^└└_└_^└_▓└`└`Z└`а└`т└a"└ah└a┤└a■└b@└bА└bЗ└b╝└b└└b┴└c └cy└cи└c█└d└d6└d[└dА└dг└d╙└d°└e/└eP└es└eЙ└eС└eЧ└e┼└eў└f*└fQ└fv└fЫ└f╛└fу└g└g3└gV└gl└gt└gz└gм└gт└h└hf└h│└i └iQ└iК└i▒└i╓└i√└j└jC└jv└jЧ└j║└j╨└j╪└j▐└k└kB└kw└kЮ└k├└kш└l└l0└la└lВ└lе└l╗└l├└l╔└m└m└m └m!└mR└mm└mЗ└mд└m╛└m╪└m▐└m▀└m№└n└n2└n3└n?└nw└nг└n╔└nЁ└nЇ└nЎ└nў└oF└oЦ└o└└o┘└o·└p└p(└p9└p?└p@└pL└pИ└pК└pЛ└p└└q	└qL└qQ└qR└q^└qs└q╗└qў└r└r'└r/└r5└rG└rK└rL└rX└rД└rЕ└rС└r┴└rт└r∙└s└s3└sR└sw└sТ└sо└s╚└sў└t└t/└tN└tu└tж└t╥└t └u└u└u&└u/└u6└u:└u;└uG└uj└uЧ└u▐└uъ└uю└uЁ└uё└vA└v}└vБ└v╟└w└wS└wТ└w╔└w╧└w°└x!└x0└xC└x`└xz└xА└xБ└x╩└xЇ└x·└y7└yW└yX└yд└yк└y∙└zI└zU└zn└zo└z{└z┴└{└{└{└{o└{╛└{╪└{▐└|#└|)└|9└|?└|Т└|д└|э└}F└}J└}K└}Я└}ъ└~└~
└~c└~С└~Ч└~з└~н└~щ└└_└д└┤└╨└ь└А=└АВ└А╒└Б%└Бq└Б├└Бч└Б └В
└В└В%└В/└ВC└ВG└ВI└ВJ└ВШ└В┼└В╔└Г└ГL└ГP└ГИ└Г┘└Д'└Дn└Д┐└Е└ЕX└Ев└Еы└Ж7└Жr└ЖЕ└ЖЙ└ЖЧ└ЖЫ└Жщ└З-└Зd└З|└ЗМ└ЗЩ└ЗЬ└ЗЭ└Зс└И1└Иf└Иj└И╣└Й└ЙR└ЙХ└Йх└К"└К&└Кs└К╜└Л└Л8└Л<└ЛН└Л╘└М└М3└М7└МИ└М┘└Н'└НI└НM└НЦ└Н▀└О-└О{└О╠└П└ПS└ПW└П▒└П┴└П╘└Р└Р6└Р<└Рe└РГ└РХ└Рд└Р╠└Р╥└Р╙└С└С
└СR└СЫ└Сб└Сэ└Т>└ТК└Т█└У+└Уy└У╔└Ф└Ф└Ф └Ф0└Ф6└ФГ└Ф╬└Х└Хm└Х╖└Х▄└ХЄ└Хє└Ц3└Ц9└ЦВ└Ц┐└Ц└└Ч└Ч9└Ч?└ЧИ└Ч╒└Ш%└Шl└Шr└Ш┬└Ш╚└Щ└Щi└Щ╖└Щы└Ъ└Ъ└ЪS└ЪY└Ъв└Ъъ└Ъы└Ы5└ЫВ└Ы╤└Ь"└Ь(└Ьx└ЬЭ└Ь╖└Ь╔└Ь╪└Ь▐└Ьє└Э└Э└ЭZ└ЭО└Эг└Э╣└Э╫└ЭЁ└ЮK└Ю_└Юг└Ює└Я └Я-└ЯЙ└ЯФ└ЯЭ└Яд└Яи└Яй└Я°└а└а└аl└а╢└а╝└б└бc└бБ└б╖└б╓└в$└в=└вq└вв└в┼└в·└гK└гx└г╢└г╘└гЎ└д└д/└д7└д[└дВ└дФ└дЬ└д─└д¤└е└е└е3└еА└е╔└ж└жU└жo└жа└жи└жї└зD└зa└зg└зН└з▒└з╡└з╢└з┬└и└и└и└иc└иС└иХ└иЦ└ив└ич└й└йF└йJ└йL└йM└йФ└й▒└й╧└й√└к└к?└кp└кТ└кУ└кЯ└к┤└к╦└кЇ└л└л^└лd└л└лГ└лД└лР└лг└лЁ└м└м1└мZ└м└мЯ└м╡└мў└м¤└н└н└н└н#└нD└нg└нС└нЯ└не└нх└о└оR└оt└оx└оy└оЕ└о╛└оф└п└п,└п2└п6└п7└пW└пЭ└п╣└п▌└░└░"└░+└░=└░A└░B└░m└░Ш└░к└░╒└░∙└▒└▒9└▒K└▒O└▒P└▒v└▒б└▒╚└▒ы└▓7└▓J└▓Q└▓Л└▓╜└│└│,└│z└│╩└│№└┤Н└┤ч└╡!└╡F└╡о└╡╣└╡┬└╡╚└╡╠└╡═└╡ь└╢.└╢B└╢`└╢Г└╢М└╢У└╢Ч└╢Ш└╢д└╢╦└╖└╖G└╖K└╖M└╖N└╖Х└╖к└╖о└╕ └╕P└╕Ю└╕┼└╕Ї└╣└╣"└╣]└╣v└╣Ф└╣┤└╣╩└╣с└╣Ї└║└║4└║D└║J└║K└║y└║└║╗└║╘└║╒└╗$└╗q└╗Ч└╗┤└╗╡└╗ь└╝	└╝
└╝@└╝^└╝_└╝о└╝┬└╝ю└╝я└╜;└╜Z└╜z└╜{└╜п└╜╩└╜╦└╛
└╛!└╛"└╛.└╛U└╛Ш└╛╟└╛ф└┐└┐%└┐:└┐c└┐~└┐Ч└┐н└┐┘└┐∙└└.└└O└└i└└М└└░└┴-└┴Q└┴h└┴}└┴Р└┴Я└┴м└┴╖└┴└└┴═└┴у└┬└┬'└┬X└┬u└┬К└┬ └├└├*└├5└├>└├D└├E└├e└├Ю└├╕└├╩└├ь└├ └─J└─k└─x└─и└─╗└┼└┼└┼b└┼}└┼░└┼┴└┼╨└┼▌└╞└╞└╞e└╞Д└╞╘└╟└╟└╟└╟'└╟.└╟P└╟╢└╟╝└╟╓└╟┌└╟█└╟ч└╚,└╚W└╚─└╔└╔^└╔b└╔d└╔e└╔░└╔╚└╔■└╩└╩2└╩S└╩p└╩У└╩│└╩╥└╩ё└╦└╦5└╦;└╦<└╦З└╦а└╦б└╦█└╠ └╠└╠I└╠n└╠o└╠╛└╠╔└╠щ└╠ъ└═└═=└═>└═К└═Ь└═─└═┼└╬└╬4└╬5└╬X└╬r└╬s└╬Я└╬┐└╬└└╬╠└╧└╧a└╧В└╧└└╧я└╧Ў└╧·└╧√└╨└╨A└╨g└╨▒└╨╨└╤└╤└╤└╤=└╤Х└╤╗└╤ъ└╥└╥o└╥Я└╥к└╥╣└╥ц└╥ю└╙└╙8└╙V└╙u└╙Х└╙╡└╙╒└╙ц└╙ю└╙√└╘E└╘d└╘Г└╘Й└╘К└╘Ў└╒B└╒z└╒╞└╒°└╓C└╓П└╓т└╫-└╫{└╫З└╫╖└╫ └╪└╪(└╪D└╪У└╪╥└┘└┘"└┘3└┘x└┘Э└┘│└┘╞└┘ш└┘Ї└┘■└┌"└┌R└┌Е└┌Ц└┌ь└█└█&└█9└█n└█z└█Д└█М└█Т└█─└█·└▄└▄"└▄9└▄h└▄И└▄Ь└▄н└▄╠└▄╓└▄ў└▌6└▌S└▌и└▌▐└▐	└▐└▐2└▐>└▐O└▐Д└▐О└▐Ц└▐Ь└▐╡└▐╣└▐║└▐╞└▐ў└▀'└▀]└▀Л└▀┼└▀∙└р+└р]└рЫ└р╪└р▄└р▌└с└с=└сf└с╕└с╥└с┌└ср└сЇ└с°└с·└с√└т7└т;└тК└тк└т╘└тщ└у└у)└уH└уp└уМ└уТ└уУ└у┘└уў└у°└ф.└ф4└фS└фn└фo└ф╬└фы└фё└хH└хЩ└х╛└х┐└хы└ц└ц└цE└цK└ц{└цЪ└цЫ└цз└ц▀└цс└цт└ч└чN└чO└ч[└чn└чО└чг└чз└чи└ч┤└ч█└ш5└шН└ш▌└шф└щ└щ└щ`└щ┐└щ┼└щ╞└ъ└ъ9└ъV└ъЧ└ъв└ъл└ъ▒└ъ▓└ы└ыn└ы╥└ь.└ьЖ└ь┌└э2└эИ└э¤└ю%└юГ└юк└я	└яP└яУ└я┌└Ё └ЁN└Ёz└Ё│└Ёъ└ё+└ёi└ёj└ё╕└ё╬└ё∙└Є&└Є_└ЄЪ└Єг└Єк└Є╟└є
└є+└єi└єЙ└єй└є┤└є╝└є▐└Ї└Ї>└Ї`└Їk└Їs└Їy└Їz└Ї╔└ї└ї-└їZ└їЛ└ї┬└їя└Ў└Ў└Ў	└Ў5└ЎL└Ўj└ЎА└Ўа└Ў┬└Ўю└ўG└ўr└ўК└ўо└ў╘└°└°5└°V└°М└°Ы└°╟└°є└∙└∙:└∙h└∙Ш└∙╧└∙ю└·0└·o└·в└·╓└·■└√└√&└√7└√F└√S└√^└√g└√n└√o└√Ш└√╝└√щ└№└№C└№]└№f└№l└№m└№И└№▒└№╔└№╨└№╘└№╒└¤└¤6└¤n└¤е└¤м└¤░└¤▓└¤│└¤ы└■└■'└■A└■^└■{└■Ы└■╛└■▐└ └ &└ ,└ -└ N└ l└ К└ и└ ╚└ у└ └ +└ ,└ 8└ _└ б└ х└J└к└·└└G└д└к└ └└:└{└Ж└П└Х└Ц└╒└E└L└M└u└▄└=└d└├└
└M└Ф└┌└└4└m└д└╓└└^└└└┴└х└	└	(└	z└	╔└
,└
2└
w└
x└
Т└
║└
р└
щ└└K└s└Ф└╕└т└@└j└М└║└т└└`└m└Й└м└└:└Y└h└И└л└ш└	└6└[└{└о└└└A└z└б└═└ └7└}└л└┬└╫└ъ└√└
└└"└+└2└3└P└{└Х└┴└╫└р└ц└ч└∙└¤└ └ └A└p└ж└╥└╙└└└ └Й└К└Ц└╦└═└╬└└%└)└X└\└Ш└Ь└ъ└Ї└7└E└]└Б└┤└у└└└└ └1└9└}└М└О└П└╓└ю└└.└M└`└Б└в└┴└т└Ў└·└№└¤└F└J└Ш└с└)└K└b└d└e└f└П└▄└)└t└Д└Ь└Ю└Я└╩└╦└└R└z└н└о└█└■└└J└Ы└╬└╒└╓└└c└d└В└Г└┼└╞└╥└└O└S└T└`└У└╨└╘└╒└с└ └ `└ d└ e└ q└ н└ ь└!└!J└!S└!Z└!^└!_└!k└!▒└!│└!┤└!ц└"└"└"H└"d└"Ч└"Ю└"Я└"╜└"╛└# └#A└#B└#N└#Е└#╚└#╠└#═└#ъ└#ы└$└$└$└$L└$Б└$Е└$Ж└$Т└$╔└%└%I└%}└%Е└%╣└%█└%у└&└&9└&A└&u└&Ч└&Я└&┐└&╟└&╦└&╠└&╪└'	└'T└'Й└'╜└'┼└'∙└("└(*└(^└(З└(П└(├└(ь└(Ї└)└)#└)'└)(└)B└)C└)O└)└)╕└)╝└)╜└)╔└)·└*7└*;└*<└*H└*y└*┐└*├└*─└*╨└+	└+7└+[└+Т└+╜└+╟└+Ё└+∙└, └,└,└,└,E└,s└,Ч└,═└-└-└-B└-x└-В└-╕└-э└-ў└.└.#└.*└..└./└.;└.v└.╦└.╧└.╨└.х└.ц└.Є└/'└/└/Г└/Д└/Р└/ц└/ч└/є└0J└0K└0W└0Л└0х└1└1]└1a└1b└1n└1╡└1╢└1ю└2*└2m└2╖└3└3h└3╛└4└4*└4q└4w└4╞└5└5$└5z└5╘└6 └61└6L└6Х└6Я└6╨└6ы└7└7&└7g└7|└7Г└7З└7Й└7К└7┤└7╘└7с└8 └8q└8Я└8ж└8з└8т└94└95└9S└9T└9Ц└9Ч└9г└9┘└: └:$└:%└:1└:i└:░└:┤└:╡└:┴└:Ї└;1└;5└;6└;B└;~└;╜└<└<└<└<└< └<f└<h└<i└<Т    (_kDebugMenus_kDefaultSubmenuIconSize_kLabelItemDefaultSpacing_kLabelItemMinSpacing_kMenuTraversalShortcuts_kMenuVerticalMinPadding_kMenuViewPadding"_kTopLevelMenuHorizontalMinPadding
MenuAnchor_MenuAnchorStateMenuControllerMenuBarMenuItemButton_MenuItemButtonStateCheckboxMenuButtonRadioMenuButtonSubmenuButton_SubmenuButtonState_SubmenuDirectionalFocusActionDismissMenuAction_LocalizedShortcutLabeler_MenuAnchorScope_MenuBarAnchor_MenuBarAnchorStateMenuAcceleratorCallbackBindingMenuAcceleratorLabel_MenuAcceleratorLabelState_MenuItemLabel_MenuLayout
_MenuPanel_MenuPanelState_Submenu_MouseCursor_debugMenuInfo_isCupertino_usesSymbolicModifiers_platformSupportsAccelerators_MenuBarDefaultsM3_MenuButtonDefaultsM3_MenuDefaultsM3 Ж╨